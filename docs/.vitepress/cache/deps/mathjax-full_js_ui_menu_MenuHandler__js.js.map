{
  "version": 3,
  "sources": ["../../../../node_modules/mathjax-full/ts/ui/menu/MenuHandler.ts"],
  "sourcesContent": ["/*************************************************************\n *\n *  Copyright (c) 2019-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Mixin that adds a context-menu to MathJax output\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {mathjax} from '../../mathjax.js';\n\nimport {STATE, newState} from '../../core/MathItem.js';\nimport {MathDocumentConstructor} from '../../core/MathDocument.js';\nimport {Handler} from '../../core/Handler.js';\nimport {ComplexityMathDocument, ComplexityMathItem} from '../../a11y/complexity.js';\nimport {ExplorerMathDocument, ExplorerMathItem} from '../../a11y/explorer.js';\nimport {AssistiveMmlMathDocument, AssistiveMmlMathItem} from '../../a11y/assistive-mml.js';\nimport {expandable} from '../../util/Options.js';\n\nimport {Menu} from './Menu.js';\n\n/*==========================================================================*/\n\n/**\n * Generic constructor for Mixins\n */\nexport type Constructor<T> = new(...args: any[]) => T;\n\n/**\n * Constructor for base MathItem for MenuMathItem\n */\nexport type A11yMathItemConstructor = {\n  new(...args: any[]): ComplexityMathItem<HTMLElement, Text, Document> &\n    ExplorerMathItem & AssistiveMmlMathItem<HTMLElement, Text, Document>;\n};\n\n/**\n * Constructor for base document for MenuMathDocument\n */\nexport type A11yDocumentConstructor =\n  MathDocumentConstructor<ComplexityMathDocument<HTMLElement, Text, Document> &\n  ExplorerMathDocument & AssistiveMmlMathDocument<HTMLElement, Text, Document>>;\n\n/*==========================================================================*/\n\n/**\n * Add STATE value for menus being added (after TYPESET and before INSERTED)\n */\nnewState('CONTEXT_MENU', 170);\n\n/**\n * The new function for MathItem that adds the context menu\n */\nexport interface MenuMathItem extends ComplexityMathItem<HTMLElement, Text, Document> {\n\n  /**\n   * @param {MenuMathDocument} document   The document where the menu is being added\n   * @param {boolean} force               True if menu should be added even if enableMenu is false\n   */\n  addMenu(document: MenuMathDocument, force?: boolean): void;\n\n  /**\n   * @param {MenuMathDocument} document   The document to check for if anything is being loaded\n   */\n  checkLoading(document: MenuMathDocument): void;\n\n}\n\n/**\n * The mixin for adding context menus to MathItems\n *\n * @param {B} BaseMathItem   The MathItem class to be extended\n * @return {MathMathItem}    The extended MathItem class\n *\n * @template B  The MathItem class to extend\n */\nexport function MenuMathItemMixin<B extends A11yMathItemConstructor>(\n  BaseMathItem: B\n): Constructor<MenuMathItem> & B {\n\n  return class extends BaseMathItem {\n\n    /**\n     * @param {MenuMathDocument} document   The document where the menu is being added\n     * @param {boolean} force               True if menu should be added even if enableMenu is false\n     */\n    public addMenu(document: MenuMathDocument, force: boolean = false) {\n      if (this.state() >= STATE.CONTEXT_MENU) return;\n      if (!this.isEscaped && (document.options.enableMenu || force)) {\n        document.menu.addMenu(this);\n      }\n      this.state(STATE.CONTEXT_MENU);\n    }\n\n    /**\n     * @param {MenuMathDocument} document   The document to check for if anything is being loaded\n     */\n    public checkLoading(document: MenuMathDocument) {\n      document.checkLoading();\n    }\n\n  };\n\n}\n\n/*==========================================================================*/\n\n/**\n * The properties needed in the MathDocument for context menus\n */\nexport interface MenuMathDocument extends ComplexityMathDocument<HTMLElement, Text, Document> {\n\n  /**\n   * The menu associated with this document\n   */\n  menu: Menu;\n\n  /**\n   * Add context menus to the MathItems in the MathDocument\n   *\n   * @return {MenuMathDocument}   The MathDocument (so calls can be chained)\n   */\n  addMenu(): MenuMathDocument;\n\n  /**\n   * Checks if there are files being loaded by the menu, and restarts the typesetting if so\n   *\n   * @return {MenuMathDocument}   The MathDocument (so calls can be chained)\n   */\n  checkLoading(): MenuMathDocument;\n}\n\n/**\n * The mixin for adding context menus to MathDocuments\n *\n * @param {B} BaseDocument     The MathDocument class to be extended\n * @return {MenuMathDocument}      The extended MathDocument class\n *\n * @template B  The MathDocument class to extend\n */\nexport function MenuMathDocumentMixin<B extends A11yDocumentConstructor>(\n  BaseDocument: B\n): Constructor<MenuMathDocument> & B {\n\n  return class extends BaseDocument {\n\n    /**\n     * @override\n     */\n    public static OPTIONS = {\n      //\n      //  These options are from the a11y extensions, which may not be loaded\n      //    initially, and so would cause \"undefined option\" error messages\n      //    if a user tries to configure them.  So we include them here.\n      //    They are overridden by the options from the extensions when\n      //    those are loaded (via ...BaseDocument.OPTIONS).\n      //\n      enableEnrichment: true,\n      enableComplexity: true,\n      enableExplorer: true,\n      enrichSpeech: 'none',\n      enrichError: (_doc: MenuMathDocument, _math: MenuMathItem, err: Error) =>\n        console.warn('Enrichment Error:', err),\n      ...BaseDocument.OPTIONS,\n      MenuClass: Menu,\n      menuOptions: Menu.OPTIONS,\n      enableMenu: true,\n      sre: (BaseDocument.OPTIONS.sre || expandable({})),\n      a11y: (BaseDocument.OPTIONS.a11y || expandable({})),\n      renderActions: expandable({\n        ...BaseDocument.OPTIONS.renderActions,\n        addMenu: [STATE.CONTEXT_MENU],\n        checkLoading: [STATE.UNPROCESSED + 1]\n      })\n    };\n\n    /**\n     * The menu associated with this document\n     */\n    public menu: Menu;\n\n    /**\n     * Extend the MathItem class used for this MathDocument\n     *\n     * @override\n     * @constructor\n     */\n    constructor(...args: any[]) {\n      super(...args);\n      this.menu = new this.options.MenuClass(this, this.options.menuOptions);\n      const ProcessBits = (this.constructor as typeof BaseDocument).ProcessBits;\n      if (!ProcessBits.has('context-menu')) {\n        ProcessBits.allocate('context-menu');\n      }\n      this.options.MathItem = MenuMathItemMixin<A11yMathItemConstructor>(this.options.MathItem);\n    }\n\n    /**\n     * Add context menus to the MathItems in the MathDocument\n     *\n     * @return {MenuMathDocument}   The MathDocument (so calls can be chained)\n     */\n    public addMenu(): MenuMathDocument {\n      if (!this.processed.isSet('context-menu')) {\n        for (const math of this.math) {\n          (math as MenuMathItem).addMenu(this);\n        }\n        this.processed.set('context-menu');\n      }\n      return this;\n    }\n\n    /**\n     * Checks if there are files being loaded by the menu, and restarts the typesetting if so\n     *\n     * @return {MenuMathDocument}   The MathDocument (so calls can be chained)\n     */\n    public checkLoading(): MenuMathDocument {\n      if (this.menu.isLoading) {\n        mathjax.retryAfter(this.menu.loadingPromise.catch((err) => console.log(err)));\n      }\n      const settings = this.menu.settings;\n      if (settings.collapsible) {\n        this.options.enableComplexity = true;\n        this.menu.checkComponent('a11y/complexity');\n      }\n      if (settings.explorer) {\n        this.options.enableEnrichment = true;\n        this.options.enableExplorer = true;\n        this.menu.checkComponent('a11y/explorer');\n      }\n      return this;\n    }\n\n    /**\n     * @override\n     */\n    public state(state: number, restore: boolean = false) {\n      super.state(state, restore);\n      if (state < STATE.CONTEXT_MENU) {\n        this.processed.clear('context-menu');\n      }\n      return this;\n    }\n\n    /**\n     * @override\n     */\n    public updateDocument() {\n      super.updateDocument();\n      (this.menu.menu.store as any).sort();\n      return this;\n    }\n\n  };\n\n}\n\n/*==========================================================================*/\n\n/**\n * Add context-menu support to a Handler instance\n *\n * @param {Handler} handler   The Handler instance to enhance\n * @return {Handler}          The handler that was modified (for purposes of chaining extensions)\n */\nexport function MenuHandler(handler: Handler<HTMLElement, Text, Document>): Handler<HTMLElement, Text, Document> {\n  handler.documentClass = MenuMathDocumentMixin<A11yDocumentConstructor>(handler.documentClass as any);\n  return handler;\n}\n"],
  "mappings": "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",
  "names": []
}
