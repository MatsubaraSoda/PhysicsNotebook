{
  "version": 3,
  "sources": ["../../../../node_modules/mathjax-full/ts/components/global.ts", "../../../../node_modules/mj-context-menu/ts/key_navigatable.ts", "../../../../node_modules/mj-context-menu/ts/mouse_navigatable.ts", "../../../../node_modules/mj-context-menu/ts/abstract_navigatable.ts", "../../../../node_modules/mj-context-menu/ts/menu_element.ts", "../../../../node_modules/mj-context-menu/ts/abstract_postable.ts", "../../../../node_modules/mj-context-menu/ts/html_classes.ts", "../../../../node_modules/mj-context-menu/ts/abstract_entry.ts", "../../../../node_modules/mj-context-menu/ts/menu_util.ts", "../../../../node_modules/mj-context-menu/ts/abstract_item.ts", "../../../../node_modules/mj-context-menu/ts/item_submenu.ts", "../../../../node_modules/mj-context-menu/ts/abstract_menu.ts", "../../../../node_modules/mj-context-menu/ts/menu_store.ts", "../../../../node_modules/mj-context-menu/ts/variable_pool.ts", "../../../../node_modules/mj-context-menu/ts/context_menu.ts", "../../../../node_modules/mathjax-full/ts/ui/menu/MJContextMenu.ts", "../../../../node_modules/mathjax-full/ts/core/Tree/Visitor.ts", "../../../../node_modules/mathjax-full/ts/core/MmlTree/MmlVisitor.ts", "../../../../node_modules/mathjax-full/ts/core/MmlTree/SerializedMmlVisitor.ts", "../../../../node_modules/mathjax-full/ts/ui/menu/MmlVisitor.ts", "../../../../node_modules/mj-context-menu/ts/close_button.ts", "../../../../node_modules/mj-context-menu/ts/info.ts", "../../../../node_modules/mathjax-full/ts/ui/menu/SelectableInfo.ts", "../../../../node_modules/mj-context-menu/ts/item_command.ts", "../../../../node_modules/mj-context-menu/ts/variable.ts", "../../../../node_modules/mj-context-menu/ts/abstract_variable_item.ts", "../../../../node_modules/mj-context-menu/ts/item_checkbox.ts", "../../../../node_modules/mj-context-menu/ts/item_combo.ts", "../../../../node_modules/mj-context-menu/ts/item_label.ts", "../../../../node_modules/mj-context-menu/ts/item_radio.ts", "../../../../node_modules/mj-context-menu/ts/item_rule.ts", "../../../../node_modules/mj-context-menu/ts/item_slider.ts", "../../../../node_modules/mj-context-menu/ts/sub_menu.ts", "../../../../node_modules/mj-context-menu/ts/selection_box.ts", "../../../../node_modules/mj-context-menu/ts/parser_factory.ts", "../../../../node_modules/mj-context-menu/ts/parse.ts", "../../../../node_modules/mj-context-menu/ts/css_util.ts", "../../../../node_modules/speech-rule-engine/js/rule_engine/dynamic_cstr.js", "../../../../node_modules/speech-rule-engine/js/common/engine_const.js", "../../../../node_modules/speech-rule-engine/js/common/variables.js", "../../../../node_modules/speech-rule-engine/js/common/system_external.js", "../../../../node_modules/speech-rule-engine/js/common/debugger.js", "../../../../node_modules/speech-rule-engine/js/common/engine.js", "../../../../node_modules/speech-rule-engine/js/common/xpath_util.js", "../../../../node_modules/speech-rule-engine/js/common/dom_util.js", "../../../../node_modules/speech-rule-engine/js/speech_rules/alphabet.js", "../../../../node_modules/speech-rule-engine/js/semantic_tree/semantic_meaning.js", "../../../../node_modules/speech-rule-engine/js/l10n/transformers.js", "../../../../node_modules/speech-rule-engine/js/l10n/messages.js", "../../../../node_modules/speech-rule-engine/js/l10n/locale.js", "../../../../node_modules/speech-rule-engine/js/l10n/locale_util.js", "../../../../node_modules/speech-rule-engine/js/rule_engine/grammar.js", "../../../../node_modules/speech-rule-engine/js/l10n/numbers/numbers_af.js", "../../../../node_modules/speech-rule-engine/js/l10n/locales/locale_af.js", "../../../../node_modules/speech-rule-engine/js/l10n/numbers/numbers_ca.js", "../../../../node_modules/speech-rule-engine/js/l10n/locales/locale_ca.js", "../../../../node_modules/speech-rule-engine/js/l10n/numbers/numbers_da.js", "../../../../node_modules/speech-rule-engine/js/l10n/locales/locale_da.js", "../../../../node_modules/speech-rule-engine/js/l10n/numbers/numbers_de.js", "../../../../node_modules/speech-rule-engine/js/l10n/locales/locale_de.js", "../../../../node_modules/speech-rule-engine/js/l10n/numbers/numbers_en.js", "../../../../node_modules/speech-rule-engine/js/l10n/locales/locale_en.js", "../../../../node_modules/speech-rule-engine/js/l10n/numbers/numbers_es.js", "../../../../node_modules/speech-rule-engine/js/l10n/locales/locale_es.js", "../../../../node_modules/speech-rule-engine/js/l10n/locales/locale_euro.js", "../../../../node_modules/speech-rule-engine/js/l10n/numbers/numbers_fr.js", "../../../../node_modules/speech-rule-engine/js/l10n/locales/locale_fr.js", "../../../../node_modules/speech-rule-engine/js/l10n/numbers/numbers_hi.js", "../../../../node_modules/speech-rule-engine/js/l10n/locales/locale_hi.js", "../../../../node_modules/speech-rule-engine/js/l10n/numbers/numbers_ko.js", "../../../../node_modules/speech-rule-engine/js/l10n/locales/locale_ko.js", "../../../../node_modules/speech-rule-engine/js/l10n/numbers/numbers_it.js", "../../../../node_modules/speech-rule-engine/js/l10n/locales/locale_it.js", "../../../../node_modules/speech-rule-engine/js/l10n/numbers/numbers_nn.js", "../../../../node_modules/speech-rule-engine/js/l10n/locales/locale_nb.js", "../../../../node_modules/speech-rule-engine/js/l10n/numbers/numbers_nemeth.js", "../../../../node_modules/speech-rule-engine/js/l10n/locales/locale_nemeth.js", "../../../../node_modules/speech-rule-engine/js/l10n/locales/locale_nn.js", "../../../../node_modules/speech-rule-engine/js/l10n/numbers/numbers_sv.js", "../../../../node_modules/speech-rule-engine/js/l10n/locales/locale_sv.js", "../../../../node_modules/speech-rule-engine/js/l10n/l10n.js", "../../../../node_modules/speech-rule-engine/js/common/browser_util.js", "../../../../node_modules/speech-rule-engine/js/common/file_util.js", "../../../../node_modules/speech-rule-engine/js/semantic_tree/semantic_attr.js", "../../../../node_modules/speech-rule-engine/js/rule_engine/math_simple_store.js", "../../../../node_modules/speech-rule-engine/js/rule_engine/math_compound_store.js", "../../../../node_modules/speech-rule-engine/js/audio/span.js", "../../../../node_modules/speech-rule-engine/js/audio/auditory_description.js", "../../../../node_modules/speech-rule-engine/js/speech_rules/speech_rules.js", "../../../../node_modules/speech-rule-engine/js/rule_engine/store_util.js", "../../../../node_modules/speech-rule-engine/js/semantic_tree/semantic_annotator.js", "../../../../node_modules/speech-rule-engine/js/semantic_tree/semantic_annotations.js", "../../../../node_modules/speech-rule-engine/js/speech_rules/clearspeak_util.js", "../../../../node_modules/speech-rule-engine/js/common/base_util.js", "../../../../node_modules/speech-rule-engine/js/semantic_tree/semantic_heuristic_factory.js", "../../../../node_modules/speech-rule-engine/js/semantic_tree/semantic_ordering.js", "../../../../node_modules/speech-rule-engine/js/semantic_tree/semantic_default.js", "../../../../node_modules/speech-rule-engine/js/semantic_tree/semantic_util.js", "../../../../node_modules/speech-rule-engine/js/semantic_tree/semantic_node.js", "../../../../node_modules/speech-rule-engine/js/semantic_tree/semantic_node_factory.js", "../../../../node_modules/speech-rule-engine/js/semantic_tree/semantic_pred.js", "../../../../node_modules/speech-rule-engine/js/semantic_tree/semantic_processor.js", "../../../../node_modules/speech-rule-engine/js/speech_rules/mathspeak_util.js", "../../../../node_modules/speech-rule-engine/js/speech_rules/numbers_util.js", "../../../../node_modules/speech-rule-engine/js/speech_rules/clearspeak_rules.js", "../../../../node_modules/speech-rule-engine/js/speech_rules/mathspeak_french_util.js", "../../../../node_modules/speech-rule-engine/js/speech_rules/mathspeak_korean_util.js", "../../../../node_modules/speech-rule-engine/js/speech_rules/unit_util.js", "../../../../node_modules/speech-rule-engine/js/speech_rules/mathspeak_rules.js", "../../../../node_modules/speech-rule-engine/js/speech_rules/nemeth_util.js", "../../../../node_modules/speech-rule-engine/js/speech_rules/other_rules.js", "../../../../node_modules/speech-rule-engine/js/speech_rules/speech_rule_stores.js", "../../../../node_modules/speech-rule-engine/js/rule_engine/speech_rule.js", "../../../../node_modules/speech-rule-engine/js/rule_engine/speech_rule_functions.js", "../../../../node_modules/speech-rule-engine/js/rule_engine/speech_rule_context.js", "../../../../node_modules/speech-rule-engine/js/rule_engine/base_rule_store.js", "../../../../node_modules/speech-rule-engine/js/rule_engine/math_store.js", "../../../../node_modules/speech-rule-engine/js/rule_engine/braille_store.js", "../../../../node_modules/speech-rule-engine/js/indexing/trie_node.js", "../../../../node_modules/speech-rule-engine/js/indexing/abstract_trie_node.js", "../../../../node_modules/speech-rule-engine/js/indexing/trie_node_factory.js", "../../../../node_modules/speech-rule-engine/js/indexing/trie.js", "../../../../node_modules/speech-rule-engine/js/rule_engine/speech_rule_engine.js", "../../../../node_modules/speech-rule-engine/js/speech_rules/alphabet_generator.js", "../../../../node_modules/speech-rule-engine/js/speech_rules/math_map.js", "../../../../node_modules/speech-rule-engine/js/common/engine_setup.js", "../../../../node_modules/speech-rule-engine/js/common/event_util.js", "../../../../node_modules/speech-rule-engine/js/audio/audio_util.js", "../../../../node_modules/speech-rule-engine/js/audio/abstract_audio_renderer.js", "../../../../node_modules/speech-rule-engine/js/audio/markup_renderer.js", "../../../../node_modules/speech-rule-engine/js/audio/acss_renderer.js", "../../../../node_modules/speech-rule-engine/js/audio/xml_renderer.js", "../../../../node_modules/speech-rule-engine/js/audio/layout_renderer.js", "../../../../node_modules/speech-rule-engine/js/audio/punctuation_renderer.js", "../../../../node_modules/speech-rule-engine/js/audio/sable_renderer.js", "../../../../node_modules/speech-rule-engine/js/audio/ssml_renderer.js", "../../../../node_modules/speech-rule-engine/js/audio/string_renderer.js", "../../../../node_modules/speech-rule-engine/js/audio/aural_rendering.js", "../../../../node_modules/speech-rule-engine/js/semantic_tree/semantic_parser.js", "../../../../node_modules/speech-rule-engine/js/semantic_tree/semantic_mathml.js", "../../../../node_modules/speech-rule-engine/js/semantic_tree/semantic_heuristic.js", "../../../../node_modules/speech-rule-engine/js/enrich_mathml/enrich_attr.js", "../../../../node_modules/speech-rule-engine/js/semantic_tree/semantic_skeleton.js", "../../../../node_modules/speech-rule-engine/js/semantic_tree/semantic_heuristics.js", "../../../../node_modules/speech-rule-engine/js/semantic_tree/semantic_tree.js", "../../../../node_modules/speech-rule-engine/js/semantic_tree/semantic.js", "../../../../node_modules/speech-rule-engine/js/enrich_mathml/enrich_case.js", "../../../../node_modules/speech-rule-engine/js/enrich_mathml/enrich_mathml.js", "../../../../node_modules/speech-rule-engine/js/enrich_mathml/abstract_enrich_case.js", "../../../../node_modules/speech-rule-engine/js/enrich_mathml/case_binomial.js", "../../../../node_modules/speech-rule-engine/js/enrich_mathml/case_double_script.js", "../../../../node_modules/speech-rule-engine/js/enrich_mathml/case_multiindex.js", "../../../../node_modules/speech-rule-engine/js/enrich_mathml/case_multiscripts.js", "../../../../node_modules/speech-rule-engine/js/enrich_mathml/case_tensor.js", "../../../../node_modules/speech-rule-engine/js/enrich_mathml/case_embellished.js", "../../../../node_modules/speech-rule-engine/js/enrich_mathml/case_empheq.js", "../../../../node_modules/speech-rule-engine/js/enrich_mathml/case_limit.js", "../../../../node_modules/speech-rule-engine/js/enrich_mathml/case_line.js", "../../../../node_modules/speech-rule-engine/js/enrich_mathml/case_proof.js", "../../../../node_modules/speech-rule-engine/js/enrich_mathml/case_table.js", "../../../../node_modules/speech-rule-engine/js/enrich_mathml/case_text.js", "../../../../node_modules/speech-rule-engine/js/enrich_mathml/enrich_case_factory.js", "../../../../node_modules/speech-rule-engine/js/enrich_mathml/enrich.js", "../../../../node_modules/speech-rule-engine/js/highlighter/abstract_highlighter.js", "../../../../node_modules/speech-rule-engine/js/highlighter/css_highlighter.js", "../../../../node_modules/speech-rule-engine/js/highlighter/chtml_highlighter.js", "../../../../node_modules/speech-rule-engine/js/highlighter/color_picker.js", "../../../../node_modules/speech-rule-engine/js/highlighter/html_highlighter.js", "../../../../node_modules/speech-rule-engine/js/highlighter/mml_css_highlighter.js", "../../../../node_modules/speech-rule-engine/js/highlighter/mml_highlighter.js", "../../../../node_modules/speech-rule-engine/js/highlighter/svg_highlighter.js", "../../../../node_modules/speech-rule-engine/js/highlighter/svg_v3_highlighter.js", "../../../../node_modules/speech-rule-engine/js/highlighter/highlighter_factory.js", "../../../../node_modules/speech-rule-engine/js/walker/walker_util.js", "../../../../node_modules/speech-rule-engine/js/walker/rebuild_stree.js", "../../../../node_modules/speech-rule-engine/js/speech_generator/speech_generator_util.js", "../../../../node_modules/speech-rule-engine/js/speech_rules/clearspeak_preferences.js", "../../../../node_modules/speech-rule-engine/js/speech_generator/abstract_speech_generator.js", "../../../../node_modules/speech-rule-engine/js/speech_generator/adhoc_speech_generator.js", "../../../../node_modules/speech-rule-engine/js/speech_generator/color_generator.js", "../../../../node_modules/speech-rule-engine/js/speech_generator/direct_speech_generator.js", "../../../../node_modules/speech-rule-engine/js/speech_generator/dummy_speech_generator.js", "../../../../node_modules/speech-rule-engine/js/speech_generator/tree_speech_generator.js", "../../../../node_modules/speech-rule-engine/js/speech_generator/node_speech_generator.js", "../../../../node_modules/speech-rule-engine/js/speech_generator/summary_speech_generator.js", "../../../../node_modules/speech-rule-engine/js/speech_generator/speech_generator_factory.js", "../../../../node_modules/speech-rule-engine/js/walker/focus.js", "../../../../node_modules/speech-rule-engine/js/walker/walker.js", "../../../../node_modules/speech-rule-engine/js/walker/abstract_walker.js", "../../../../node_modules/speech-rule-engine/js/walker/dummy_walker.js", "../../../../node_modules/speech-rule-engine/js/walker/levels.js", "../../../../node_modules/speech-rule-engine/js/walker/semantic_walker.js", "../../../../node_modules/speech-rule-engine/js/walker/syntax_walker.js", "../../../../node_modules/speech-rule-engine/js/walker/table_walker.js", "../../../../node_modules/speech-rule-engine/js/walker/walker_factory.js", "../../../../node_modules/speech-rule-engine/js/common/processor.js", "../../../../node_modules/speech-rule-engine/js/common/processor_factory.js", "../../../../node_modules/speech-rule-engine/js/common/system.js", "../../../../node_modules/mathjax-full/ts/a11y/mathmaps.ts", "../../../../node_modules/mathjax-full/ts/a11y/sre.ts", "../../../../node_modules/mathjax-full/ts/ui/menu/Menu.ts"],
  "sourcesContent": ["/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Handles using MathJax global as config object, and to hold\n *                methods and data to be available to the page author\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {VERSION} from './version.js';\n\n/**\n * The MathJax variable as a configuration object\n */\nexport interface MathJaxConfig {\n  [name: string]: any;\n}\n\n/**\n * The object used to store class and other definitions\n * from the various MathJax modules so that they can be shared\n * among the various component webpack files\n */\nexport interface MathJaxLibrary {\n  [name: string]: any;\n}\n\n/**\n * The MathJax global object structure\n */\nexport interface MathJaxObject {\n  version: string;\n  _: MathJaxLibrary;\n  config: MathJaxConfig;\n}\n\ndeclare const global: {MathJax: MathJaxObject | MathJaxConfig};\n\n/**\n * @param {any} x     An item to test if it is an object\n * @return {boolean}  True if the item is a non-null object\n */\nexport function isObject(x: any): boolean {\n  return typeof x === 'object' && x !== null;\n}\n\n/**\n * Combine user-produced configuration with existing defaults.  Values\n * from src will replace those in dst.\n *\n * @param {any} dst      The destination config object (to be merged into)\n * @param {any} src      The source configuration object (to replace defaul values in dst}\n * @return {any}         The resulting (modified) config object\n */\nexport function combineConfig(dst: any, src: any): any {\n  for (const id of Object.keys(src)) {\n    if (id === '__esModule') continue;\n    if (isObject(dst[id]) && isObject(src[id]) &&\n        !(src[id] instanceof Promise) /* needed for IE polyfill */) {\n      combineConfig(dst[id], src[id]);\n    } else if (src[id] !== null && src[id] !== undefined) {\n      dst[id] = src[id];\n    }\n  }\n  return dst;\n}\n\n/**\n * Combine defaults into a configuration that may already have\n * user-provided values.  Values in src only go into dst if\n * there is not already a value for that key.\n *\n * @param {any} dst      The destination config object (to be merged into)\n * @param {string} name  The id of the configuration block to modify (created if doesn't exist)\n * @param {any} src      The source configuration object (to replace defaul values in dst}\n * @return {any}         The resulting (modified) config object\n */\nexport function combineDefaults(dst: any, name: string, src: any): any {\n  if (!dst[name]) {\n    dst[name] = {};\n  }\n  dst = dst[name];\n  for (const id of Object.keys(src)) {\n    if (isObject(dst[id]) && isObject(src[id])) {\n      combineDefaults(dst, id, src[id]);\n    } else if (dst[id] == null && src[id] != null) {\n      dst[id] = src[id];\n    }\n  }\n  return dst;\n}\n\n/**\n * Combine configuration or data with the existing MathJax object\n *\n * @param {any} config   The data to be merged into the MathJax object\n */\nexport function combineWithMathJax(config: any): MathJaxObject {\n  return combineConfig(MathJax, config);\n}\n\n\n/**\n * Create the MathJax global, if it doesn't exist\n */\nif (typeof global.MathJax === 'undefined') {\n  global.MathJax = {} as MathJaxConfig;\n}\n\n/**\n * If the global is currently a config object, convert it to the\n * MathJaxObject containing the version, class library, and user\n * configuration.\n */\nif (!(global.MathJax as MathJaxObject).version) {\n  global.MathJax = {\n    version: VERSION,\n    _: {},\n    config: global.MathJax\n  };\n}\n\n/**\n * Export the global MathJax object for convenience\n */\nexport const MathJax = global.MathJax as MathJaxObject;\n", null, null, null, null, null, null, null, null, null, null, null, null, null, null, "/*************************************************************\n *\n *  Copyright (c) 2019-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements a subclass of ContextMenu specific to MathJax\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {MathItem} from '../../core/MathItem.js';\nimport {MmlNode} from '../../core/MmlTree/MmlNode.js';\nimport {SelectableInfo} from './SelectableInfo.js';\n\nimport {ContextMenu} from 'mj-context-menu/js/context_menu.js';\nimport {SubMenu} from 'mj-context-menu/js/sub_menu.js';\nimport {Submenu} from 'mj-context-menu/js/item_submenu.js';\nimport {Menu} from 'mj-context-menu/js/menu.js';\nimport {Item} from 'mj-context-menu/js/item.js';\n\n/*==========================================================================*/\n\n/**\n * The subclass of ContextMenu that handles the needs of the MathJax\n *   contextual menu (in particular, tying it to a MathItem).\n */\nexport class MJContextMenu extends ContextMenu {\n\n  /**\n   * Static map to hold methods for re-computing dynamic submenus.\n   * @type {Map<string, (menu: MJContextMenu, sub: Submenu)}\n   */\n  public static DynamicSubmenus: Map<string,\n  (menu: MJContextMenu, sub: Submenu) =>\n    SubMenu> = new Map();\n\n  /**\n   * The MathItem that has posted the menu\n   */\n  public mathItem: MathItem<HTMLElement, Text, Document> = null;\n\n  /**\n   * The annotation selected in the Annotation submenu (neede for the info box to be able to show it)\n   */\n  public annotation: string = '';\n\n  /**\n   * The info box for showing annotations (created by the Menu object that contains this MJContextMenu)\n   */\n  public showAnnotation: SelectableInfo;\n\n  /**\n   * The function to copy the selected annotation (set by the containing Menu item)\n   */\n  public copyAnnotation: () => void;\n\n  /**\n   * The annotation types to look for in a MathItem\n   */\n  public annotationTypes: {[type: string]: string[]} = {};\n\n  /*======================================================================*/\n\n  /**\n   * Before posting the menu, set the name for the ShowAs and CopyToClipboard menus,\n   *   enable/disable the semantics check item, and get the annotations for the MathItem\n   *\n   * @override\n   */\n  public post(x?: any, y?: number) {\n    if (this.mathItem) {\n      if (y !== undefined) {\n        // FIXME:  handle error output jax\n        const input = this.mathItem.inputJax.name;\n        const original = this.findID('Show', 'Original');\n        original.content = (input === 'MathML' ? 'Original MathML' : input + ' Commands');\n        const clipboard = this.findID('Copy', 'Original');\n        clipboard.content = original.content;\n        const semantics = this.findID('Settings', 'semantics');\n        input === 'MathML' ? semantics.disable() : semantics.enable();\n        this.getAnnotationMenu();\n        this.dynamicSubmenus();\n      }\n      super.post(x, y);\n    }\n  }\n\n  /**\n   * Clear the stored MathItem when the menu is removed\n   *\n   * @override\n   */\n  public unpost() {\n    super.unpost();\n    this.mathItem = null;\n  }\n\n  /*======================================================================*/\n\n  /**\n   * Find an item in the menu (recursively descending into submenus, if needed)\n   *\n   * @param {string[]} names   The menu IDs to look for\n   * @returns {Item}         The menu item (or null if not found)\n   */\n  public findID(...names: string[]) {\n    let menu = this as Menu;\n    let item = null as Item;\n    for (const name of names) {\n      if (menu) {\n        item = menu.find(name);\n        menu = (item instanceof Submenu ? item.submenu : null);\n      } else {\n        item = null;\n      }\n    }\n    return item;\n  }\n\n  /*======================================================================*/\n\n  /**\n   * Look up the annotations in the MathItem and set the ShowAs and CopyToClipboard menus\n   */\n  protected getAnnotationMenu() {\n    const annotations = this.getAnnotations(this.getSemanticNode());\n    this.createAnnotationMenu('Show', annotations, () => this.showAnnotation.post());\n    this.createAnnotationMenu('Copy', annotations, () => this.copyAnnotation());\n  }\n\n  /**\n   * Find the top-most semantics element that encloses the contents of the expression (if any)\n   *\n   * @returns {MmlNode | null}   The semantics node that was found (or null)\n   */\n  protected getSemanticNode(): MmlNode | null {\n    let node: MmlNode = this.mathItem.root;\n    while (node && !node.isKind('semantics'))  {\n      if (node.isToken || node.childNodes.length !== 1) return null;\n      node = node.childNodes[0] as MmlNode;\n    }\n    return node;\n  }\n\n  /**\n   * @param {MmlNode} node           The semantics node whose annotations are to be obtained\n   * @returns {[string, string][]}   Array of [type, text] where the type is the annotation type\n   *                                   and text is the content of the annotation of that type\n   */\n  protected getAnnotations(node: MmlNode): [string, string][] {\n    const annotations = [] as [string, string][];\n    if (!node) return annotations;\n    for (const child of node.childNodes as MmlNode[]) {\n      if (child.isKind('annotation')) {\n        const match = this.annotationMatch(child);\n        if (match) {\n          const value = child.childNodes.reduce((text, chars) => text + chars.toString(), '');\n          annotations.push([match, value]);\n        }\n      }\n    }\n    return annotations;\n  }\n\n  /**\n   * @param {MmlNode} child    The annotation node to check if its encoding is one of the displayable ones\n   * @returns {string | null}         The annotation type if it does, or null if it doesn't\n   */\n  protected annotationMatch(child: MmlNode): string | null {\n    const encoding = child.attributes.get('encoding') as string;\n    for (const type of Object.keys(this.annotationTypes)) {\n      if (this.annotationTypes[type].indexOf(encoding) >= 0) {\n        return type;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Create a submenu from the available annotations and attach it to the proper menu item\n   *\n   * @param {string} id                        The id of the menu to attach to (Show or Copy)\n   * @param {[string, string][]} annotations   The annotations to use for the submenu\n   * @param {() => void} action                The action to perform when the annotation is selected\n   */\n  protected createAnnotationMenu(id: string, annotations: [string, string][], action: () => void) {\n    const menu = this.findID(id, 'Annotation') as Submenu;\n    menu.submenu = this.factory.get('subMenu')(this.factory, {\n      items: annotations.map(([type, value]) => {\n        return {\n          type: 'command',\n          id: type,\n          content: type,\n          action: () => {\n            this.annotation = value;\n            action();\n          }\n        };\n      }),\n      id: 'annotations'\n    }, menu);\n    if (annotations.length) {\n      menu.enable();\n    } else {\n      menu.disable();\n    }\n  }\n\n  /*======================================================================*/\n\n  /**\n   * Renews the dynamic submenus.\n   */\n  public dynamicSubmenus() {\n    for (const [id, method] of MJContextMenu.DynamicSubmenus) {\n      const menu = this.find(id) as Submenu;\n      if (!menu) continue;\n      const sub = method(this, menu);\n      menu.submenu = sub;\n      if (sub.items.length) {\n        menu.enable();\n      } else {\n        menu.disable();\n      }\n    }\n  }\n\n}\n", "/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  The generic visitor class for node trees\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {Node, NodeClass, AbstractNode} from './Node.js';\nimport {NodeFactory} from './NodeFactory.js';\n\n/**\n * The type for the functions associated with each node class\n */\nexport type VisitorFunction = (visitor: NodeFactory<Node, NodeClass>, node: Node, ...args: any[]) => any;\n\n/*****************************************************************/\n/**\n *  Implements the Visitor interface\n */\n\nexport interface Visitor {\n\n  /**\n   * Visit the tree rooted at the given node (passing along any needed parameters)\n   *\n   * @param {Node} tree   The node that is the root of the tree\n   * @param {any[]} args  The arguments to pass to the visitNode functions\n   * @return {any}        Whatever the visitNode function returns for the root tree node\n   */\n  visitTree(tree: Node, ...args: any[]): any;\n\n  /**\n   * Visit a node by calling the visitor function for the given type of node\n   *  (passing along any needed parameters)\n   *\n   * @param {Node} node   The node to visit\n   * @param {any[]} args  The arguments to pass to the visitor function for this node\n   * @return {any}        Whatever the visitor function returns for this node\n   */\n  visitNode(node: Node, ...args: any[]): any;\n\n  /**\n   * The default visitor function for when no node-specific function is defined\n   *\n   * @param {Node} node   The node to visit\n   * @param {any[]} args  The arguments to pass to the visitor function for this node\n   * @return {any}        Whatever the visitor function returns for this node\n   */\n  visitDefault(node: Node, ...args: any[]): any;\n\n  /**\n   * Define a visitor function for a given node kind\n   *\n   * @param {string} kind  The node kind for which the handler is being defined\n   * @param {VisitorFunction} handler  The function to call to handle nodes of this kind\n   */\n  setNodeHandler(kind: string, handler: VisitorFunction): void;\n\n  /**\n   * Remove the visitor function for a given node kind\n   *\n   * @param {string} kind  The node kind whose visitor function is to be removed\n   */\n  removeNodeHandler(kind: string): void;\n\n  /**\n   * The various visitor functions implemented by the subclasses, and any data they need\n   */\n  [property: string]: any;\n}\n\n/*****************************************************************/\n/**\n *  Implements the generic Visitor object\n */\n\nexport abstract class AbstractVisitor implements Visitor {\n  /**\n   * Holds the mapping from node kinds to visitor funcitons\n   */\n  protected nodeHandlers: Map<string, VisitorFunction> = new Map();\n\n  /**\n   *  Visitor functions are named \"visitKindNode\" where \"Kind\" is replaced by\n   *    the node kind; e.g., visitTextNode for kind = text.\n   *\n   *  @param {string} kind  The node kind whose method name is needed\n   *  @return {string}  The name of the visitor method for the given node kind\n   */\n  protected static methodName(kind: string): string {\n    return 'visit' + (kind.charAt(0).toUpperCase() + kind.substr(1)).replace(/[^a-z0-9_]/ig, '_') + 'Node';\n  }\n\n  /**\n   * Create the node handler map by looking for methods with the correct names\n   *   based on the node kinds available from the factory.\n   *\n   * @constructor\n   * @param {NodeFactory} factory  The node factory for the kinds of nodes this visitor handles\n   */\n  constructor(factory: NodeFactory<Node, NodeClass>) {\n    for (const kind of factory.getKinds()) {\n      let method = (this as Visitor)[AbstractVisitor.methodName(kind)] as VisitorFunction;\n      if (method) {\n        this.nodeHandlers.set(kind, method);\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  public visitTree(tree: Node, ...args: any[]) {\n    return this.visitNode(tree, ...args);\n  }\n\n  /**\n   * @override\n   */\n  public visitNode(node: Node, ...args: any[]) {\n    let handler = this.nodeHandlers.get(node.kind) || this.visitDefault;\n    return handler.call(this, node, ...args);\n  }\n\n  /**\n   * @override\n   */\n  public visitDefault(node: Node, ...args: any[]) {\n    if (node instanceof AbstractNode) {\n      for (const child of node.childNodes) {\n        this.visitNode(child, ...args);\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  public setNodeHandler(kind: string, handler: VisitorFunction) {\n    this.nodeHandlers.set(kind, handler);\n  }\n\n  /**\n   * @override\n   */\n  public removeNodeHandler(kind: string) {\n    this.nodeHandlers.delete(kind);\n  }\n\n}\n", "/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  A visitor class that visits MmlNode trees\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {TextNode, XMLNode} from './MmlNode.js';\nimport {MmlFactory} from './MmlFactory.js';\nimport {AbstractVisitor} from '../Tree/Visitor.js';\n\n/*****************************************************************/\n/**\n *  Implements the MmlVisitor (subclass of Visitor, and base class\n *  for visitors that accept MmlNode trees)\n */\n\nexport class MmlVisitor extends AbstractVisitor {\n  /**\n   * @param {MmlFactory} factory  The MmlNode factory (defaults to MmlFactory if not given)\n   *\n   * @constructor\n   * @extends {AbstractVisitor}\n   */\n  constructor(factory: MmlFactory = null) {\n    if (!factory) {\n      factory = new MmlFactory();\n    }\n    super(factory);\n  }\n\n  /***********************************************/\n  /**\n   * Stubs for overriding in subclasses\n   */\n\n  /**\n   * @param {TextNode} node  The TextNode to visit\n   * @param {any[]} args  Any arguments needed by the visitor\n   * @return {any}  Any return value needed for the visitor\n   */\n  public visitTextNode(_node: TextNode, ..._args: any[]): any {}\n\n  /**\n   * @param {XMLNode} node  The XMLNode to visit\n   * @param {any[]} args  Any arguments needed by the visitor\n   * @return {any}  Any return value needed for the visitor\n   */\n  public visitXMLNode(_node: XMLNode, ..._args: any[]): any {}\n\n}\n", "/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  A visitor that produces a serilaied MathML string\n *                (replacement for toMathML() output from v2)\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {MmlVisitor} from './MmlVisitor.js';\nimport {MmlNode, TextNode, XMLNode, TEXCLASS, TEXCLASSNAMES} from './MmlNode.js';\nimport {MmlMi} from './MmlNodes/mi.js';\n\n\nexport const DATAMJX = 'data-mjx-';\n\nexport const toEntity = (c: string) => '&#x' + c.codePointAt(0).toString(16).toUpperCase() + ';';\n\ntype PropertyList = {[name: string]: string};\n\n\n/*****************************************************************/\n/**\n *  Implements the SerializedMmlVisitor (subclass of MmlVisitor)\n */\n\nexport class SerializedMmlVisitor extends MmlVisitor {\n\n  /**\n   * Translations for the internal mathvariants\n   */\n  public static variants: PropertyList = {\n    '-tex-calligraphic':      'script',\n    '-tex-bold-calligraphic': 'bold-script',\n    '-tex-oldstyle':          'normal',\n    '-tex-bold-oldstyle':     'bold',\n    '-tex-mathit':            'italic'\n  };\n\n  /**\n   * Attributes to include on every element of a given kind\n   */\n  public static defaultAttributes: {[kind: string]: PropertyList} = {\n    math: {\n      xmlns: 'http://www.w3.org/1998/Math/MathML'\n    }\n  };\n\n  /**\n   * Convert the tree rooted at a particular node into a serialized MathML string\n   *\n   * @param {MmlNode} node  The node to use as the root of the tree to traverse\n   * @return {string}       The MathML string representing the internal tree\n   */\n  public visitTree(node: MmlNode): string {\n    return this.visitNode(node, '');\n  }\n\n  /**\n   * @param {TextNode} node  The text node to visit\n   * @param {string} space   The amount of indenting for this node\n   * @return {string}        The (HTML-quoted) text of the node\n   */\n  public visitTextNode(node: TextNode, _space: string): string {\n    return this.quoteHTML(node.getText());\n  }\n\n  /**\n   * @param {XMLNode} node  The XML node to visit\n   * @param {string} space  The amount of indenting for this node\n   * @return {string}       The serialization of the XML node\n   */\n  public visitXMLNode(node: XMLNode, space: string): string {\n    return space + node.getSerializedXML();\n  }\n\n  /**\n   * Visit an inferred mrow, but don't add the inferred row itself (since\n   * it is supposed to be inferred).\n   *\n   * @param {MmlNode} node  The inferred mrow to visit\n   * @param {string} space  The amount of indenting for this node\n   * @return {string}       The serialized contents of the mrow, properly indented\n   */\n  public visitInferredMrowNode(node: MmlNode, space: string): string {\n    let mml = [];\n    for (const child of node.childNodes) {\n      mml.push(this.visitNode(child, space));\n    }\n    return mml.join('\\n');\n  }\n\n  /**\n   * Visit a TeXAtom node. It is turned into a mrow with the appropriate TeX class\n   * indicator.\n   *\n   * @param {MmlNode} node  The TeXAtom to visit.\n   * @param {string} space  The amount of indenting for this node.\n   * @return {string}       The serialized contents of the mrow, properly indented.\n   */\n  public visitTeXAtomNode(node: MmlNode, space: string): string {\n    let children = this.childNodeMml(node, space + '  ', '\\n');\n    let mml = space + '<mrow' + this.getAttributes(node) + '>' +\n      (children.match(/\\S/) ? '\\n' + children + space : '') + '</mrow>';\n    return mml;\n  }\n\n  /**\n   * @param {MmlNode} node    The annotation node to visit\n   * @param {string} space    The number of spaces to use for indentation\n   * @return {string}         The serializied annotation element\n   */\n  public visitAnnotationNode(node: MmlNode, space: string): string {\n    return space + '<annotation' + this.getAttributes(node) + '>'\n      + this.childNodeMml(node, '', '')\n      + '</annotation>';\n  }\n\n  /**\n   * The generic visiting function:\n   *   Make the string version of the open tag, properly indented, with it attributes\n   *   Increate the indentation level\n   *   Add the childnodes\n   *   Add the end tag with proper spacing (empty tags have the close tag following directly)\n   *\n   * @param {MmlNode} node    The node to visit\n   * @param {string} space    The number of spaces to use for indentation\n   * @return {string}         The serialization of the given node\n   */\n  public visitDefault(node: MmlNode, space: string): string {\n    let kind = node.kind;\n    let [nl, endspace] = (node.isToken || node.childNodes.length === 0 ? ['', ''] : ['\\n', space]);\n    const children = this.childNodeMml(node, space + '  ', nl);\n    return space + '<' + kind + this.getAttributes(node) + '>'\n                 + (children.match(/\\S/) ? nl + children + endspace : '')\n                 + '</' + kind + '>';\n  }\n\n  /**\n   * @param {MmlNode} node    The node whose children are to be added\n   * @param {string} space    The spaces to use for indentation\n   * @param {string} nl       The newline character (or empty)\n   * @return {string}         The serializied children\n   */\n  protected childNodeMml(node: MmlNode, space: string, nl: string): string {\n    let mml = '';\n    for (const child of node.childNodes) {\n      mml += this.visitNode(child, space) + nl;\n    }\n    return mml;\n  }\n\n  /**\n   * @param {MmlNode} node  The node whose attributes are to be produced\n   * @return {string}       The attribute list as a string\n   */\n  protected getAttributes(node: MmlNode): string {\n    const attr = [];\n    const defaults = (this.constructor as typeof SerializedMmlVisitor).defaultAttributes[node.kind] || {};\n    const attributes = Object.assign({},\n                                     defaults,\n                                     this.getDataAttributes(node),\n                                     node.attributes.getAllAttributes()\n                                    );\n    const variants = (this.constructor as typeof SerializedMmlVisitor).variants;\n    if (attributes.hasOwnProperty('mathvariant') && variants.hasOwnProperty(attributes.mathvariant)) {\n      attributes.mathvariant = variants[attributes.mathvariant];\n    }\n    for (const name of Object.keys(attributes)) {\n      const value = String(attributes[name]);\n      if (value === undefined) continue;\n      attr.push(name + '=\"' + this.quoteHTML(value) + '\"');\n    }\n    return attr.length ? ' ' + attr.join(' ') : '';\n  }\n\n  /**\n   * Create the list of data-mjx-* attributes\n   *\n   * @param {MmlNode} node        The node whose data list is to be generated\n   * @return {PropertyList}       The final class attribute list\n   */\n  protected getDataAttributes(node: MmlNode): PropertyList {\n    const data = {} as PropertyList;\n    const variant = node.attributes.getExplicit('mathvariant') as string;\n    const variants = (this.constructor as typeof SerializedMmlVisitor).variants;\n    variant && variants.hasOwnProperty(variant) && this.setDataAttribute(data, 'variant', variant);\n    node.getProperty('variantForm') && this.setDataAttribute(data, 'alternate', '1');\n    node.getProperty('pseudoscript') && this.setDataAttribute(data, 'pseudoscript', 'true');\n    node.getProperty('autoOP') === false && this.setDataAttribute(data, 'auto-op', 'false');\n    const scriptalign = node.getProperty('scriptalign') as string;\n    scriptalign && this.setDataAttribute(data, 'script-align', scriptalign);\n    const texclass = node.getProperty('texClass') as number;\n    if (texclass !== undefined) {\n      let setclass = true;\n      if (texclass === TEXCLASS.OP && node.isKind('mi')) {\n        const name = (node as MmlMi).getText();\n        setclass = !(name.length > 1 && name.match(MmlMi.operatorName));\n      }\n      setclass && this.setDataAttribute(data, 'texclass', texclass < 0 ? 'NONE' : TEXCLASSNAMES[texclass]);\n    }\n    node.getProperty('scriptlevel') && node.getProperty('useHeight') === false &&\n      this.setDataAttribute(data, 'smallmatrix', 'true');\n    return data;\n  }\n\n  /**\n   * @param {PropertyList} data  The class attribute list\n   * @param {string} name    The name for the data-mjx-name attribute\n   * @param {string} value   The value of the attribute\n   */\n  protected setDataAttribute(data: PropertyList, name: string, value: string) {\n    data[DATAMJX + name] = value;\n  }\n\n  /**\n   *  Convert HTML special characters to entities (&amp;, &lt;, &gt;, &quot;)\n   *  Convert multi-character Unicode characters to entities\n   *  Convert non-ASCII characters to entities.\n   *\n   * @param {string} value  The string to be made HTML escaped\n   * @return {string}       The string with escaping performed\n   */\n  protected quoteHTML(value: string): string {\n    return value\n      .replace(/&/g, '&amp;')\n      .replace(/</g, '&lt;').replace(/>/g, '&gt;')\n      .replace(/\\\"/g, '&quot;')\n      .replace(/[\\uD800-\\uDBFF]./g, toEntity)\n      .replace(/[\\u0080-\\uD7FF\\uE000-\\uFFFF]/g, toEntity);\n  }\n\n}\n", "/*************************************************************\n *\n *  Copyright (c) 2019-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  A visitor to serialize MathML taking menu settings into account\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {MathItem} from '../../core/MathItem.js';\nimport {MmlNode} from '../../core/MmlTree/MmlNode.js';\nimport {SerializedMmlVisitor} from '../../core/MmlTree/SerializedMmlVisitor.js';\nimport {OptionList, userOptions} from '../../util/Options.js';\n\n/*==========================================================================*/\n\n/**\n * The visitor to serialize MathML\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nexport class MmlVisitor<N, T, D> extends SerializedMmlVisitor {\n\n  /**\n   * The options controlling the serialization\n   */\n  public options: OptionList = {\n    texHints: true,           // True means include classes for TeXAtom elements\n    semantics: false,         // True means include original form as annotation in a semantics element\n  };\n\n  /**\n   * The MathItem currently being processed\n   */\n  public mathItem: MathItem<N, T, D> = null;\n\n  /**\n   * @param {MmlNode} node         The internal MathML node to serialize\n   * @param {MathItem} math        The MathItem for this node\n   * @param {OptionList} options   The options controlling the processing\n   * @override\n   */\n  public visitTree(node: MmlNode, math: MathItem<N, T, D> = null, options: OptionList = {}) {\n    this.mathItem = math;\n    userOptions(this.options, options);\n    return this.visitNode(node, '');\n  }\n\n  /**\n   * @override\n   */\n  public visitTeXAtomNode(node: MmlNode, space: string) {\n    if (this.options.texHints) {\n      return super.visitTeXAtomNode(node, space);\n    }\n    if (node.childNodes[0] && node.childNodes[0].childNodes.length === 1) {\n      return this.visitNode(node.childNodes[0], space);\n    }\n    return space + '<mrow' +  this.getAttributes(node) + '>\\n'\n      + this.childNodeMml(node, space + '  ', '\\n')\n      + space + '</mrow>';\n  }\n\n  /**\n   * @param {MmlNode} node    The math node to visit\n   * @param {string} space    The number of spaces to use for indentation\n   * @returns {string}        The serialized math element\n   */\n  public visitMathNode(node: MmlNode, space: string): string {\n    if (!this.options.semantics || this.mathItem.inputJax.name !== 'TeX') {\n      return super.visitDefault(node, space);\n    }\n    const addRow = node.childNodes.length && node.childNodes[0].childNodes.length > 1;\n    return space + '<math' + this.getAttributes(node) + '>\\n'\n                 + space + '  <semantics>\\n'\n                 + (addRow ? space + '    <mrow>\\n' : '')\n                 + this.childNodeMml(node, space + (addRow ? '      ' : '    '), '\\n')\n                 + (addRow ? space + '    </mrow>\\n' : '')\n                 + space + '    <annotation encoding=\"application/x-tex\">' + this.mathItem.math + '</annotation>\\n'\n                 + space + '  </semantics>\\n'\n                 + space + '</math>';\n  }\n\n}\n", null, null, "/*************************************************************\n *\n *  Copyright (c) 2019-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  An info box that allows text selection and has copy-to-clipboard functions\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {Info} from 'mj-context-menu/js/info.js';\nimport {HtmlClasses} from 'mj-context-menu/js/html_classes.js';\n\n/*==========================================================================*/\n\n/**\n * The SelectableInfo class definition\n */\nexport class SelectableInfo extends Info {\n\n  /**\n   * Add a keypress event to handle \"select all\" so that only\n   * the info-box's text is selected (not the whole page)\n   *\n   * @override\n   */\n  public addEvents(element: HTMLElement) {\n    element.addEventListener('keypress', (event: KeyboardEvent) => {\n      if (event.key === 'a' && (event.ctrlKey || event.metaKey)) {\n        this.selectAll();\n        this.stop(event);\n      }\n    });\n  }\n\n  /**\n   * Select all the main text of the info box\n   */\n  public selectAll() {\n    const selection = document.getSelection();\n    selection.selectAllChildren(this.html.querySelector('pre'));\n  }\n\n  /**\n   * Implement the copy-to-clipboard action\n   */\n  public copyToClipboard() {\n    this.selectAll();\n    try {\n      document.execCommand('copy');\n    } catch (err) {\n      alert('Can\\'t copy to clipboard: ' + err.message);\n    }\n    document.getSelection().removeAllRanges();\n  }\n\n  /**\n   * Attach the copy-to-clipboard action to its button\n   */\n  public generateHtml() {\n    super.generateHtml();\n    const footer = this.html.querySelector('span.' + HtmlClasses['INFOSIGNATURE']);\n    const button = footer.appendChild(document.createElement('input'));\n    button.type = 'button';\n    button.value = 'Copy to Clipboard';\n    button.addEventListener('click', (_event: MouseEvent) => this.copyToClipboard());\n  }\n\n}\n", null, null, null, null, null, null, null, null, null, null, null, null, null, null, "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultComparator = exports.DynamicCstrParser = exports.DynamicCstr = exports.DynamicProperties = exports.Axis = void 0;\nvar Axis;\n(function (Axis) {\n    Axis[\"DOMAIN\"] = \"domain\";\n    Axis[\"STYLE\"] = \"style\";\n    Axis[\"LOCALE\"] = \"locale\";\n    Axis[\"TOPIC\"] = \"topic\";\n    Axis[\"MODALITY\"] = \"modality\";\n})(Axis || (exports.Axis = Axis = {}));\nclass DynamicProperties {\n    static createProp(...cstrList) {\n        const axes = DynamicCstr.DEFAULT_ORDER;\n        const dynamicCstr = {};\n        for (let i = 0, l = cstrList.length, k = axes.length; i < l && i < k; i++) {\n            dynamicCstr[axes[i]] = cstrList[i];\n        }\n        return new DynamicProperties(dynamicCstr);\n    }\n    constructor(properties, order = Object.keys(properties)) {\n        this.properties = properties;\n        this.order = order;\n    }\n    getProperties() {\n        return this.properties;\n    }\n    getOrder() {\n        return this.order;\n    }\n    getAxes() {\n        return this.order;\n    }\n    getProperty(key) {\n        return this.properties[key];\n    }\n    updateProperties(props) {\n        this.properties = props;\n    }\n    allProperties() {\n        const propLists = [];\n        this.order.forEach((key) => propLists.push(this.getProperty(key).slice()));\n        return propLists;\n    }\n    toString() {\n        const cstrStrings = [];\n        this.order.forEach((key) => cstrStrings.push(key + ': ' + this.getProperty(key).toString()));\n        return cstrStrings.join('\\n');\n    }\n}\nexports.DynamicProperties = DynamicProperties;\nclass DynamicCstr extends DynamicProperties {\n    static createCstr(...cstrList) {\n        const axes = DynamicCstr.DEFAULT_ORDER;\n        const dynamicCstr = {};\n        for (let i = 0, l = cstrList.length, k = axes.length; i < l && i < k; i++) {\n            dynamicCstr[axes[i]] = cstrList[i];\n        }\n        return new DynamicCstr(dynamicCstr);\n    }\n    static defaultCstr() {\n        return DynamicCstr.createCstr.apply(null, DynamicCstr.DEFAULT_ORDER.map(function (x) {\n            return DynamicCstr.DEFAULT_VALUES[x];\n        }));\n    }\n    static validOrder(order) {\n        const axes = DynamicCstr.DEFAULT_ORDER.slice();\n        return order.every((x) => {\n            const index = axes.indexOf(x);\n            return index !== -1 && axes.splice(index, 1);\n        });\n    }\n    constructor(components_, order) {\n        const properties = {};\n        for (const [key, value] of Object.entries(components_)) {\n            properties[key] = [value];\n        }\n        super(properties, order);\n        this.components = components_;\n    }\n    getComponents() {\n        return this.components;\n    }\n    getValue(key) {\n        return this.components[key];\n    }\n    getValues() {\n        return this.order.map((key) => this.getValue(key));\n    }\n    allProperties() {\n        const propLists = super.allProperties();\n        for (let i = 0, props, key; (props = propLists[i]), (key = this.order[i]); i++) {\n            const value = this.getValue(key);\n            if (props.indexOf(value) === -1) {\n                props.unshift(value);\n            }\n        }\n        return propLists;\n    }\n    toString() {\n        return this.getValues().join('.');\n    }\n    equal(cstr) {\n        const keys1 = cstr.getAxes();\n        if (this.order.length !== keys1.length) {\n            return false;\n        }\n        for (let j = 0, key; (key = keys1[j]); j++) {\n            const comp2 = this.getValue(key);\n            if (!comp2 || cstr.getValue(key) !== comp2) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\nexports.DynamicCstr = DynamicCstr;\nDynamicCstr.DEFAULT_ORDER = [\n    Axis.LOCALE,\n    Axis.MODALITY,\n    Axis.DOMAIN,\n    Axis.STYLE,\n    Axis.TOPIC\n];\nDynamicCstr.BASE_LOCALE = 'base';\nDynamicCstr.DEFAULT_VALUE = 'default';\nDynamicCstr.DEFAULT_VALUES = {\n    [Axis.LOCALE]: 'en',\n    [Axis.DOMAIN]: DynamicCstr.DEFAULT_VALUE,\n    [Axis.STYLE]: DynamicCstr.DEFAULT_VALUE,\n    [Axis.TOPIC]: DynamicCstr.DEFAULT_VALUE,\n    [Axis.MODALITY]: 'speech'\n};\nclass DynamicCstrParser {\n    constructor(order) {\n        this.order = order;\n    }\n    parse(str) {\n        const order = str.split('.');\n        const cstr = {};\n        if (order.length > this.order.length) {\n            throw new Error('Invalid dynamic constraint: ' + cstr);\n        }\n        let j = 0;\n        for (let i = 0, key; (key = this.order[i]), order.length; i++, j++) {\n            const value = order.shift();\n            cstr[key] = value;\n        }\n        return new DynamicCstr(cstr, this.order.slice(0, j));\n    }\n}\nexports.DynamicCstrParser = DynamicCstrParser;\nclass DefaultComparator {\n    constructor(reference, fallback = new DynamicProperties(reference.getProperties(), reference.getOrder())) {\n        this.reference = reference;\n        this.fallback = fallback;\n        this.order = this.reference.getOrder();\n    }\n    getReference() {\n        return this.reference;\n    }\n    setReference(cstr, props) {\n        this.reference = cstr;\n        this.fallback =\n            props || new DynamicProperties(cstr.getProperties(), cstr.getOrder());\n        this.order = this.reference.getOrder();\n    }\n    match(cstr) {\n        const keys1 = cstr.getAxes();\n        return (keys1.length === this.reference.getAxes().length &&\n            keys1.every((key) => {\n                const value = cstr.getValue(key);\n                return (value === this.reference.getValue(key) ||\n                    this.fallback.getProperty(key).indexOf(value) !== -1);\n            }));\n    }\n    compare(cstr1, cstr2) {\n        let ignore = false;\n        for (let i = 0, key; (key = this.order[i]); i++) {\n            const value1 = cstr1.getValue(key);\n            const value2 = cstr2.getValue(key);\n            if (!ignore) {\n                const ref = this.reference.getValue(key);\n                if (ref === value1 && ref !== value2) {\n                    return -1;\n                }\n                if (ref === value2 && ref !== value1) {\n                    return 1;\n                }\n                if (ref === value1 && ref === value2) {\n                    continue;\n                }\n                if (ref !== value1 && ref !== value2) {\n                    ignore = true;\n                }\n            }\n            const prop = this.fallback.getProperty(key);\n            const index1 = prop.indexOf(value1);\n            const index2 = prop.indexOf(value2);\n            if (index1 < index2) {\n                return -1;\n            }\n            if (index2 < index1) {\n                return 1;\n            }\n        }\n        return 0;\n    }\n    toString() {\n        return this.reference.toString() + '\\n' + this.fallback.toString();\n    }\n}\nexports.DefaultComparator = DefaultComparator;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DOMAIN_TO_STYLES = exports.Markup = exports.Speech = exports.personalityPropList = exports.personalityProps = exports.Mode = void 0;\nvar Mode;\n(function (Mode) {\n    Mode[\"SYNC\"] = \"sync\";\n    Mode[\"ASYNC\"] = \"async\";\n    Mode[\"HTTP\"] = \"http\";\n})(Mode || (exports.Mode = Mode = {}));\nvar personalityProps;\n(function (personalityProps) {\n    personalityProps[\"PITCH\"] = \"pitch\";\n    personalityProps[\"RATE\"] = \"rate\";\n    personalityProps[\"VOLUME\"] = \"volume\";\n    personalityProps[\"PAUSE\"] = \"pause\";\n    personalityProps[\"JOIN\"] = \"join\";\n    personalityProps[\"LAYOUT\"] = \"layout\";\n})(personalityProps || (exports.personalityProps = personalityProps = {}));\nexports.personalityPropList = [\n    personalityProps.PITCH,\n    personalityProps.RATE,\n    personalityProps.VOLUME,\n    personalityProps.PAUSE,\n    personalityProps.JOIN\n];\nvar Speech;\n(function (Speech) {\n    Speech[\"NONE\"] = \"none\";\n    Speech[\"SHALLOW\"] = \"shallow\";\n    Speech[\"DEEP\"] = \"deep\";\n})(Speech || (exports.Speech = Speech = {}));\nvar Markup;\n(function (Markup) {\n    Markup[\"NONE\"] = \"none\";\n    Markup[\"LAYOUT\"] = \"layout\";\n    Markup[\"COUNTING\"] = \"counting\";\n    Markup[\"PUNCTUATION\"] = \"punctuation\";\n    Markup[\"SSML\"] = \"ssml\";\n    Markup[\"ACSS\"] = \"acss\";\n    Markup[\"SABLE\"] = \"sable\";\n    Markup[\"VOICEXML\"] = \"voicexml\";\n})(Markup || (exports.Markup = Markup = {}));\nexports.DOMAIN_TO_STYLES = {\n    mathspeak: 'default',\n    clearspeak: 'default'\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Variables = void 0;\nclass Variables {\n    static ensureLocale(loc, def) {\n        if (!Variables.LOCALES.get(loc)) {\n            console.error(`Locale ${loc} does not exist! Using` +\n                ` ${Variables.LOCALES.get(def)} instead.`);\n            return def;\n        }\n        return loc;\n    }\n}\nexports.Variables = Variables;\nVariables.VERSION = '4.1.2';\nVariables.LOCALES = new Map([\n    ['af', 'Africaans'],\n    ['ca', 'Catalan'],\n    ['da', 'Danish'],\n    ['de', 'German'],\n    ['en', 'English'],\n    ['es', 'Spanish'],\n    ['euro', 'Euro'],\n    ['fr', 'French'],\n    ['hi', 'Hindi'],\n    ['it', 'Italian'],\n    ['ko', 'Korean'],\n    ['nb', 'Bokmål'],\n    ['nn', 'Nynorsk'],\n    ['sv', 'Swedish'],\n    ['nemeth', 'Nemeth']\n]);\nVariables.mathjaxVersion = '4.0.0-beta.5';\nVariables.url = 'https://cdn.jsdelivr.net/npm/speech-rule-engine@' +\n    Variables.VERSION +\n    '/lib/mathmaps';\nVariables.WGXpath = 'https://cdn.jsdelivr.net/npm/wicked-good-xpath@1.3.0/dist/wgxpath.install.js';\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SystemExternal = void 0;\nconst variables_js_1 = require(\"./variables.js\");\nclass SystemExternal {\n    static nodeRequire() {\n        return eval('require');\n    }\n    static extRequire(library) {\n        if (typeof process !== 'undefined' && typeof require !== 'undefined') {\n            return SystemExternal.nodeRequire()(library);\n        }\n        return null;\n    }\n}\nexports.SystemExternal = SystemExternal;\nSystemExternal.windowSupported = (() => !(typeof window === 'undefined'))();\nSystemExternal.documentSupported = (() => SystemExternal.windowSupported &&\n    !(typeof window.document === 'undefined'))();\nSystemExternal.xmldom = SystemExternal.documentSupported\n    ? window\n    : SystemExternal.extRequire('@xmldom/xmldom');\nSystemExternal.document = SystemExternal.documentSupported\n    ? window.document\n    : new SystemExternal.xmldom.DOMImplementation().createDocument('', '', 0);\nSystemExternal.xpath = SystemExternal.documentSupported\n    ? document\n    : (function () {\n        const window = { document: {}, XPathResult: {} };\n        const wgx = SystemExternal.extRequire('wicked-good-xpath');\n        wgx.install(window);\n        window.document.XPathResult = window.XPathResult;\n        return window.document;\n    })();\nSystemExternal.mathmapsIePath = 'https://cdn.jsdelivr.net/npm/sre-mathmaps-ie@' +\n    variables_js_1.Variables.VERSION +\n    'mathmaps_ie.js';\nSystemExternal.fs = SystemExternal.documentSupported\n    ? null\n    : SystemExternal.extRequire('fs');\nSystemExternal.url = variables_js_1.Variables.url;\nSystemExternal.jsonPath = (function () {\n    if (SystemExternal.documentSupported) {\n        return SystemExternal.url;\n    }\n    if (process.env.SRE_JSON_PATH || global.SRE_JSON_PATH) {\n        return process.env.SRE_JSON_PATH || global.SRE_JSON_PATH;\n    }\n    try {\n        const path = SystemExternal.nodeRequire().resolve('speech-rule-engine');\n        return path.replace(/sre\\.js$/, '') + 'mathmaps';\n    }\n    catch (_err) {\n    }\n    try {\n        const path = SystemExternal.nodeRequire().resolve('.');\n        return path.replace(/sre\\.js$/, '') + 'mathmaps';\n    }\n    catch (_err) {\n    }\n    return typeof __dirname !== 'undefined'\n        ? __dirname + (__dirname.match(/lib?$/) ? '/mathmaps' : '/lib/mathmaps')\n        : process.cwd() + '/lib/mathmaps';\n})();\nSystemExternal.WGXpath = variables_js_1.Variables.WGXpath;\nSystemExternal.wgxpath = null;\nexports.default = SystemExternal;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Debugger = void 0;\nconst system_external_js_1 = require(\"./system_external.js\");\nclass Debugger {\n    static getInstance() {\n        Debugger.instance = Debugger.instance || new Debugger();\n        return Debugger.instance;\n    }\n    init(opt_file) {\n        if (opt_file) {\n            this.startDebugFile_(opt_file);\n        }\n        this.isActive_ = true;\n        return this.fileHandle;\n    }\n    output(...args) {\n        if (this.isActive_) {\n            this.output_(args);\n        }\n    }\n    generateOutput(func) {\n        if (this.isActive_) {\n            this.output_(func.apply(func, []));\n        }\n    }\n    exit(callback = () => { }) {\n        this.fileHandle.then(() => {\n            if (this.isActive_ && this.stream_) {\n                this.stream_.end('', '', callback);\n            }\n        });\n    }\n    constructor() {\n        this.isActive_ = false;\n        this.outputFunction_ = console.info;\n        this.fileHandle = Promise.resolve();\n        this.stream_ = null;\n    }\n    startDebugFile_(filename) {\n        this.fileHandle = system_external_js_1.SystemExternal.fs.promises.open(filename, 'w');\n        this.fileHandle = this.fileHandle.then((handle) => {\n            this.stream_ = handle.createWriteStream(filename);\n            this.outputFunction_ = function (...args) {\n                this.stream_.write(args.join(' '));\n                this.stream_.write('\\n');\n            }.bind(this);\n            this.stream_.on('error', function (_error) {\n                console.info('Invalid log file. Debug information sent to console.');\n                this.outputFunction_ = console.info;\n            }.bind(this));\n            this.stream_.on('finish', function () {\n                console.info('Finalizing debug file.');\n            });\n        });\n    }\n    output_(outputList) {\n        if (console.info === this.outputFunction_) {\n            this.outputFunction_.apply(console, ['Speech Rule Engine Debugger:'].concat(outputList));\n            return;\n        }\n        this.fileHandle.then(() => this.outputFunction_.apply(this.outputFunction_, ['Speech Rule Engine Debugger:'].concat(outputList)));\n    }\n}\nexports.Debugger = Debugger;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EnginePromise = exports.Engine = exports.SREError = void 0;\nconst Dcstr = require(\"../rule_engine/dynamic_cstr.js\");\nconst EngineConst = require(\"./engine_const.js\");\nconst debugger_js_1 = require(\"./debugger.js\");\nconst variables_js_1 = require(\"./variables.js\");\nclass SREError extends Error {\n    constructor(message = '') {\n        super();\n        this.message = message;\n        this.name = 'SRE Error';\n    }\n}\nexports.SREError = SREError;\nclass Engine {\n    set defaultLocale(loc) {\n        this._defaultLocale = variables_js_1.Variables.ensureLocale(loc, this._defaultLocale);\n    }\n    get defaultLocale() {\n        return this._defaultLocale;\n    }\n    static getInstance() {\n        Engine.instance = Engine.instance || new Engine();\n        return Engine.instance;\n    }\n    static defaultEvaluator(str, _cstr) {\n        return str;\n    }\n    static evaluateNode(node) {\n        return Engine.nodeEvaluator(node);\n    }\n    getRate() {\n        const numeric = parseInt(this.rate, 10);\n        return isNaN(numeric) ? 100 : numeric;\n    }\n    setDynamicCstr(opt_dynamic) {\n        if (this.defaultLocale) {\n            Dcstr.DynamicCstr.DEFAULT_VALUES[Dcstr.Axis.LOCALE] = this.defaultLocale;\n        }\n        if (opt_dynamic) {\n            const keys = Object.keys(opt_dynamic);\n            for (let i = 0; i < keys.length; i++) {\n                const feature = keys[i];\n                if (Dcstr.DynamicCstr.DEFAULT_ORDER.indexOf(feature) !== -1) {\n                    const value = opt_dynamic[feature];\n                    this[feature] = value;\n                }\n            }\n        }\n        EngineConst.DOMAIN_TO_STYLES[this.domain] = this.style;\n        const dynamic = [this.locale, this.modality, this.domain, this.style].join('.');\n        const fallback = Dcstr.DynamicProperties.createProp([Dcstr.DynamicCstr.DEFAULT_VALUES[Dcstr.Axis.LOCALE]], [Dcstr.DynamicCstr.DEFAULT_VALUES[Dcstr.Axis.MODALITY]], [Dcstr.DynamicCstr.DEFAULT_VALUES[Dcstr.Axis.DOMAIN]], [Dcstr.DynamicCstr.DEFAULT_VALUES[Dcstr.Axis.STYLE]]);\n        const comparator = this.comparators[this.domain];\n        const parser = this.parsers[this.domain];\n        this.parser = parser ? parser : this.defaultParser;\n        this.dynamicCstr = this.parser.parse(dynamic);\n        this.dynamicCstr.updateProperties(fallback.getProperties());\n        this.comparator = comparator\n            ? comparator()\n            : new Dcstr.DefaultComparator(this.dynamicCstr);\n    }\n    constructor() {\n        this.customLoader = null;\n        this.parsers = {};\n        this.comparator = null;\n        this.mode = EngineConst.Mode.SYNC;\n        this.init = true;\n        this.delay = false;\n        this.comparators = {};\n        this.domain = 'mathspeak';\n        this.style = Dcstr.DynamicCstr.DEFAULT_VALUES[Dcstr.Axis.STYLE];\n        this._defaultLocale = Dcstr.DynamicCstr.DEFAULT_VALUES[Dcstr.Axis.LOCALE];\n        this.locale = Dcstr.DynamicCstr.DEFAULT_VALUES[Dcstr.Axis.LOCALE];\n        this.subiso = '';\n        this.modality = Dcstr.DynamicCstr.DEFAULT_VALUES[Dcstr.Axis.MODALITY];\n        this.speech = EngineConst.Speech.NONE;\n        this.markup = EngineConst.Markup.NONE;\n        this.mark = true;\n        this.automark = false;\n        this.character = true;\n        this.cleanpause = true;\n        this.cayleyshort = true;\n        this.linebreaks = false;\n        this.rate = '100';\n        this.walker = 'Table';\n        this.structure = false;\n        this.aria = false;\n        this.ruleSets = [];\n        this.strict = false;\n        this.isIE = false;\n        this.isEdge = false;\n        this.pprint = false;\n        this.config = false;\n        this.rules = '';\n        this.prune = '';\n        this.locale = this.defaultLocale;\n        this.evaluator = Engine.defaultEvaluator;\n        this.defaultParser = new Dcstr.DynamicCstrParser(Dcstr.DynamicCstr.DEFAULT_ORDER);\n        this.parser = this.defaultParser;\n        this.dynamicCstr = Dcstr.DynamicCstr.defaultCstr();\n    }\n    configurate(feature) {\n        if (this.mode === EngineConst.Mode.HTTP && !this.config) {\n            configBlocks(feature);\n            this.config = true;\n        }\n        configFeature(feature);\n    }\n    setCustomLoader(fn) {\n        if (fn) {\n            this.customLoader = fn;\n        }\n    }\n}\nexports.Engine = Engine;\nEngine.BINARY_FEATURES = [\n    'automark',\n    'mark',\n    'character',\n    'cleanpause',\n    'strict',\n    'structure',\n    'aria',\n    'pprint',\n    'cayleyshort',\n    'linebreaks'\n];\nEngine.STRING_FEATURES = [\n    'markup',\n    'style',\n    'domain',\n    'speech',\n    'walker',\n    'defaultLocale',\n    'locale',\n    'delay',\n    'modality',\n    'rate',\n    'rules',\n    'subiso',\n    'prune'\n];\nEngine.nodeEvaluator = function (_node) {\n    return [];\n};\nexports.default = Engine;\nfunction configFeature(feature) {\n    if (typeof SREfeature !== 'undefined') {\n        for (const [name, feat] of Object.entries(SREfeature)) {\n            feature[name] = feat;\n        }\n    }\n}\nfunction configBlocks(feature) {\n    const scripts = document.documentElement.querySelectorAll('script[type=\"text/x-sre-config\"]');\n    for (let i = 0, m = scripts.length; i < m; i++) {\n        let inner;\n        try {\n            inner = scripts[i].innerHTML;\n            const config = JSON.parse(inner);\n            for (const [key, val] of Object.entries(config)) {\n                feature[key] = val;\n            }\n        }\n        catch (_err) {\n            debugger_js_1.Debugger.getInstance().output('Illegal configuration ', inner);\n        }\n    }\n}\nclass EnginePromise {\n    static get(locale = Engine.getInstance().locale) {\n        return EnginePromise.promises[locale] || Promise.resolve('');\n    }\n    static getall() {\n        return Promise.all(Object.values(EnginePromise.promises));\n    }\n}\nexports.EnginePromise = EnginePromise;\nEnginePromise.loaded = {};\nEnginePromise.promises = {};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.xpath = void 0;\nexports.resolveNameSpace = resolveNameSpace;\nexports.evalXPath = evalXPath;\nexports.evaluateBoolean = evaluateBoolean;\nexports.evaluateString = evaluateString;\nexports.updateEvaluator = updateEvaluator;\nconst engine_js_1 = require(\"./engine.js\");\nconst EngineConst = require(\"../common/engine_const.js\");\nconst system_external_js_1 = require(\"./system_external.js\");\nfunction xpathSupported() {\n    if (typeof XPathResult === 'undefined') {\n        return false;\n    }\n    return true;\n}\nexports.xpath = {\n    currentDocument: null,\n    evaluate: xpathSupported()\n        ? document.evaluate\n        : system_external_js_1.SystemExternal.xpath.evaluate,\n    result: xpathSupported() ? XPathResult : system_external_js_1.SystemExternal.xpath.XPathResult,\n    createNSResolver: xpathSupported()\n        ? document.createNSResolver\n        : system_external_js_1.SystemExternal.xpath.createNSResolver\n};\nconst nameSpaces = {\n    xhtml: 'http://www.w3.org/1999/xhtml',\n    mathml: 'http://www.w3.org/1998/Math/MathML',\n    mml: 'http://www.w3.org/1998/Math/MathML',\n    svg: 'http://www.w3.org/2000/svg'\n};\nfunction resolveNameSpace(prefix) {\n    return nameSpaces[prefix] || null;\n}\nclass Resolver {\n    constructor() {\n        this.lookupNamespaceURI = resolveNameSpace;\n    }\n}\nfunction evaluateXpath(expression, rootNode, type) {\n    return engine_js_1.Engine.getInstance().mode === EngineConst.Mode.HTTP &&\n        !engine_js_1.Engine.getInstance().isIE &&\n        !engine_js_1.Engine.getInstance().isEdge\n        ? exports.xpath.currentDocument.evaluate(expression, rootNode, resolveNameSpace, type, null)\n        : exports.xpath.evaluate(expression, rootNode, new Resolver(), type, null);\n}\nfunction evalXPath(expression, rootNode) {\n    let iterator;\n    try {\n        iterator = evaluateXpath(expression, rootNode, exports.xpath.result.ORDERED_NODE_ITERATOR_TYPE);\n    }\n    catch (_err) {\n        return [];\n    }\n    const results = [];\n    for (let xpathNode = iterator.iterateNext(); xpathNode; xpathNode = iterator.iterateNext()) {\n        results.push(xpathNode);\n    }\n    return results;\n}\nfunction evaluateBoolean(expression, rootNode) {\n    let result;\n    try {\n        result = evaluateXpath(expression, rootNode, exports.xpath.result.BOOLEAN_TYPE);\n    }\n    catch (_err) {\n        return false;\n    }\n    return result.booleanValue;\n}\nfunction evaluateString(expression, rootNode) {\n    let result;\n    try {\n        result = evaluateXpath(expression, rootNode, exports.xpath.result.STRING_TYPE);\n    }\n    catch (_err) {\n        return '';\n    }\n    return result.stringValue;\n}\nfunction updateEvaluator(node) {\n    if (engine_js_1.Engine.getInstance().mode !== EngineConst.Mode.HTTP)\n        return;\n    let parent = node;\n    while (parent && !parent.evaluate) {\n        parent = parent.parentNode;\n    }\n    if (parent && parent.evaluate) {\n        exports.xpath.currentDocument = parent;\n    }\n    else if (node.ownerDocument) {\n        exports.xpath.currentDocument = node.ownerDocument;\n    }\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NodeType = void 0;\nexports.toArray = toArray;\nexports.parseInput = parseInput;\nexports.replaceNode = replaceNode;\nexports.createElement = createElement;\nexports.createElementNS = createElementNS;\nexports.createTextNode = createTextNode;\nexports.formatXml = formatXml;\nexports.querySelectorAllByAttr = querySelectorAllByAttr;\nexports.querySelectorAllByAttrValue = querySelectorAllByAttrValue;\nexports.querySelectorAll = querySelectorAll;\nexports.tagName = tagName;\nexports.cloneNode = cloneNode;\nexports.serializeXml = serializeXml;\nconst engine_js_1 = require(\"./engine.js\");\nconst EngineConst = require(\"../common/engine_const.js\");\nconst system_external_js_1 = require(\"./system_external.js\");\nconst XpathUtil = require(\"./xpath_util.js\");\nfunction toArray(nodeList) {\n    const nodeArray = [];\n    for (let i = 0, m = nodeList.length; i < m; i++) {\n        nodeArray.push(nodeList[i]);\n    }\n    return nodeArray;\n}\nfunction trimInput(input) {\n    input = input.replace(/&nbsp;/g, ' ');\n    return input.replace(/>[ \\f\\n\\r\\t\\v\\u200b]+</g, '><').trim();\n}\nfunction parseInput(input) {\n    const dp = new system_external_js_1.SystemExternal.xmldom.DOMParser();\n    const clean_input = trimInput(input);\n    const allValues = clean_input.match(/&(?!lt|gt|amp|quot|apos)\\w+;/g);\n    const html = !!allValues;\n    if (!clean_input) {\n        throw new Error('Empty input!');\n    }\n    try {\n        const doc = dp.parseFromString(clean_input, html ? 'text/html' : 'text/xml');\n        if (engine_js_1.Engine.getInstance().mode === EngineConst.Mode.HTTP) {\n            XpathUtil.xpath.currentDocument = doc;\n            return html ? doc.body.childNodes[0] : doc.documentElement;\n        }\n        return doc.documentElement;\n    }\n    catch (err) {\n        throw new engine_js_1.SREError('Illegal input: ' + err.message);\n    }\n}\nvar NodeType;\n(function (NodeType) {\n    NodeType[NodeType[\"ELEMENT_NODE\"] = 1] = \"ELEMENT_NODE\";\n    NodeType[NodeType[\"ATTRIBUTE_NODE\"] = 2] = \"ATTRIBUTE_NODE\";\n    NodeType[NodeType[\"TEXT_NODE\"] = 3] = \"TEXT_NODE\";\n    NodeType[NodeType[\"CDATA_SECTION_NODE\"] = 4] = \"CDATA_SECTION_NODE\";\n    NodeType[NodeType[\"ENTITY_REFERENCE_NODE\"] = 5] = \"ENTITY_REFERENCE_NODE\";\n    NodeType[NodeType[\"ENTITY_NODE\"] = 6] = \"ENTITY_NODE\";\n    NodeType[NodeType[\"PROCESSING_INSTRUCTION_NODE\"] = 7] = \"PROCESSING_INSTRUCTION_NODE\";\n    NodeType[NodeType[\"COMMENT_NODE\"] = 8] = \"COMMENT_NODE\";\n    NodeType[NodeType[\"DOCUMENT_NODE\"] = 9] = \"DOCUMENT_NODE\";\n    NodeType[NodeType[\"DOCUMENT_TYPE_NODE\"] = 10] = \"DOCUMENT_TYPE_NODE\";\n    NodeType[NodeType[\"DOCUMENT_FRAGMENT_NODE\"] = 11] = \"DOCUMENT_FRAGMENT_NODE\";\n    NodeType[NodeType[\"NOTATION_NODE\"] = 12] = \"NOTATION_NODE\";\n})(NodeType || (exports.NodeType = NodeType = {}));\nfunction replaceNode(oldNode, newNode) {\n    if (!oldNode.parentNode) {\n        return;\n    }\n    oldNode.parentNode.insertBefore(newNode, oldNode);\n    oldNode.parentNode.removeChild(oldNode);\n}\nfunction createElement(tag) {\n    return system_external_js_1.SystemExternal.document.createElement(tag);\n}\nfunction createElementNS(url, tag) {\n    return system_external_js_1.SystemExternal.document.createElementNS(url, tag);\n}\nfunction createTextNode(content) {\n    return system_external_js_1.SystemExternal.document.createTextNode(content);\n}\nfunction formatXml(xml) {\n    let formatted = '';\n    let reg = /(>)(<)(\\/*)/g;\n    xml = xml.replace(reg, '$1\\r\\n$2$3');\n    let pad = 0;\n    let split = xml.split('\\r\\n');\n    reg = /(\\.)*(<)(\\/*)/g;\n    split = split\n        .map((x) => x.replace(reg, '$1\\r\\n$2$3').split('\\r\\n'))\n        .reduce((x, y) => x.concat(y), []);\n    while (split.length) {\n        let node = split.shift();\n        if (!node) {\n            continue;\n        }\n        let indent = 0;\n        if (node.match(/^<\\w[^>/]*>[^>]+$/)) {\n            const match = matchingStartEnd(node, split[0]);\n            if (match[0]) {\n                if (match[1]) {\n                    node = node + split.shift().slice(0, -match[1].length);\n                    if (match[1].trim()) {\n                        split.unshift(match[1]);\n                    }\n                }\n                else {\n                    node = node + split.shift();\n                }\n            }\n            else {\n                indent = 1;\n            }\n        }\n        else if (node.match(/^<\\/\\w/)) {\n            if (pad !== 0) {\n                pad -= 1;\n            }\n        }\n        else if (node.match(/^<\\w[^>]*[^/]>.*$/)) {\n            indent = 1;\n        }\n        else if (node.match(/^<\\w[^>]*\\/>.+$/)) {\n            const position = node.indexOf('>') + 1;\n            const rest = node.slice(position);\n            if (rest.trim()) {\n                split.unshift();\n            }\n            node = node.slice(0, position) + rest;\n        }\n        else {\n            indent = 0;\n        }\n        formatted += new Array(pad + 1).join('  ') + node + '\\r\\n';\n        pad += indent;\n    }\n    return formatted;\n}\nfunction matchingStartEnd(start, end) {\n    if (!end) {\n        return [false, ''];\n    }\n    const tag1 = start.match(/^<([^> ]+).*>/);\n    const tag2 = end.match(/^<\\/([^>]+)>(.*)/);\n    return tag1 && tag2 && tag1[1] === tag2[1] ? [true, tag2[2]] : [false, ''];\n}\nfunction querySelectorAllByAttr(node, attr) {\n    return node.querySelectorAll\n        ? toArray(node.querySelectorAll(`[${attr}]`))\n        : XpathUtil.evalXPath(`.//*[@${attr}]`, node);\n}\nfunction querySelectorAllByAttrValue(node, attr, value) {\n    return node.querySelectorAll\n        ? toArray(node.querySelectorAll(`[${attr}=\"${value}\"]`))\n        : XpathUtil.evalXPath(`.//*[@${attr}=\"${value}\"]`, node);\n}\nfunction querySelectorAll(node, tag) {\n    return node.querySelectorAll\n        ? toArray(node.querySelectorAll(tag))\n        : XpathUtil.evalXPath(`.//${tag}`, node);\n}\nfunction tagName(node) {\n    return node.tagName.toUpperCase();\n}\nfunction cloneNode(node) {\n    return node.cloneNode(true);\n}\nfunction serializeXml(node) {\n    const xmls = new system_external_js_1.SystemExternal.xmldom.XMLSerializer();\n    return xmls.serializeToString(node);\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.INTERVALS = exports.Base = exports.Embellish = exports.Font = void 0;\nexports.makeInterval = makeInterval;\nexports.makeMultiInterval = makeMultiInterval;\nexports.makeCodeInterval = makeCodeInterval;\nexports.alphabetName = alphabetName;\nvar Font;\n(function (Font) {\n    Font[\"BOLD\"] = \"bold\";\n    Font[\"BOLDFRAKTUR\"] = \"bold-fraktur\";\n    Font[\"BOLDITALIC\"] = \"bold-italic\";\n    Font[\"BOLDSCRIPT\"] = \"bold-script\";\n    Font[\"DOUBLESTRUCK\"] = \"double-struck\";\n    Font[\"DOUBLESTRUCKITALIC\"] = \"double-struck-italic\";\n    Font[\"FULLWIDTH\"] = \"fullwidth\";\n    Font[\"FRAKTUR\"] = \"fraktur\";\n    Font[\"ITALIC\"] = \"italic\";\n    Font[\"MONOSPACE\"] = \"monospace\";\n    Font[\"NORMAL\"] = \"normal\";\n    Font[\"SCRIPT\"] = \"script\";\n    Font[\"SANSSERIF\"] = \"sans-serif\";\n    Font[\"SANSSERIFITALIC\"] = \"sans-serif-italic\";\n    Font[\"SANSSERIFBOLD\"] = \"sans-serif-bold\";\n    Font[\"SANSSERIFBOLDITALIC\"] = \"sans-serif-bold-italic\";\n})(Font || (exports.Font = Font = {}));\nvar Embellish;\n(function (Embellish) {\n    Embellish[\"SUPER\"] = \"super\";\n    Embellish[\"SUB\"] = \"sub\";\n    Embellish[\"CIRCLED\"] = \"circled\";\n    Embellish[\"PARENTHESIZED\"] = \"parenthesized\";\n    Embellish[\"PERIOD\"] = \"period\";\n    Embellish[\"NEGATIVECIRCLED\"] = \"negative-circled\";\n    Embellish[\"DOUBLECIRCLED\"] = \"double-circled\";\n    Embellish[\"CIRCLEDSANSSERIF\"] = \"circled-sans-serif\";\n    Embellish[\"NEGATIVECIRCLEDSANSSERIF\"] = \"negative-circled-sans-serif\";\n    Embellish[\"COMMA\"] = \"comma\";\n    Embellish[\"SQUARED\"] = \"squared\";\n    Embellish[\"NEGATIVESQUARED\"] = \"negative-squared\";\n})(Embellish || (exports.Embellish = Embellish = {}));\nvar Base;\n(function (Base) {\n    Base[\"LATINCAP\"] = \"latinCap\";\n    Base[\"LATINSMALL\"] = \"latinSmall\";\n    Base[\"GREEKCAP\"] = \"greekCap\";\n    Base[\"GREEKSMALL\"] = \"greekSmall\";\n    Base[\"DIGIT\"] = \"digit\";\n})(Base || (exports.Base = Base = {}));\nfunction num2str(num) {\n    const str = num.toString(16).toUpperCase();\n    return str.length > 3 ? str : ('000' + str).slice(-4);\n}\nfunction makeInterval([a, b], subst) {\n    const start = parseInt(a, 16);\n    const end = parseInt(b, 16);\n    const result = [];\n    for (let i = start; i <= end; i++) {\n        let key = num2str(i);\n        const sub = subst[key];\n        if (sub === false) {\n            continue;\n        }\n        key = subst[key] || key;\n        result.push(key);\n    }\n    return result;\n}\nfunction makeCharInterval(int, subst = {}) {\n    return makeInterval(int, subst).map((x) => String.fromCodePoint(parseInt(x, 16)));\n}\nfunction makeMultiInterval(ints) {\n    let result = [];\n    for (const int of ints) {\n        if (Array.isArray(int)) {\n            result = result.concat(makeCharInterval(int));\n            continue;\n        }\n        result.push(String.fromCodePoint(parseInt(int, 16)));\n    }\n    return result;\n}\nfunction makeCodeInterval(ints) {\n    let result = [];\n    for (const int of ints) {\n        if (Array.isArray(int)) {\n            result = result.concat(makeInterval(int, {}).map((x) => parseInt(x, 16)));\n            continue;\n        }\n        result.push(parseInt(int, 16));\n    }\n    return result;\n}\nconst PROTO_INTERVALS = [\n    {\n        interval: ['1D400', '1D419'],\n        base: Base.LATINCAP,\n        subst: {},\n        capital: true,\n        category: 'Lu',\n        font: Font.BOLD\n    },\n    {\n        interval: ['1D41A', '1D433'],\n        base: Base.LATINSMALL,\n        subst: {},\n        capital: false,\n        category: 'Ll',\n        font: Font.BOLD\n    },\n    {\n        interval: ['1D56C', '1D585'],\n        base: Base.LATINCAP,\n        subst: {},\n        capital: true,\n        category: 'Lu',\n        font: Font.BOLDFRAKTUR\n    },\n    {\n        interval: ['1D586', '1D59F'],\n        base: Base.LATINSMALL,\n        subst: {},\n        capital: false,\n        category: 'Ll',\n        font: Font.BOLDFRAKTUR\n    },\n    {\n        interval: ['1D468', '1D481'],\n        base: Base.LATINCAP,\n        subst: {},\n        capital: true,\n        category: 'Lu',\n        font: Font.BOLDITALIC\n    },\n    {\n        interval: ['1D482', '1D49B'],\n        base: Base.LATINSMALL,\n        subst: {},\n        capital: false,\n        category: 'Ll',\n        font: Font.BOLDITALIC\n    },\n    {\n        interval: ['1D4D0', '1D4E9'],\n        base: Base.LATINCAP,\n        subst: {},\n        capital: true,\n        category: 'Lu',\n        font: Font.BOLDSCRIPT\n    },\n    {\n        interval: ['1D4EA', '1D503'],\n        base: Base.LATINSMALL,\n        subst: {},\n        capital: false,\n        category: 'Ll',\n        font: Font.BOLDSCRIPT\n    },\n    {\n        interval: ['1D538', '1D551'],\n        base: Base.LATINCAP,\n        subst: {\n            '1D53A': '2102',\n            '1D53F': '210D',\n            '1D545': '2115',\n            '1D547': '2119',\n            '1D548': '211A',\n            '1D549': '211D',\n            '1D551': '2124'\n        },\n        capital: true,\n        category: 'Lu',\n        font: Font.DOUBLESTRUCK\n    },\n    {\n        interval: ['1D552', '1D56B'],\n        base: Base.LATINSMALL,\n        subst: {},\n        capital: false,\n        category: 'Ll',\n        font: Font.DOUBLESTRUCK\n    },\n    {\n        interval: ['1D504', '1D51D'],\n        base: Base.LATINCAP,\n        subst: {\n            '1D506': '212D',\n            '1D50B': '210C',\n            '1D50C': '2111',\n            '1D515': '211C',\n            '1D51D': '2128'\n        },\n        capital: true,\n        category: 'Lu',\n        font: Font.FRAKTUR\n    },\n    {\n        interval: ['1D51E', '1D537'],\n        base: Base.LATINSMALL,\n        subst: {},\n        capital: false,\n        category: 'Ll',\n        font: Font.FRAKTUR\n    },\n    {\n        interval: ['FF21', 'FF3A'],\n        base: Base.LATINCAP,\n        subst: {},\n        capital: true,\n        category: 'Lu',\n        font: Font.FULLWIDTH\n    },\n    {\n        interval: ['FF41', 'FF5A'],\n        base: Base.LATINSMALL,\n        subst: {},\n        capital: false,\n        category: 'Ll',\n        font: Font.FULLWIDTH\n    },\n    {\n        interval: ['1D434', '1D44D'],\n        base: Base.LATINCAP,\n        subst: {},\n        capital: true,\n        category: 'Lu',\n        font: Font.ITALIC\n    },\n    {\n        interval: ['1D44E', '1D467'],\n        base: Base.LATINSMALL,\n        subst: { '1D455': '210E' },\n        capital: false,\n        category: 'Ll',\n        font: Font.ITALIC\n    },\n    {\n        interval: ['1D670', '1D689'],\n        base: Base.LATINCAP,\n        subst: {},\n        capital: true,\n        category: 'Lu',\n        font: Font.MONOSPACE\n    },\n    {\n        interval: ['1D68A', '1D6A3'],\n        base: Base.LATINSMALL,\n        subst: {},\n        capital: false,\n        category: 'Ll',\n        font: Font.MONOSPACE\n    },\n    {\n        interval: ['0041', '005A'],\n        base: Base.LATINCAP,\n        subst: {},\n        capital: true,\n        category: 'Lu',\n        font: Font.NORMAL\n    },\n    {\n        interval: ['0061', '007A'],\n        base: Base.LATINSMALL,\n        subst: {},\n        capital: false,\n        category: 'Ll',\n        font: Font.NORMAL\n    },\n    {\n        interval: ['1D49C', '1D4B5'],\n        base: Base.LATINCAP,\n        subst: {\n            '1D49D': '212C',\n            '1D4A0': '2130',\n            '1D4A1': '2131',\n            '1D4A3': '210B',\n            '1D4A4': '2110',\n            '1D4A7': '2112',\n            '1D4A8': '2133',\n            '1D4AD': '211B'\n        },\n        capital: true,\n        category: 'Lu',\n        font: Font.SCRIPT\n    },\n    {\n        interval: ['1D4B6', '1D4CF'],\n        base: Base.LATINSMALL,\n        subst: { '1D4BA': '212F', '1D4BC': '210A', '1D4C4': '2134' },\n        capital: false,\n        category: 'Ll',\n        font: Font.SCRIPT\n    },\n    {\n        interval: ['1D5A0', '1D5B9'],\n        base: Base.LATINCAP,\n        subst: {},\n        capital: true,\n        category: 'Lu',\n        font: Font.SANSSERIF\n    },\n    {\n        interval: ['1D5BA', '1D5D3'],\n        base: Base.LATINSMALL,\n        subst: {},\n        capital: false,\n        category: 'Ll',\n        font: Font.SANSSERIF\n    },\n    {\n        interval: ['1D608', '1D621'],\n        base: Base.LATINCAP,\n        subst: {},\n        capital: true,\n        category: 'Lu',\n        font: Font.SANSSERIFITALIC\n    },\n    {\n        interval: ['1D622', '1D63B'],\n        base: Base.LATINSMALL,\n        subst: {},\n        capital: false,\n        category: 'Ll',\n        font: Font.SANSSERIFITALIC\n    },\n    {\n        interval: ['1D5D4', '1D5ED'],\n        base: Base.LATINCAP,\n        subst: {},\n        capital: true,\n        category: 'Lu',\n        font: Font.SANSSERIFBOLD\n    },\n    {\n        interval: ['1D5EE', '1D607'],\n        base: Base.LATINSMALL,\n        subst: {},\n        capital: false,\n        category: 'Ll',\n        font: Font.SANSSERIFBOLD\n    },\n    {\n        interval: ['1D63C', '1D655'],\n        base: Base.LATINCAP,\n        subst: {},\n        capital: true,\n        category: 'Lu',\n        font: Font.SANSSERIFBOLDITALIC\n    },\n    {\n        interval: ['1D656', '1D66F'],\n        base: Base.LATINSMALL,\n        subst: {},\n        capital: false,\n        category: 'Ll',\n        font: Font.SANSSERIFBOLDITALIC\n    },\n    {\n        interval: ['0391', '03A9'],\n        base: Base.GREEKCAP,\n        subst: { '03A2': '03F4' },\n        capital: true,\n        category: 'Lu',\n        font: Font.NORMAL\n    },\n    {\n        interval: ['03B0', '03D0'],\n        base: Base.GREEKSMALL,\n        subst: {\n            '03B0': '2207',\n            '03CA': '2202',\n            '03CB': '03F5',\n            '03CC': '03D1',\n            '03CD': '03F0',\n            '03CE': '03D5',\n            '03CF': '03F1',\n            '03D0': '03D6'\n        },\n        capital: false,\n        category: 'Ll',\n        font: Font.NORMAL\n    },\n    {\n        interval: ['1D6A8', '1D6C0'],\n        base: Base.GREEKCAP,\n        subst: {},\n        capital: true,\n        category: 'Lu',\n        font: Font.BOLD\n    },\n    {\n        interval: ['1D6C1', '1D6E1'],\n        base: Base.GREEKSMALL,\n        subst: {},\n        capital: false,\n        category: 'Ll',\n        font: Font.BOLD\n    },\n    {\n        interval: ['1D6E2', '1D6FA'],\n        base: Base.GREEKCAP,\n        subst: {},\n        capital: true,\n        category: 'Lu',\n        font: Font.ITALIC\n    },\n    {\n        interval: ['1D6FB', '1D71B'],\n        base: Base.GREEKSMALL,\n        subst: {},\n        capital: false,\n        category: 'Ll',\n        font: Font.ITALIC\n    },\n    {\n        interval: ['1D71C', '1D734'],\n        base: Base.GREEKCAP,\n        subst: {},\n        capital: true,\n        category: 'Lu',\n        font: Font.BOLDITALIC\n    },\n    {\n        interval: ['1D735', '1D755'],\n        base: Base.GREEKSMALL,\n        subst: {},\n        capital: false,\n        category: 'Ll',\n        font: Font.BOLDITALIC\n    },\n    {\n        interval: ['1D756', '1D76E'],\n        base: Base.GREEKCAP,\n        subst: {},\n        capital: true,\n        category: 'Lu',\n        font: Font.SANSSERIFBOLD\n    },\n    {\n        interval: ['1D76F', '1D78F'],\n        base: Base.GREEKSMALL,\n        subst: {},\n        capital: false,\n        category: 'Ll',\n        font: Font.SANSSERIFBOLD\n    },\n    {\n        interval: ['1D790', '1D7A8'],\n        base: Base.GREEKCAP,\n        subst: {},\n        capital: true,\n        category: 'Lu',\n        font: Font.SANSSERIFBOLDITALIC\n    },\n    {\n        interval: ['1D7A9', '1D7C9'],\n        base: Base.GREEKSMALL,\n        subst: {},\n        capital: false,\n        category: 'Ll',\n        font: Font.SANSSERIFBOLDITALIC\n    },\n    {\n        interval: ['0030', '0039'],\n        base: Base.DIGIT,\n        subst: {},\n        offset: 0,\n        category: 'Nd',\n        font: Font.NORMAL\n    },\n    {\n        interval: ['2070', '2079'],\n        base: Base.DIGIT,\n        subst: { 2071: '00B9', 2072: '00B2', 2073: '00B3' },\n        offset: 0,\n        category: 'No',\n        font: Embellish.SUPER\n    },\n    {\n        interval: ['2080', '2089'],\n        base: Base.DIGIT,\n        subst: {},\n        offset: 0,\n        category: 'No',\n        font: Embellish.SUB\n    },\n    {\n        interval: ['245F', '2473'],\n        base: Base.DIGIT,\n        subst: { '245F': '24EA' },\n        offset: 0,\n        category: 'No',\n        font: Embellish.CIRCLED\n    },\n    {\n        interval: ['3251', '325F'],\n        base: Base.DIGIT,\n        subst: {},\n        offset: 21,\n        category: 'No',\n        font: Embellish.CIRCLED\n    },\n    {\n        interval: ['32B1', '32BF'],\n        base: Base.DIGIT,\n        subst: {},\n        offset: 36,\n        category: 'No',\n        font: Embellish.CIRCLED\n    },\n    {\n        interval: ['2474', '2487'],\n        base: Base.DIGIT,\n        subst: {},\n        offset: 1,\n        category: 'No',\n        font: Embellish.PARENTHESIZED\n    },\n    {\n        interval: ['2487', '249B'],\n        base: Base.DIGIT,\n        subst: { 2487: '1F100' },\n        offset: 0,\n        category: 'No',\n        font: Embellish.PERIOD\n    },\n    {\n        interval: ['2775', '277F'],\n        base: Base.DIGIT,\n        subst: { 2775: '24FF' },\n        offset: 0,\n        category: 'No',\n        font: Embellish.NEGATIVECIRCLED\n    },\n    {\n        interval: ['24EB', '24F4'],\n        base: Base.DIGIT,\n        subst: {},\n        offset: 11,\n        category: 'No',\n        font: Embellish.NEGATIVECIRCLED\n    },\n    {\n        interval: ['24F5', '24FE'],\n        base: Base.DIGIT,\n        subst: {},\n        offset: 1,\n        category: 'No',\n        font: Embellish.DOUBLECIRCLED\n    },\n    {\n        interval: ['277F', '2789'],\n        base: Base.DIGIT,\n        subst: { '277F': '1F10B' },\n        offset: 0,\n        category: 'No',\n        font: Embellish.CIRCLEDSANSSERIF\n    },\n    {\n        interval: ['2789', '2793'],\n        base: Base.DIGIT,\n        subst: { 2789: '1F10C' },\n        offset: 0,\n        category: 'No',\n        font: Embellish.NEGATIVECIRCLEDSANSSERIF\n    },\n    {\n        interval: ['FF10', 'FF19'],\n        base: Base.DIGIT,\n        subst: {},\n        offset: 0,\n        category: 'Nd',\n        font: Font.FULLWIDTH\n    },\n    {\n        interval: ['1D7CE', '1D7D7'],\n        base: Base.DIGIT,\n        subst: {},\n        offset: 0,\n        category: 'Nd',\n        font: Font.BOLD\n    },\n    {\n        interval: ['1D7D8', '1D7E1'],\n        base: Base.DIGIT,\n        subst: {},\n        offset: 0,\n        category: 'Nd',\n        font: Font.DOUBLESTRUCK\n    },\n    {\n        interval: ['1D7E2', '1D7EB'],\n        base: Base.DIGIT,\n        subst: {},\n        offset: 0,\n        category: 'Nd',\n        font: Font.SANSSERIF\n    },\n    {\n        interval: ['1D7EC', '1D7F5'],\n        base: Base.DIGIT,\n        subst: {},\n        offset: 0,\n        category: 'Nd',\n        font: Font.SANSSERIFBOLD\n    },\n    {\n        interval: ['1D7F6', '1D7FF'],\n        base: Base.DIGIT,\n        subst: {},\n        offset: 0,\n        category: 'Nd',\n        font: Font.MONOSPACE\n    },\n    {\n        interval: ['1F101', '1F10A'],\n        base: Base.DIGIT,\n        subst: {},\n        offset: 0,\n        category: 'No',\n        font: Embellish.COMMA\n    },\n    {\n        interval: ['24B6', '24CF'],\n        base: Base.LATINCAP,\n        subst: {},\n        capital: true,\n        category: 'So',\n        font: Embellish.CIRCLED\n    },\n    {\n        interval: ['24D0', '24E9'],\n        base: Base.LATINSMALL,\n        subst: {},\n        capital: false,\n        category: 'So',\n        font: Embellish.CIRCLED\n    },\n    {\n        interval: ['1F110', '1F129'],\n        base: Base.LATINCAP,\n        subst: {},\n        capital: true,\n        category: 'So',\n        font: Embellish.PARENTHESIZED\n    },\n    {\n        interval: ['249C', '24B5'],\n        base: Base.LATINSMALL,\n        subst: {},\n        capital: false,\n        category: 'So',\n        font: Embellish.PARENTHESIZED\n    },\n    {\n        interval: ['1F130', '1F149'],\n        base: Base.LATINCAP,\n        subst: {},\n        capital: true,\n        category: 'So',\n        font: Embellish.SQUARED\n    },\n    {\n        interval: ['1F170', '1F189'],\n        base: Base.LATINCAP,\n        subst: {},\n        capital: true,\n        category: 'So',\n        font: Embellish.NEGATIVESQUARED\n    },\n    {\n        interval: ['1F150', '1F169'],\n        base: Base.LATINCAP,\n        subst: {},\n        capital: true,\n        category: 'So',\n        font: Embellish.NEGATIVECIRCLED\n    }\n];\nexports.INTERVALS = new Map();\nfunction alphabetName(base, font) {\n    const capFont = font\n        .split('-')\n        .map((x) => x[0].toUpperCase() + x.slice(1))\n        .join('');\n    return base + capFont;\n}\nfor (const proto of PROTO_INTERVALS) {\n    const key = alphabetName(proto.base, proto.font);\n    const interval = makeCharInterval(proto.interval, proto.subst);\n    let alphabet = exports.INTERVALS.get(key);\n    if (alphabet) {\n        alphabet.unicode = alphabet.unicode.concat(interval);\n        continue;\n    }\n    alphabet = proto;\n    alphabet.unicode = interval;\n    exports.INTERVALS.set(key, alphabet);\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SemanticSecondary = exports.SemanticFont = exports.SemanticRole = exports.SemanticType = void 0;\nconst Alphabet = require(\"../speech_rules/alphabet.js\");\nvar Types;\n(function (Types) {\n    Types[\"PUNCTUATION\"] = \"punctuation\";\n    Types[\"FENCE\"] = \"fence\";\n    Types[\"NUMBER\"] = \"number\";\n    Types[\"IDENTIFIER\"] = \"identifier\";\n    Types[\"TEXT\"] = \"text\";\n    Types[\"OPERATOR\"] = \"operator\";\n    Types[\"RELATION\"] = \"relation\";\n    Types[\"LARGEOP\"] = \"largeop\";\n    Types[\"FUNCTION\"] = \"function\";\n    Types[\"ACCENT\"] = \"accent\";\n    Types[\"FENCED\"] = \"fenced\";\n    Types[\"FRACTION\"] = \"fraction\";\n    Types[\"PUNCTUATED\"] = \"punctuated\";\n    Types[\"RELSEQ\"] = \"relseq\";\n    Types[\"MULTIREL\"] = \"multirel\";\n    Types[\"INFIXOP\"] = \"infixop\";\n    Types[\"PREFIXOP\"] = \"prefixop\";\n    Types[\"POSTFIXOP\"] = \"postfixop\";\n    Types[\"APPL\"] = \"appl\";\n    Types[\"INTEGRAL\"] = \"integral\";\n    Types[\"BIGOP\"] = \"bigop\";\n    Types[\"SQRT\"] = \"sqrt\";\n    Types[\"ROOT\"] = \"root\";\n    Types[\"LIMUPPER\"] = \"limupper\";\n    Types[\"LIMLOWER\"] = \"limlower\";\n    Types[\"LIMBOTH\"] = \"limboth\";\n    Types[\"SUBSCRIPT\"] = \"subscript\";\n    Types[\"SUPERSCRIPT\"] = \"superscript\";\n    Types[\"UNDERSCORE\"] = \"underscore\";\n    Types[\"OVERSCORE\"] = \"overscore\";\n    Types[\"TENSOR\"] = \"tensor\";\n    Types[\"TABLE\"] = \"table\";\n    Types[\"MULTILINE\"] = \"multiline\";\n    Types[\"MATRIX\"] = \"matrix\";\n    Types[\"VECTOR\"] = \"vector\";\n    Types[\"CASES\"] = \"cases\";\n    Types[\"ROW\"] = \"row\";\n    Types[\"LINE\"] = \"line\";\n    Types[\"CELL\"] = \"cell\";\n    Types[\"ENCLOSE\"] = \"enclose\";\n    Types[\"INFERENCE\"] = \"inference\";\n    Types[\"RULELABEL\"] = \"rulelabel\";\n    Types[\"CONCLUSION\"] = \"conclusion\";\n    Types[\"PREMISES\"] = \"premises\";\n    Types[\"UNKNOWN\"] = \"unknown\";\n    Types[\"EMPTY\"] = \"empty\";\n})(Types || (Types = {}));\nexports.SemanticType = Object.assign({}, Types);\nvar Roles;\n(function (Roles) {\n    Roles[\"COMMA\"] = \"comma\";\n    Roles[\"SEMICOLON\"] = \"semicolon\";\n    Roles[\"ELLIPSIS\"] = \"ellipsis\";\n    Roles[\"FULLSTOP\"] = \"fullstop\";\n    Roles[\"QUESTION\"] = \"question\";\n    Roles[\"EXCLAMATION\"] = \"exclamation\";\n    Roles[\"QUOTES\"] = \"quotes\";\n    Roles[\"DASH\"] = \"dash\";\n    Roles[\"TILDE\"] = \"tilde\";\n    Roles[\"PRIME\"] = \"prime\";\n    Roles[\"DEGREE\"] = \"degree\";\n    Roles[\"VBAR\"] = \"vbar\";\n    Roles[\"COLON\"] = \"colon\";\n    Roles[\"OPENFENCE\"] = \"openfence\";\n    Roles[\"CLOSEFENCE\"] = \"closefence\";\n    Roles[\"APPLICATION\"] = \"application\";\n    Roles[\"DUMMY\"] = \"dummy\";\n    Roles[\"UNIT\"] = \"unit\";\n    Roles[\"LABEL\"] = \"label\";\n    Roles[\"OPEN\"] = \"open\";\n    Roles[\"CLOSE\"] = \"close\";\n    Roles[\"TOP\"] = \"top\";\n    Roles[\"BOTTOM\"] = \"bottom\";\n    Roles[\"NEUTRAL\"] = \"neutral\";\n    Roles[\"METRIC\"] = \"metric\";\n    Roles[\"LATINLETTER\"] = \"latinletter\";\n    Roles[\"GREEKLETTER\"] = \"greekletter\";\n    Roles[\"OTHERLETTER\"] = \"otherletter\";\n    Roles[\"NUMBERSET\"] = \"numbersetletter\";\n    Roles[\"INTEGER\"] = \"integer\";\n    Roles[\"FLOAT\"] = \"float\";\n    Roles[\"OTHERNUMBER\"] = \"othernumber\";\n    Roles[\"INFTY\"] = \"infty\";\n    Roles[\"MIXED\"] = \"mixed\";\n    Roles[\"MULTIACCENT\"] = \"multiaccent\";\n    Roles[\"OVERACCENT\"] = \"overaccent\";\n    Roles[\"UNDERACCENT\"] = \"underaccent\";\n    Roles[\"UNDEROVER\"] = \"underover\";\n    Roles[\"SUBSUP\"] = \"subsup\";\n    Roles[\"LEFTSUB\"] = \"leftsub\";\n    Roles[\"LEFTSUPER\"] = \"leftsuper\";\n    Roles[\"RIGHTSUB\"] = \"rightsub\";\n    Roles[\"RIGHTSUPER\"] = \"rightsuper\";\n    Roles[\"LEFTRIGHT\"] = \"leftright\";\n    Roles[\"ABOVEBELOW\"] = \"abovebelow\";\n    Roles[\"SETEMPTY\"] = \"set empty\";\n    Roles[\"SETEXT\"] = \"set extended\";\n    Roles[\"SETSINGLE\"] = \"set singleton\";\n    Roles[\"SETCOLLECT\"] = \"set collection\";\n    Roles[\"STRING\"] = \"string\";\n    Roles[\"SPACE\"] = \"space\";\n    Roles[\"ANNOTATION\"] = \"annotation\";\n    Roles[\"TEXT\"] = \"text\";\n    Roles[\"SEQUENCE\"] = \"sequence\";\n    Roles[\"ENDPUNCT\"] = \"endpunct\";\n    Roles[\"STARTPUNCT\"] = \"startpunct\";\n    Roles[\"NEGATIVE\"] = \"negative\";\n    Roles[\"POSITIVE\"] = \"positive\";\n    Roles[\"NEGATION\"] = \"negation\";\n    Roles[\"MULTIOP\"] = \"multiop\";\n    Roles[\"PREFIXOP\"] = \"prefix operator\";\n    Roles[\"POSTFIXOP\"] = \"postfix operator\";\n    Roles[\"LIMFUNC\"] = \"limit function\";\n    Roles[\"INFIXFUNC\"] = \"infix function\";\n    Roles[\"PREFIXFUNC\"] = \"prefix function\";\n    Roles[\"POSTFIXFUNC\"] = \"postfix function\";\n    Roles[\"SIMPLEFUNC\"] = \"simple function\";\n    Roles[\"COMPFUNC\"] = \"composed function\";\n    Roles[\"SUM\"] = \"sum\";\n    Roles[\"INTEGRAL\"] = \"integral\";\n    Roles[\"GEOMETRY\"] = \"geometry\";\n    Roles[\"BOX\"] = \"box\";\n    Roles[\"BLOCK\"] = \"block\";\n    Roles[\"ADDITION\"] = \"addition\";\n    Roles[\"MULTIPLICATION\"] = \"multiplication\";\n    Roles[\"SUBTRACTION\"] = \"subtraction\";\n    Roles[\"IMPLICIT\"] = \"implicit\";\n    Roles[\"DIVISION\"] = \"division\";\n    Roles[\"VULGAR\"] = \"vulgar\";\n    Roles[\"EQUALITY\"] = \"equality\";\n    Roles[\"INEQUALITY\"] = \"inequality\";\n    Roles[\"ARROW\"] = \"arrow\";\n    Roles[\"ELEMENT\"] = \"element\";\n    Roles[\"NONELEMENT\"] = \"nonelement\";\n    Roles[\"REELEMENT\"] = \"reelement\";\n    Roles[\"RENONELEMENT\"] = \"renonelement\";\n    Roles[\"SET\"] = \"set\";\n    Roles[\"DETERMINANT\"] = \"determinant\";\n    Roles[\"ROWVECTOR\"] = \"rowvector\";\n    Roles[\"BINOMIAL\"] = \"binomial\";\n    Roles[\"SQUAREMATRIX\"] = \"squarematrix\";\n    Roles[\"CYCLE\"] = \"cycle\";\n    Roles[\"MULTILINE\"] = \"multiline\";\n    Roles[\"MATRIX\"] = \"matrix\";\n    Roles[\"VECTOR\"] = \"vector\";\n    Roles[\"CASES\"] = \"cases\";\n    Roles[\"TABLE\"] = \"table\";\n    Roles[\"CAYLEY\"] = \"cayley\";\n    Roles[\"PROOF\"] = \"proof\";\n    Roles[\"LEFT\"] = \"left\";\n    Roles[\"RIGHT\"] = \"right\";\n    Roles[\"UP\"] = \"up\";\n    Roles[\"DOWN\"] = \"down\";\n    Roles[\"FINAL\"] = \"final\";\n    Roles[\"SINGLE\"] = \"single\";\n    Roles[\"HYP\"] = \"hyp\";\n    Roles[\"AXIOM\"] = \"axiom\";\n    Roles[\"LOGIC\"] = \"logic\";\n    Roles[\"UNKNOWN\"] = \"unknown\";\n    Roles[\"MGLYPH\"] = \"mglyph\";\n})(Roles || (Roles = {}));\nexports.SemanticRole = Object.assign({}, Roles);\nvar ExtraFont;\n(function (ExtraFont) {\n    ExtraFont[\"CALIGRAPHIC\"] = \"caligraphic\";\n    ExtraFont[\"CALIGRAPHICBOLD\"] = \"caligraphic-bold\";\n    ExtraFont[\"OLDSTYLE\"] = \"oldstyle\";\n    ExtraFont[\"OLDSTYLEBOLD\"] = \"oldstyle-bold\";\n    ExtraFont[\"UNKNOWN\"] = \"unknown\";\n})(ExtraFont || (ExtraFont = {}));\nexports.SemanticFont = Object.assign(Object.assign(Object.assign({}, Alphabet.Font), ExtraFont), Alphabet.Embellish);\nvar SecondaryEnum;\n(function (SecondaryEnum) {\n    SecondaryEnum[\"ALLLETTERS\"] = \"allLetters\";\n    SecondaryEnum[\"D\"] = \"d\";\n    SecondaryEnum[\"BAR\"] = \"bar\";\n    SecondaryEnum[\"TILDE\"] = \"tilde\";\n})(SecondaryEnum || (SecondaryEnum = {}));\nexports.SemanticSecondary = Object.assign(Object.assign({}, Alphabet.Base), SecondaryEnum);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Combiners = void 0;\nexports.pluralCase = pluralCase;\nexports.identityTransformer = identityTransformer;\nexports.siCombiner = siCombiner;\nexports.convertVulgarFraction = convertVulgarFraction;\nexports.vulgarFractionSmall = vulgarFractionSmall;\nconst semantic_meaning_js_1 = require(\"../semantic_tree/semantic_meaning.js\");\nfunction pluralCase(num, _plural) {\n    return num.toString();\n}\nfunction identityTransformer(input) {\n    return input.toString();\n}\nfunction siCombiner(prefix, unit) {\n    return prefix + unit.toLowerCase();\n}\nexports.Combiners = {};\nexports.Combiners.identityCombiner = function (a, b, c) {\n    return a + b + c;\n};\nexports.Combiners.prefixCombiner = function (letter, font, cap) {\n    letter = cap ? cap + ' ' + letter : letter;\n    return font ? font + ' ' + letter : letter;\n};\nexports.Combiners.postfixCombiner = function (letter, font, cap) {\n    letter = cap ? cap + ' ' + letter : letter;\n    return font ? letter + ' ' + font : letter;\n};\nexports.Combiners.romanceCombiner = function (letter, font, cap) {\n    letter = cap ? letter + ' ' + cap : letter;\n    return font ? letter + ' ' + font : letter;\n};\nfunction convertVulgarFraction(node, over = '') {\n    if (!node.childNodes ||\n        !node.childNodes[0] ||\n        !node.childNodes[0].childNodes ||\n        node.childNodes[0].childNodes.length < 2 ||\n        node.childNodes[0].childNodes[0].tagName !==\n            semantic_meaning_js_1.SemanticType.NUMBER ||\n        node.childNodes[0].childNodes[0].getAttribute('role') !==\n            semantic_meaning_js_1.SemanticRole.INTEGER ||\n        node.childNodes[0].childNodes[1].tagName !==\n            semantic_meaning_js_1.SemanticType.NUMBER ||\n        node.childNodes[0].childNodes[1].getAttribute('role') !==\n            semantic_meaning_js_1.SemanticRole.INTEGER) {\n        return { convertible: false, content: node.textContent };\n    }\n    const denStr = node.childNodes[0].childNodes[1].textContent;\n    const enumStr = node.childNodes[0].childNodes[0].textContent;\n    const denominator = Number(denStr);\n    const enumerator = Number(enumStr);\n    if (isNaN(denominator) || isNaN(enumerator)) {\n        return {\n            convertible: false,\n            content: `${enumStr} ${over} ${denStr}`\n        };\n    }\n    return {\n        convertible: true,\n        enumerator: enumerator,\n        denominator: denominator\n    };\n}\nfunction vulgarFractionSmall(node, enumer, denom) {\n    const conversion = convertVulgarFraction(node);\n    if (conversion.convertible) {\n        const enumerator = conversion.enumerator;\n        const denominator = conversion.denominator;\n        return (enumerator > 0 &&\n            enumerator < enumer &&\n            denominator > 0 &&\n            denominator < denom);\n    }\n    return false;\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MESSAGES = MESSAGES;\nexports.NUMBERS = NUMBERS;\nexports.ALPHABETS = ALPHABETS;\nexports.FUNCTIONS = FUNCTIONS;\nexports.SUBISO = SUBISO;\nconst tr = require(\"./transformers.js\");\nfunction MESSAGES() {\n    return {\n        MS: {},\n        MSroots: {},\n        font: {},\n        embellish: {},\n        role: {},\n        enclose: {},\n        navigate: {},\n        regexp: {},\n        unitTimes: ''\n    };\n}\nfunction NUMBERS(numbers = {}) {\n    return Object.assign({\n        zero: 'zero',\n        ones: [],\n        tens: [],\n        large: [],\n        special: {},\n        wordOrdinal: tr.identityTransformer,\n        numericOrdinal: tr.identityTransformer,\n        numberToWords: tr.identityTransformer,\n        numberToOrdinal: tr.pluralCase,\n        vulgarSep: ' ',\n        numSep: ' '\n    }, numbers);\n}\nfunction ALPHABETS() {\n    return {\n        latinSmall: [],\n        latinCap: [],\n        greekSmall: [],\n        greekCap: [],\n        capPrefix: { default: '' },\n        smallPrefix: { default: '' },\n        digitPrefix: { default: '' },\n        languagePrefix: {},\n        digitTrans: {\n            default: tr.identityTransformer,\n            mathspeak: tr.identityTransformer,\n            clearspeak: tr.identityTransformer\n        },\n        letterTrans: { default: tr.identityTransformer },\n        combiner: (letter, _font, _cap) => {\n            return letter;\n        }\n    };\n}\nfunction FUNCTIONS() {\n    return {\n        fracNestDepth: (n) => tr.vulgarFractionSmall(n, 10, 100),\n        radicalNestDepth: (_count) => '',\n        combineRootIndex: function (postfix, _index) {\n            return postfix;\n        },\n        combineNestedFraction: tr.Combiners.identityCombiner,\n        combineNestedRadical: tr.Combiners.identityCombiner,\n        fontRegexp: function (font) {\n            return new RegExp('^' + font.split(/ |-/).join('( |-)') + '( |-)');\n        },\n        si: tr.siCombiner,\n        plural: tr.identityTransformer\n    };\n}\nfunction SUBISO() {\n    return {\n        default: '',\n        current: '',\n        all: []\n    };\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LOCALE = void 0;\nexports.createLocale = createLocale;\nconst messages_js_1 = require(\"./messages.js\");\nexports.LOCALE = createLocale();\nfunction createLocale() {\n    return {\n        FUNCTIONS: (0, messages_js_1.FUNCTIONS)(),\n        MESSAGES: (0, messages_js_1.MESSAGES)(),\n        ALPHABETS: (0, messages_js_1.ALPHABETS)(),\n        NUMBERS: (0, messages_js_1.NUMBERS)(),\n        COMBINERS: {},\n        CORRECTIONS: {},\n        SUBISO: (0, messages_js_1.SUBISO)()\n    };\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.nestingToString = nestingToString;\nexports.combinePostfixIndex = combinePostfixIndex;\nexports.localFont = localFont;\nexports.localRole = localRole;\nexports.localEnclose = localEnclose;\nexports.localeFontCombiner = localeFontCombiner;\nconst locale_js_1 = require(\"./locale.js\");\nconst transformers_js_1 = require(\"./transformers.js\");\nfunction nestingToString(count) {\n    switch (count) {\n        case 1:\n            return locale_js_1.LOCALE.MESSAGES.MS.ONCE || '';\n        case 2:\n            return locale_js_1.LOCALE.MESSAGES.MS.TWICE;\n        default:\n            return count.toString();\n    }\n}\nfunction combinePostfixIndex(postfix, index) {\n    return postfix === locale_js_1.LOCALE.MESSAGES.MS.ROOTINDEX ||\n        postfix === locale_js_1.LOCALE.MESSAGES.MS.INDEX\n        ? postfix\n        : postfix + ' ' + index;\n}\nfunction localFont(font) {\n    return extractString(locale_js_1.LOCALE.MESSAGES.font[font], font);\n}\nfunction localRole(role) {\n    return extractString(locale_js_1.LOCALE.MESSAGES.role[role], role);\n}\nfunction localEnclose(enclose) {\n    return extractString(locale_js_1.LOCALE.MESSAGES.enclose[enclose], enclose);\n}\nfunction extractString(combiner, fallback) {\n    if (combiner === undefined) {\n        return fallback;\n    }\n    return typeof combiner === 'string' ? combiner : combiner[0];\n}\nfunction localeFontCombiner(font) {\n    return typeof font === 'string'\n        ? { font: font, combiner: locale_js_1.LOCALE.ALPHABETS.combiner }\n        : {\n            font: font[0],\n            combiner: locale_js_1.LOCALE.COMBINERS[font[1]] ||\n                transformers_js_1.Combiners[font[1]] ||\n                locale_js_1.LOCALE.ALPHABETS.combiner\n        };\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Grammar = exports.ATTRIBUTE = void 0;\nexports.correctFont = correctFont;\nconst DomUtil = require(\"../common/dom_util.js\");\nconst engine_js_1 = require(\"../common/engine.js\");\nconst LocaleUtil = require(\"../l10n/locale_util.js\");\nconst locale_js_1 = require(\"../l10n/locale.js\");\nexports.ATTRIBUTE = 'grammar';\nclass Grammar {\n    static getInstance() {\n        Grammar.instance = Grammar.instance || new Grammar();\n        return Grammar.instance;\n    }\n    static parseInput(grammar) {\n        const attributes = {};\n        const components = grammar.split(':');\n        for (const component of components) {\n            const comp = component.split('=');\n            const key = comp[0].trim();\n            if (comp[1]) {\n                attributes[key] = comp[1].trim();\n                continue;\n            }\n            key.match(/^!/)\n                ? (attributes[key.slice(1)] = false)\n                : (attributes[key] = true);\n        }\n        return attributes;\n    }\n    static parseState(stateStr) {\n        const state = {};\n        const corrections = stateStr.split(' ');\n        for (const correction of corrections) {\n            const corr = correction.split(':');\n            const key = corr[0];\n            const value = corr[1];\n            state[key] = value ? value : true;\n        }\n        return state;\n    }\n    static translateString(text) {\n        if (text.match(/:unit$/)) {\n            return Grammar.translateUnit(text);\n        }\n        const engine = engine_js_1.Engine.getInstance();\n        let result = engine.evaluator(text, engine.dynamicCstr);\n        result = result === null ? text : result;\n        if (Grammar.getInstance().getParameter('plural')) {\n            result = locale_js_1.LOCALE.FUNCTIONS.plural(result);\n        }\n        return result;\n    }\n    static translateUnit(text) {\n        text = Grammar.prepareUnit(text);\n        const engine = engine_js_1.Engine.getInstance();\n        const plural = Grammar.getInstance().getParameter('plural');\n        const strict = engine.strict;\n        const baseCstr = `${engine.locale}.${engine.modality}.default`;\n        engine.strict = true;\n        let cstr;\n        let result;\n        if (plural) {\n            cstr = engine.defaultParser.parse(baseCstr + '.plural');\n            result = engine.evaluator(text, cstr);\n        }\n        if (result) {\n            engine.strict = strict;\n            return result;\n        }\n        cstr = engine.defaultParser.parse(baseCstr + '.default');\n        result = engine.evaluator(text, cstr);\n        engine.strict = strict;\n        if (!result) {\n            return Grammar.cleanUnit(text);\n        }\n        if (plural) {\n            result = locale_js_1.LOCALE.FUNCTIONS.plural(result);\n        }\n        return result;\n    }\n    static prepareUnit(text) {\n        const match = text.match(/:unit$/);\n        return match\n            ? text.slice(0, match.index).replace(/\\s+/g, ' ') +\n                text.slice(match.index)\n            : text;\n    }\n    static cleanUnit(text) {\n        if (text.match(/:unit$/)) {\n            return text.replace(/:unit$/, '');\n        }\n        return text;\n    }\n    clear() {\n        this.parameters_ = {};\n        this.stateStack_ = [];\n    }\n    setParameter(parameter, value) {\n        const oldValue = this.parameters_[parameter];\n        value\n            ? (this.parameters_[parameter] = value)\n            : delete this.parameters_[parameter];\n        return oldValue;\n    }\n    getParameter(parameter) {\n        return this.parameters_[parameter];\n    }\n    setCorrection(correction, func) {\n        this.corrections_[correction] = func;\n    }\n    setPreprocessor(preprocessor, func) {\n        this.preprocessors_[preprocessor] = func;\n    }\n    getCorrection(correction) {\n        return this.corrections_[correction];\n    }\n    getState() {\n        const pairs = [];\n        for (const [key, val] of Object.entries(this.parameters_)) {\n            pairs.push(typeof val === 'string' ? key + ':' + val : key);\n        }\n        return pairs.join(' ');\n    }\n    processSingles() {\n        const assignment = {};\n        for (const single of this.singles) {\n            assignment[single] = false;\n        }\n        this.singles = [];\n        this.pushState(assignment);\n    }\n    pushState(assignment) {\n        for (let [key, value] of Object.entries(assignment)) {\n            if (key.match(/^\\?/)) {\n                delete assignment[key];\n                key = key.slice(1);\n                this.singles.push(key);\n            }\n            assignment[key] = this.setParameter(key, value);\n        }\n        this.stateStack_.push(assignment);\n    }\n    popState() {\n        const assignment = this.stateStack_.pop();\n        for (const [key, val] of Object.entries(assignment)) {\n            this.setParameter(key, val);\n        }\n    }\n    setAttribute(node) {\n        if (node && node.nodeType === DomUtil.NodeType.ELEMENT_NODE) {\n            const state = this.getState();\n            if (state) {\n                node.setAttribute(exports.ATTRIBUTE, state);\n            }\n        }\n    }\n    preprocess(text) {\n        return this.runProcessors(text, this.preprocessors_);\n    }\n    correct(text) {\n        return this.runProcessors(text, this.corrections_);\n    }\n    apply(text, opt_flags) {\n        this.currentFlags = opt_flags || {};\n        text =\n            this.currentFlags.adjust || this.currentFlags.preprocess\n                ? Grammar.getInstance().preprocess(text)\n                : text;\n        if (this.parameters_['translate'] || this.currentFlags.translate) {\n            text = Grammar.translateString(text);\n        }\n        text =\n            this.currentFlags.adjust || this.currentFlags.correct\n                ? Grammar.getInstance().correct(text)\n                : text;\n        this.currentFlags = {};\n        return text;\n    }\n    runProcessors(text, funcs) {\n        for (const [key, val] of Object.entries(this.parameters_)) {\n            const func = funcs[key];\n            if (!func) {\n                continue;\n            }\n            text = val === true ? func(text) : func(text, val);\n        }\n        return text;\n    }\n    constructor() {\n        this.currentFlags = {};\n        this.parameters_ = {};\n        this.corrections_ = {};\n        this.preprocessors_ = {};\n        this.stateStack_ = [];\n        this.singles = [];\n    }\n}\nexports.Grammar = Grammar;\nfunction correctFont(text, correction) {\n    if (!correction || !text) {\n        return text;\n    }\n    const regexp = locale_js_1.LOCALE.FUNCTIONS.fontRegexp(LocaleUtil.localFont(correction));\n    return text.replace(regexp, '');\n}\nfunction correctCaps(text) {\n    let cap = locale_js_1.LOCALE.ALPHABETS.capPrefix[engine_js_1.Engine.getInstance().domain];\n    if (typeof cap === 'undefined') {\n        cap = locale_js_1.LOCALE.ALPHABETS.capPrefix['default'];\n    }\n    return correctFont(text, cap);\n}\nfunction addAnnotation(text, annotation) {\n    return text + ':' + annotation;\n}\nfunction numbersToAlpha(text) {\n    return text.match(/\\d+/)\n        ? locale_js_1.LOCALE.NUMBERS.numberToWords(parseInt(text, 10))\n        : text;\n}\nfunction noTranslateText(text) {\n    if (text.match(new RegExp('^[' + locale_js_1.LOCALE.MESSAGES.regexp.TEXT + ']+$'))) {\n        Grammar.getInstance().currentFlags['translate'] = false;\n    }\n    return text;\n}\nGrammar.getInstance().setCorrection('localFont', LocaleUtil.localFont);\nGrammar.getInstance().setCorrection('localRole', LocaleUtil.localRole);\nGrammar.getInstance().setCorrection('localEnclose', LocaleUtil.localEnclose);\nGrammar.getInstance().setCorrection('ignoreFont', correctFont);\nGrammar.getInstance().setPreprocessor('annotation', addAnnotation);\nGrammar.getInstance().setPreprocessor('noTranslateText', noTranslateText);\nGrammar.getInstance().setCorrection('ignoreCaps', correctCaps);\nGrammar.getInstance().setPreprocessor('numbers2alpha', numbersToAlpha);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NUMBERS = void 0;\nconst messages_js_1 = require(\"../messages.js\");\nfunction hundredsToWords_(num) {\n    let n = num % 1000;\n    let str = '';\n    let ones = exports.NUMBERS.ones[Math.floor(n / 100)];\n    str += ones ? ones + exports.NUMBERS.numSep + 'honderd' : '';\n    n = n % 100;\n    if (n) {\n        str += str ? exports.NUMBERS.numSep : '';\n        ones = exports.NUMBERS.ones[n];\n        if (ones) {\n            str += ones;\n        }\n        else {\n            const tens = exports.NUMBERS.tens[Math.floor(n / 10)];\n            ones = exports.NUMBERS.ones[n % 10];\n            str += ones ? ones + '-en-' + tens : tens;\n        }\n    }\n    return str;\n}\nfunction numberToWords(num) {\n    if (num === 0) {\n        return exports.NUMBERS.zero;\n    }\n    if (num >= Math.pow(10, 36)) {\n        return num.toString();\n    }\n    let pos = 0;\n    let str = '';\n    while (num > 0) {\n        const hundreds = num % 1000;\n        if (hundreds) {\n            const hund = hundredsToWords_(num % 1000);\n            if (pos) {\n                const large = exports.NUMBERS.large[pos];\n                str = hund + exports.NUMBERS.numSep + large + (str ? exports.NUMBERS.numSep + str : '');\n            }\n            else {\n                str = hund + (str ? exports.NUMBERS.numSep + str : '');\n            }\n        }\n        num = Math.floor(num / 1000);\n        pos++;\n    }\n    return str;\n}\nfunction numberToOrdinal(num, plural) {\n    if (num === 1) {\n        return 'enkel';\n    }\n    if (num === 2) {\n        return plural ? 'helftes' : 'helfte';\n    }\n    if (num === 4) {\n        return plural ? 'kwarte' : 'kwart';\n    }\n    return wordOrdinal(num) + (plural ? 's' : '');\n}\nfunction wordOrdinal(num) {\n    if (num === 1) {\n        return 'eerste';\n    }\n    if (num === 3) {\n        return 'derde';\n    }\n    if (num === 8) {\n        return 'agste';\n    }\n    if (num === 9) {\n        return 'negende';\n    }\n    const ordinal = numberToWords(num);\n    return ordinal + (num < 19 ? 'de' : 'ste');\n}\nfunction numericOrdinal(num) {\n    return num.toString() + '.';\n}\nexports.NUMBERS = (0, messages_js_1.NUMBERS)({\n    wordOrdinal: wordOrdinal,\n    numericOrdinal: numericOrdinal,\n    numberToWords: numberToWords,\n    numberToOrdinal: numberToOrdinal\n});\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.af = af;\nconst grammar_js_1 = require(\"../../rule_engine/grammar.js\");\nconst locale_util_js_1 = require(\"../locale_util.js\");\nconst locale_js_1 = require(\"../locale.js\");\nconst numbers_af_js_1 = require(\"../numbers/numbers_af.js\");\nconst tr = require(\"../transformers.js\");\nconst germanPostfixCombiner = function (letter, font, cap) {\n    letter = !cap ? letter : cap + ' ' + letter;\n    return font ? letter + ' ' + font : letter;\n};\nlet locale = null;\nfunction af() {\n    if (!locale) {\n        locale = create();\n    }\n    return locale;\n}\nfunction create() {\n    const loc = (0, locale_js_1.createLocale)();\n    loc.NUMBERS = numbers_af_js_1.NUMBERS;\n    loc.COMBINERS['germanPostfix'] = germanPostfixCombiner;\n    loc.FUNCTIONS.radicalNestDepth = locale_util_js_1.nestingToString;\n    loc.FUNCTIONS.plural = (unit) => {\n        return /.*s$/.test(unit) ? unit : unit + 's';\n    };\n    loc.FUNCTIONS.fontRegexp = function (font) {\n        return new RegExp('((^' + font + ' )|( ' + font + '$))');\n    };\n    loc.ALPHABETS.combiner = tr.Combiners.prefixCombiner;\n    loc.ALPHABETS.digitTrans.default = numbers_af_js_1.NUMBERS.numberToWords;\n    loc.CORRECTIONS.article = (name) => {\n        return grammar_js_1.Grammar.getInstance().getParameter('noArticle') ? '' : name;\n    };\n    return loc;\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NUMBERS = void 0;\nconst grammar_js_1 = require(\"../../rule_engine/grammar.js\");\nconst messages_js_1 = require(\"../messages.js\");\nfunction tensToWords_(num) {\n    const n = num % 100;\n    if (n < 20) {\n        return exports.NUMBERS.ones[n];\n    }\n    const ten = Math.floor(n / 10);\n    const tens = exports.NUMBERS.tens[ten];\n    const ones = exports.NUMBERS.ones[n % 10];\n    return tens && ones ? tens + (ten === 2 ? '-i-' : '-') + ones : tens || ones;\n}\nfunction hundredsToWords_(num) {\n    const n = num % 1000;\n    const hundred = Math.floor(n / 100);\n    const hundreds = hundred\n        ? hundred === 1\n            ? 'cent'\n            : exports.NUMBERS.ones[hundred] + '-cents'\n        : '';\n    const tens = tensToWords_(n % 100);\n    return hundreds && tens ? hundreds + exports.NUMBERS.numSep + tens : hundreds || tens;\n}\nfunction numberToWords(num) {\n    if (num === 0) {\n        return exports.NUMBERS.zero;\n    }\n    if (num >= Math.pow(10, 36)) {\n        return num.toString();\n    }\n    let pos = 0;\n    let str = '';\n    while (num > 0) {\n        const hundreds = num % (pos > 1 ? 1000000 : 1000);\n        if (hundreds) {\n            let large = exports.NUMBERS.large[pos];\n            if (!pos) {\n                str = hundredsToWords_(hundreds);\n            }\n            else if (pos === 1) {\n                str =\n                    (hundreds === 1 ? '' : hundredsToWords_(hundreds) + exports.NUMBERS.numSep) +\n                        large +\n                        (str ? exports.NUMBERS.numSep + str : '');\n            }\n            else {\n                const thousands = numberToWords(hundreds);\n                large = hundreds === 1 ? large : large.replace(/\\u00f3$/, 'ons');\n                str =\n                    thousands +\n                        exports.NUMBERS.numSep +\n                        large +\n                        (str ? exports.NUMBERS.numSep + str : '');\n            }\n        }\n        num = Math.floor(num / (pos > 1 ? 1000000 : 1000));\n        pos++;\n    }\n    return str;\n}\nfunction numberToOrdinal(num, _plural) {\n    if (num > 1999) {\n        return numericOrdinal(num);\n    }\n    if (num <= 10) {\n        return exports.NUMBERS.special.onesOrdinals[num - 1];\n    }\n    const result = numberToWords(num);\n    if (result.match(/mil$/)) {\n        return result.replace(/mil$/, 'mil·lèsima');\n    }\n    if (result.match(/u$/)) {\n        return result.replace(/u$/, 'vena');\n    }\n    if (result.match(/a$/)) {\n        return result.replace(/a$/, 'ena');\n    }\n    return result + (result.match(/e$/) ? 'na' : 'ena');\n}\nfunction numericOrdinal(num) {\n    const gender = grammar_js_1.Grammar.getInstance().getParameter('gender');\n    return num.toString() + (gender === 'f' ? 'a' : 'n');\n}\nexports.NUMBERS = (0, messages_js_1.NUMBERS)({\n    numericOrdinal: numericOrdinal,\n    numberToWords: numberToWords,\n    numberToOrdinal: numberToOrdinal\n});\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ca = ca;\nconst locale_js_1 = require(\"../locale.js\");\nconst locale_util_js_1 = require(\"../locale_util.js\");\nconst numbers_ca_js_1 = require(\"../numbers/numbers_ca.js\");\nconst transformers_js_1 = require(\"../transformers.js\");\nconst sansserifCombiner = function (letter, font, cap) {\n    letter = 'sans serif ' + (cap ? cap + ' ' + letter : letter);\n    return font ? letter + ' ' + font : letter;\n};\nlet locale = null;\nfunction ca() {\n    if (!locale) {\n        locale = create();\n    }\n    return locale;\n}\nfunction create() {\n    const loc = (0, locale_js_1.createLocale)();\n    loc.NUMBERS = numbers_ca_js_1.NUMBERS;\n    loc.COMBINERS['sansserif'] = sansserifCombiner;\n    loc.FUNCTIONS.fracNestDepth = (_node) => false;\n    loc.FUNCTIONS.combineRootIndex = locale_util_js_1.combinePostfixIndex;\n    loc.FUNCTIONS.combineNestedRadical = (a, _b, c) => a + c;\n    loc.FUNCTIONS.fontRegexp = (font) => RegExp('^' + font + ' ');\n    loc.FUNCTIONS.plural = (unit) => {\n        if (/.*os$/.test(unit)) {\n            return unit + 'sos';\n        }\n        if (/.*s$/.test(unit)) {\n            return unit + 'os';\n        }\n        if (/.*ga$/.test(unit)) {\n            return unit.slice(0, -2) + 'gues';\n        }\n        if (/.*ça$/.test(unit)) {\n            return unit.slice(0, -2) + 'ces';\n        }\n        if (/.*ca$/.test(unit)) {\n            return unit.slice(0, -2) + 'ques';\n        }\n        if (/.*ja$/.test(unit)) {\n            return unit.slice(0, -2) + 'ges';\n        }\n        if (/.*qua$/.test(unit)) {\n            return unit.slice(0, -3) + 'qües';\n        }\n        if (/.*a$/.test(unit)) {\n            return unit.slice(0, -1) + 'es';\n        }\n        if (/.*(e|i)$/.test(unit)) {\n            return unit + 'ns';\n        }\n        if (/.*í$/.test(unit)) {\n            return unit.slice(0, -1) + 'ins';\n        }\n        return unit + 's';\n    };\n    loc.FUNCTIONS.si = (prefix, unit) => {\n        if (unit.match(/^metre/)) {\n            prefix = prefix.replace(/a$/, 'à').replace(/o$/, 'ò').replace(/i$/, 'í');\n        }\n        return prefix + unit;\n    };\n    loc.ALPHABETS.combiner = transformers_js_1.Combiners.prefixCombiner;\n    return loc;\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NUMBERS = void 0;\nconst messages_js_1 = require(\"../messages.js\");\nfunction onePrefix_(num, mill = false) {\n    return num === exports.NUMBERS.ones[1] ? (mill ? 'et' : 'en') : num;\n}\nfunction hundredsToWords_(num, ordinal = false) {\n    let n = num % 1000;\n    let str = '';\n    let ones = exports.NUMBERS.ones[Math.floor(n / 100)];\n    str += ones ? onePrefix_(ones, true) + ' hundrede' : '';\n    n = n % 100;\n    if (n) {\n        str += str ? ' og ' : '';\n        ones = ordinal ? exports.NUMBERS.special.smallOrdinals[n] : exports.NUMBERS.ones[n];\n        if (ones) {\n            str += ones;\n        }\n        else {\n            const tens = ordinal\n                ? exports.NUMBERS.special.tensOrdinals[Math.floor(n / 10)]\n                : exports.NUMBERS.tens[Math.floor(n / 10)];\n            ones = exports.NUMBERS.ones[n % 10];\n            str += ones ? onePrefix_(ones) + 'og' + tens : tens;\n        }\n    }\n    return str;\n}\nfunction numberToWords(num, ordinal = false) {\n    if (num === 0) {\n        return exports.NUMBERS.zero;\n    }\n    if (num >= Math.pow(10, 36)) {\n        return num.toString();\n    }\n    let pos = 0;\n    let str = '';\n    while (num > 0) {\n        const hundreds = num % 1000;\n        if (hundreds) {\n            const hund = hundredsToWords_(hundreds, ordinal && !pos);\n            if (pos) {\n                const large = exports.NUMBERS.large[pos];\n                const plural = hundreds > 1 ? 'er' : '';\n                str =\n                    onePrefix_(hund, pos <= 1) +\n                        ' ' +\n                        large +\n                        plural +\n                        (str ? ' og ' : '') +\n                        str;\n            }\n            else {\n                str = onePrefix_(hund) + str;\n            }\n        }\n        num = Math.floor(num / 1000);\n        pos++;\n    }\n    return str;\n}\nfunction numberToOrdinal(num, plural) {\n    if (num === 1) {\n        return plural ? 'hel' : 'hele';\n    }\n    if (num === 2) {\n        return plural ? 'halv' : 'halve';\n    }\n    return wordOrdinal(num) + (plural ? 'dele' : 'del');\n}\nfunction wordOrdinal(num) {\n    if (num % 100) {\n        return numberToWords(num, true);\n    }\n    const ordinal = numberToWords(num);\n    return ordinal.match(/e$/) ? ordinal : ordinal + 'e';\n}\nfunction numericOrdinal(num) {\n    return num.toString() + '.';\n}\nexports.NUMBERS = (0, messages_js_1.NUMBERS)({\n    wordOrdinal: wordOrdinal,\n    numericOrdinal: numericOrdinal,\n    numberToWords: numberToWords,\n    numberToOrdinal: numberToOrdinal\n});\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.da = da;\nconst locale_js_1 = require(\"../locale.js\");\nconst locale_util_js_1 = require(\"../locale_util.js\");\nconst numbers_da_js_1 = require(\"../numbers/numbers_da.js\");\nconst tr = require(\"../transformers.js\");\nlet locale = null;\nfunction da() {\n    if (!locale) {\n        locale = create();\n    }\n    return locale;\n}\nfunction create() {\n    const loc = (0, locale_js_1.createLocale)();\n    loc.NUMBERS = numbers_da_js_1.NUMBERS;\n    loc.FUNCTIONS.radicalNestDepth = locale_util_js_1.nestingToString;\n    loc.FUNCTIONS.fontRegexp = (font) => {\n        return font === loc.ALPHABETS.capPrefix['default']\n            ? RegExp('^' + font + ' ')\n            : RegExp(' ' + font + '$');\n    };\n    loc.ALPHABETS.combiner = tr.Combiners.postfixCombiner;\n    loc.ALPHABETS.digitTrans.default = numbers_da_js_1.NUMBERS.numberToWords;\n    return loc;\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NUMBERS = void 0;\nconst messages_js_1 = require(\"../messages.js\");\nfunction onePrefix_(num, mill = false) {\n    return num === exports.NUMBERS.ones[1] ? (mill ? 'eine' : 'ein') : num;\n}\nfunction hundredsToWords_(num) {\n    let n = num % 1000;\n    let str = '';\n    let ones = exports.NUMBERS.ones[Math.floor(n / 100)];\n    str += ones ? onePrefix_(ones) + 'hundert' : '';\n    n = n % 100;\n    if (n) {\n        str += str ? exports.NUMBERS.numSep : '';\n        ones = exports.NUMBERS.ones[n];\n        if (ones) {\n            str += ones;\n        }\n        else {\n            const tens = exports.NUMBERS.tens[Math.floor(n / 10)];\n            ones = exports.NUMBERS.ones[n % 10];\n            str += ones ? onePrefix_(ones) + 'und' + tens : tens;\n        }\n    }\n    return str;\n}\nfunction numberToWords(num) {\n    if (num === 0) {\n        return exports.NUMBERS.zero;\n    }\n    if (num >= Math.pow(10, 36)) {\n        return num.toString();\n    }\n    let pos = 0;\n    let str = '';\n    while (num > 0) {\n        const hundreds = num % 1000;\n        if (hundreds) {\n            const hund = hundredsToWords_(num % 1000);\n            if (pos) {\n                const large = exports.NUMBERS.large[pos];\n                const plural = pos > 1 && hundreds > 1 ? (large.match(/e$/) ? 'n' : 'en') : '';\n                str = onePrefix_(hund, pos > 1) + large + plural + str;\n            }\n            else {\n                str = onePrefix_(hund, pos > 1) + str;\n            }\n        }\n        num = Math.floor(num / 1000);\n        pos++;\n    }\n    return str.replace(/ein$/, 'eins');\n}\nfunction numberToOrdinal(num, plural) {\n    if (num === 1) {\n        return 'eintel';\n    }\n    if (num === 2) {\n        return plural ? 'halbe' : 'halb';\n    }\n    return wordOrdinal(num) + 'l';\n}\nfunction wordOrdinal(num) {\n    if (num === 1) {\n        return 'erste';\n    }\n    if (num === 3) {\n        return 'dritte';\n    }\n    if (num === 7) {\n        return 'siebte';\n    }\n    if (num === 8) {\n        return 'achte';\n    }\n    const ordinal = numberToWords(num);\n    return ordinal + (num < 19 ? 'te' : 'ste');\n}\nfunction numericOrdinal(num) {\n    return num.toString() + '.';\n}\nexports.NUMBERS = (0, messages_js_1.NUMBERS)({\n    wordOrdinal: wordOrdinal,\n    numericOrdinal: numericOrdinal,\n    numberToWords: numberToWords,\n    numberToOrdinal: numberToOrdinal\n});\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.de = de;\nconst grammar_js_1 = require(\"../../rule_engine/grammar.js\");\nconst locale_util_js_1 = require(\"../locale_util.js\");\nconst locale_js_1 = require(\"../locale.js\");\nconst numbers_de_js_1 = require(\"../numbers/numbers_de.js\");\nconst germanPrefixCombiner = function (letter, font, cap) {\n    if (cap === 's') {\n        font = font\n            .split(' ')\n            .map(function (x) {\n            return x.replace(/s$/, '');\n        })\n            .join(' ');\n        cap = '';\n    }\n    letter = cap ? cap + ' ' + letter : letter;\n    return font ? font + ' ' + letter : letter;\n};\nconst germanPostfixCombiner = function (letter, font, cap) {\n    letter = !cap || cap === 's' ? letter : cap + ' ' + letter;\n    return font ? letter + ' ' + font : letter;\n};\nlet locale = null;\nfunction de() {\n    if (!locale) {\n        locale = create();\n    }\n    return locale;\n}\nfunction create() {\n    const loc = (0, locale_js_1.createLocale)();\n    loc.NUMBERS = numbers_de_js_1.NUMBERS;\n    loc.COMBINERS['germanPostfix'] = germanPostfixCombiner;\n    loc.ALPHABETS.combiner = germanPrefixCombiner;\n    loc.FUNCTIONS.radicalNestDepth = (x) => {\n        return x > 1 ? loc.NUMBERS.numberToWords(x) + 'fach' : '';\n    };\n    loc.FUNCTIONS.combineRootIndex = (postfix, index) => {\n        const root = index ? index + 'wurzel' : '';\n        return postfix.replace('Wurzel', root);\n    };\n    loc.FUNCTIONS.combineNestedRadical = (a, b, c) => {\n        a = c.match(/exponent$/) ? a + 'r' : a;\n        const count = (b ? b + ' ' : '') + a;\n        return c.match(/ /) ? c.replace(/ /, ' ' + count + ' ') : count + ' ' + c;\n    };\n    loc.FUNCTIONS.fontRegexp = function (font) {\n        font = font\n            .split(' ')\n            .map(function (x) {\n            return x.replace(/s$/, '(|s)');\n        })\n            .join(' ');\n        return new RegExp('((^' + font + ' )|( ' + font + '$))');\n    };\n    loc.CORRECTIONS.correctOne = (num) => num.replace(/^eins$/, 'ein');\n    loc.CORRECTIONS.localFontNumber = (font) => {\n        const realFont = (0, locale_util_js_1.localFont)(font);\n        return realFont\n            .split(' ')\n            .map(function (x) {\n            return x.replace(/s$/, '');\n        })\n            .join(' ');\n    };\n    loc.CORRECTIONS.lowercase = (name) => name.toLowerCase();\n    loc.CORRECTIONS.article = (name) => {\n        const decl = grammar_js_1.Grammar.getInstance().getParameter('case');\n        const plural = grammar_js_1.Grammar.getInstance().getParameter('plural');\n        if (decl === 'dative') {\n            return { der: 'dem', die: plural ? 'den' : 'der', das: 'dem' }[name];\n        }\n        return name;\n    };\n    loc.CORRECTIONS.masculine = (name) => {\n        const decl = grammar_js_1.Grammar.getInstance().getParameter('case');\n        if (decl === 'dative') {\n            return name + 'n';\n        }\n        return name;\n    };\n    return loc;\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NUMBERS = void 0;\nconst messages_js_1 = require(\"../messages.js\");\nfunction hundredsToWords_(num) {\n    let n = num % 1000;\n    let str = '';\n    str += exports.NUMBERS.ones[Math.floor(n / 100)]\n        ? exports.NUMBERS.ones[Math.floor(n / 100)] + exports.NUMBERS.numSep + 'hundred'\n        : '';\n    n = n % 100;\n    if (n) {\n        str += str ? exports.NUMBERS.numSep : '';\n        str +=\n            exports.NUMBERS.ones[n] ||\n                exports.NUMBERS.tens[Math.floor(n / 10)] +\n                    (n % 10 ? exports.NUMBERS.numSep + exports.NUMBERS.ones[n % 10] : '');\n    }\n    return str;\n}\nfunction numberToWords(num) {\n    if (num === 0) {\n        return exports.NUMBERS.zero;\n    }\n    if (num >= Math.pow(10, 36)) {\n        return num.toString();\n    }\n    let pos = 0;\n    let str = '';\n    while (num > 0) {\n        const hundreds = num % 1000;\n        if (hundreds) {\n            str =\n                hundredsToWords_(num % 1000) +\n                    (pos ? '-' + exports.NUMBERS.large[pos] + '-' : '') +\n                    str;\n        }\n        num = Math.floor(num / 1000);\n        pos++;\n    }\n    return str.replace(/-$/, '');\n}\nfunction numberToOrdinal(num, plural) {\n    if (num === 1) {\n        return plural ? 'oneths' : 'oneth';\n    }\n    if (num === 2) {\n        return plural ? 'halves' : 'half';\n    }\n    const ordinal = wordOrdinal(num);\n    return plural ? ordinal + 's' : ordinal;\n}\nfunction wordOrdinal(num) {\n    let ordinal = numberToWords(num);\n    if (ordinal.match(/one$/)) {\n        ordinal = ordinal.slice(0, -3) + 'first';\n    }\n    else if (ordinal.match(/two$/)) {\n        ordinal = ordinal.slice(0, -3) + 'second';\n    }\n    else if (ordinal.match(/three$/)) {\n        ordinal = ordinal.slice(0, -5) + 'third';\n    }\n    else if (ordinal.match(/five$/)) {\n        ordinal = ordinal.slice(0, -4) + 'fifth';\n    }\n    else if (ordinal.match(/eight$/)) {\n        ordinal = ordinal.slice(0, -5) + 'eighth';\n    }\n    else if (ordinal.match(/nine$/)) {\n        ordinal = ordinal.slice(0, -4) + 'ninth';\n    }\n    else if (ordinal.match(/twelve$/)) {\n        ordinal = ordinal.slice(0, -6) + 'twelfth';\n    }\n    else if (ordinal.match(/ty$/)) {\n        ordinal = ordinal.slice(0, -2) + 'tieth';\n    }\n    else {\n        ordinal = ordinal + 'th';\n    }\n    return ordinal;\n}\nfunction numericOrdinal(num) {\n    const tens = num % 100;\n    const numStr = num.toString();\n    if (tens > 10 && tens < 20) {\n        return numStr + 'th';\n    }\n    switch (num % 10) {\n        case 1:\n            return numStr + 'st';\n        case 2:\n            return numStr + 'nd';\n        case 3:\n            return numStr + 'rd';\n        default:\n            return numStr + 'th';\n    }\n}\nexports.NUMBERS = (0, messages_js_1.NUMBERS)({\n    wordOrdinal: wordOrdinal,\n    numericOrdinal: numericOrdinal,\n    numberToWords: numberToWords,\n    numberToOrdinal: numberToOrdinal\n});\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.en = en;\nconst grammar_js_1 = require(\"../../rule_engine/grammar.js\");\nconst locale_js_1 = require(\"../locale.js\");\nconst locale_util_js_1 = require(\"../locale_util.js\");\nconst numbers_en_js_1 = require(\"../numbers/numbers_en.js\");\nconst tr = require(\"../transformers.js\");\nlet locale = null;\nfunction en() {\n    if (!locale) {\n        locale = create();\n    }\n    return locale;\n}\nfunction create() {\n    const loc = (0, locale_js_1.createLocale)();\n    loc.NUMBERS = numbers_en_js_1.NUMBERS;\n    loc.FUNCTIONS.radicalNestDepth = locale_util_js_1.nestingToString;\n    loc.FUNCTIONS.plural = (unit) => {\n        return /.*s$/.test(unit) ? unit : unit + 's';\n    };\n    loc.ALPHABETS.combiner = tr.Combiners.prefixCombiner;\n    loc.ALPHABETS.digitTrans.default = numbers_en_js_1.NUMBERS.numberToWords;\n    loc.CORRECTIONS.article = (name) => {\n        return grammar_js_1.Grammar.getInstance().getParameter('noArticle') ? '' : name;\n    };\n    return loc;\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NUMBERS = void 0;\nconst grammar_js_1 = require(\"../../rule_engine/grammar.js\");\nconst messages_js_1 = require(\"../messages.js\");\nfunction tensToWords_(num) {\n    const n = num % 100;\n    if (n < 30) {\n        return exports.NUMBERS.ones[n];\n    }\n    const tens = exports.NUMBERS.tens[Math.floor(n / 10)];\n    const ones = exports.NUMBERS.ones[n % 10];\n    return tens && ones ? tens + ' y ' + ones : tens || ones;\n}\nfunction hundredsToWords_(num) {\n    const n = num % 1000;\n    const hundred = Math.floor(n / 100);\n    const hundreds = exports.NUMBERS.special.hundreds[hundred];\n    const tens = tensToWords_(n % 100);\n    if (hundred === 1) {\n        if (!tens) {\n            return hundreds;\n        }\n        return hundreds + 'to' + ' ' + tens;\n    }\n    return hundreds && tens ? hundreds + ' ' + tens : hundreds || tens;\n}\nfunction numberToWords(num) {\n    if (num === 0) {\n        return exports.NUMBERS.zero;\n    }\n    if (num >= Math.pow(10, 36)) {\n        return num.toString();\n    }\n    let pos = 0;\n    let str = '';\n    while (num > 0) {\n        const hundreds = num % 1000;\n        if (hundreds) {\n            let large = exports.NUMBERS.large[pos];\n            const huns = hundredsToWords_(hundreds);\n            if (!pos) {\n                str = huns;\n            }\n            else if (hundreds === 1) {\n                large = large.match('/^mil( |$)/') ? large : 'un ' + large;\n                str = large + (str ? ' ' + str : '');\n            }\n            else {\n                large = large.replace(/\\u00f3n$/, 'ones');\n                str = hundredsToWords_(hundreds) + ' ' + large + (str ? ' ' + str : '');\n            }\n        }\n        num = Math.floor(num / 1000);\n        pos++;\n    }\n    return str;\n}\nfunction numberToOrdinal(num, _plural) {\n    if (num > 1999) {\n        return num.toString() + 'a';\n    }\n    if (num <= 12) {\n        return exports.NUMBERS.special.onesOrdinals[num - 1];\n    }\n    const result = [];\n    if (num >= 1000) {\n        num = num - 1000;\n        result.push('milésima');\n    }\n    if (!num) {\n        return result.join(' ');\n    }\n    let pos = 0;\n    pos = Math.floor(num / 100);\n    if (pos > 0) {\n        result.push(exports.NUMBERS.special.hundredsOrdinals[pos - 1]);\n        num = num % 100;\n    }\n    if (num <= 12) {\n        result.push(exports.NUMBERS.special.onesOrdinals[num - 1]);\n    }\n    else {\n        pos = Math.floor(num / 10);\n        if (pos > 0) {\n            result.push(exports.NUMBERS.special.tensOrdinals[pos - 1]);\n            num = num % 10;\n        }\n        if (num > 0) {\n            result.push(exports.NUMBERS.special.onesOrdinals[num - 1]);\n        }\n    }\n    return result.join(' ');\n}\nfunction numericOrdinal(num) {\n    const gender = grammar_js_1.Grammar.getInstance().getParameter('gender');\n    return num.toString() + (gender === 'f' ? 'a' : 'o');\n}\nexports.NUMBERS = (0, messages_js_1.NUMBERS)({\n    numericOrdinal: numericOrdinal,\n    numberToWords: numberToWords,\n    numberToOrdinal: numberToOrdinal\n});\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.es = es;\nconst locale_js_1 = require(\"../locale.js\");\nconst locale_util_js_1 = require(\"../locale_util.js\");\nconst numbers_es_js_1 = require(\"../numbers/numbers_es.js\");\nconst transformers_js_1 = require(\"../transformers.js\");\nconst sansserifCombiner = function (letter, font, cap) {\n    letter = 'sans serif ' + (cap ? cap + ' ' + letter : letter);\n    return font ? letter + ' ' + font : letter;\n};\nlet locale = null;\nfunction es() {\n    if (!locale) {\n        locale = create();\n    }\n    return locale;\n}\nfunction create() {\n    const loc = (0, locale_js_1.createLocale)();\n    loc.NUMBERS = numbers_es_js_1.NUMBERS;\n    loc.COMBINERS['sansserif'] = sansserifCombiner;\n    loc.FUNCTIONS.fracNestDepth = (_node) => false;\n    loc.FUNCTIONS.combineRootIndex = locale_util_js_1.combinePostfixIndex;\n    loc.FUNCTIONS.combineNestedRadical = (a, _b, c) => a + c;\n    loc.FUNCTIONS.fontRegexp = (font) => RegExp('^' + font + ' ');\n    loc.FUNCTIONS.plural = (unit) => {\n        if (/.*(a|e|i|o|u)$/.test(unit)) {\n            return unit + 's';\n        }\n        if (/.*z$/.test(unit)) {\n            return unit.slice(0, -1) + 'ces';\n        }\n        if (/.*c$/.test(unit)) {\n            return unit.slice(0, -1) + 'ques';\n        }\n        if (/.*g$/.test(unit)) {\n            return unit + 'ues';\n        }\n        if (/.*\\u00f3n$/.test(unit)) {\n            return unit.slice(0, -2) + 'ones';\n        }\n        return unit + 'es';\n    };\n    loc.FUNCTIONS.si = (prefix, unit) => {\n        if (unit.match(/^metro/)) {\n            prefix = prefix.replace(/a$/, 'á').replace(/o$/, 'ó').replace(/i$/, 'í');\n        }\n        return prefix + unit;\n    };\n    loc.ALPHABETS.combiner = transformers_js_1.Combiners.prefixCombiner;\n    return loc;\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.euro = euro;\nconst locale_js_1 = require(\"../locale.js\");\nlet locale = null;\nfunction euro() {\n    if (!locale) {\n        locale = (0, locale_js_1.createLocale)();\n    }\n    return locale;\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NUMBERS = void 0;\nconst engine_js_1 = require(\"../../common/engine.js\");\nconst grammar_js_1 = require(\"../../rule_engine/grammar.js\");\nconst messages_js_1 = require(\"../messages.js\");\nfunction hundredsToWords_(num) {\n    let n = num % 1000;\n    let str = '';\n    str += exports.NUMBERS.ones[Math.floor(n / 100)]\n        ? exports.NUMBERS.ones[Math.floor(n / 100)] + '-cent'\n        : '';\n    n = n % 100;\n    if (n) {\n        str += str ? '-' : '';\n        let ones = exports.NUMBERS.ones[n];\n        if (ones) {\n            str += ones;\n        }\n        else {\n            const tens = exports.NUMBERS.tens[Math.floor(n / 10)];\n            if (tens.match(/-dix$/)) {\n                ones = exports.NUMBERS.ones[(n % 10) + 10];\n                str += tens.replace(/-dix$/, '') + '-' + ones;\n            }\n            else {\n                str += tens + (n % 10 ? '-' + exports.NUMBERS.ones[n % 10] : '');\n            }\n        }\n    }\n    const match = str.match(/s-\\w+$/);\n    return match\n        ? str.replace(/s-\\w+$/, match[0].slice(1))\n        : str.replace(/-un$/, '-et-un');\n}\nfunction numberToWords(num) {\n    if (num === 0) {\n        return exports.NUMBERS.zero;\n    }\n    if (num >= Math.pow(10, 36)) {\n        return num.toString();\n    }\n    if (exports.NUMBERS.special['tens-' + engine_js_1.Engine.getInstance().subiso]) {\n        exports.NUMBERS.tens = exports.NUMBERS.special['tens-' + engine_js_1.Engine.getInstance().subiso];\n    }\n    let pos = 0;\n    let str = '';\n    while (num > 0) {\n        const hundreds = num % 1000;\n        if (hundreds) {\n            let large = exports.NUMBERS.large[pos];\n            const huns = hundredsToWords_(hundreds);\n            if (large && large.match(/^mille /)) {\n                const rest = large.replace(/^mille /, '');\n                if (str.match(RegExp(rest))) {\n                    str = huns + (pos ? '-mille-' : '') + str;\n                }\n                else if (str.match(RegExp(rest.replace(/s$/, '')))) {\n                    str =\n                        huns +\n                            (pos ? '-mille-' : '') +\n                            str.replace(rest.replace(/s$/, ''), rest);\n                }\n                else {\n                    str = huns + (pos ? '-' + large + '-' : '') + str;\n                }\n            }\n            else {\n                large = hundreds === 1 && large ? large.replace(/s$/, '') : large;\n                str = huns + (pos ? '-' + large + '-' : '') + str;\n            }\n        }\n        num = Math.floor(num / 1000);\n        pos++;\n    }\n    return str.replace(/-$/, '');\n}\nconst SMALL_ORDINAL = {\n    1: 'unième',\n    2: 'demi',\n    3: 'tiers',\n    4: 'quart'\n};\nfunction numberToOrdinal(num, plural) {\n    const ordinal = SMALL_ORDINAL[num] || wordOrdinal(num);\n    return num === 3 ? ordinal : plural ? ordinal + 's' : ordinal;\n}\nfunction wordOrdinal(num) {\n    if (num === 1) {\n        return 'première';\n    }\n    let ordinal = numberToWords(num);\n    if (ordinal.match(/^neuf$/)) {\n        ordinal = ordinal.slice(0, -1) + 'v';\n    }\n    else if (ordinal.match(/cinq$/)) {\n        ordinal = ordinal + 'u';\n    }\n    else if (ordinal.match(/trois$/)) {\n        ordinal = ordinal + '';\n    }\n    else if (ordinal.match(/e$/) || ordinal.match(/s$/)) {\n        ordinal = ordinal.slice(0, -1);\n    }\n    ordinal = ordinal + 'ième';\n    return ordinal;\n}\nfunction numericOrdinal(num) {\n    const gender = grammar_js_1.Grammar.getInstance().getParameter('gender');\n    return num === 1\n        ? num.toString() + (gender === 'm' ? 'er' : 're')\n        : num.toString() + 'e';\n}\nexports.NUMBERS = (0, messages_js_1.NUMBERS)({\n    wordOrdinal: wordOrdinal,\n    numericOrdinal: numericOrdinal,\n    numberToWords: numberToWords,\n    numberToOrdinal: numberToOrdinal\n});\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fr = fr;\nconst grammar_js_1 = require(\"../../rule_engine/grammar.js\");\nconst locale_js_1 = require(\"../locale.js\");\nconst locale_util_js_1 = require(\"../locale_util.js\");\nconst numbers_fr_js_1 = require(\"../numbers/numbers_fr.js\");\nconst transformers_js_1 = require(\"../transformers.js\");\nlet locale = null;\nfunction fr() {\n    if (!locale) {\n        locale = create();\n    }\n    return locale;\n}\nfunction create() {\n    const loc = (0, locale_js_1.createLocale)();\n    loc.NUMBERS = numbers_fr_js_1.NUMBERS;\n    loc.FUNCTIONS.radicalNestDepth = locale_util_js_1.nestingToString;\n    loc.FUNCTIONS.combineRootIndex = locale_util_js_1.combinePostfixIndex;\n    loc.FUNCTIONS.combineNestedFraction = (a, b, c) => c.replace(/ $/g, '') + b + a;\n    loc.FUNCTIONS.combineNestedRadical = (a, _b, c) => c + ' ' + a;\n    loc.FUNCTIONS.fontRegexp = (font) => RegExp(' (en |)' + font + '$');\n    loc.FUNCTIONS.plural = (unit) => {\n        return /.*s$/.test(unit) ? unit : unit + 's';\n    };\n    loc.CORRECTIONS.article = (name) => {\n        return grammar_js_1.Grammar.getInstance().getParameter('noArticle') ? '' : name;\n    };\n    loc.ALPHABETS.combiner = transformers_js_1.Combiners.romanceCombiner;\n    loc.SUBISO = {\n        default: 'fr',\n        current: 'fr',\n        all: ['fr', 'be', 'ch']\n    };\n    return loc;\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NUMBERS = void 0;\nconst grammar_js_1 = require(\"../../rule_engine/grammar.js\");\nconst messages_js_1 = require(\"../messages.js\");\nfunction hundredsToWords_(num) {\n    let n = num % 1000;\n    let str = '';\n    str += exports.NUMBERS.ones[Math.floor(n / 100)]\n        ? exports.NUMBERS.ones[Math.floor(n / 100)] +\n            exports.NUMBERS.numSep +\n            exports.NUMBERS.special.hundred\n        : '';\n    n = n % 100;\n    if (n) {\n        str += str ? exports.NUMBERS.numSep : '';\n        str += exports.NUMBERS.ones[n];\n    }\n    return str;\n}\nfunction numberToWords(num) {\n    if (num === 0) {\n        return exports.NUMBERS.zero;\n    }\n    if (num >= Math.pow(10, 32)) {\n        return num.toString();\n    }\n    let pos = 0;\n    let str = '';\n    const hundreds = num % 1000;\n    const hundredsWords = hundredsToWords_(hundreds);\n    num = Math.floor(num / 1000);\n    if (!num) {\n        return hundredsWords;\n    }\n    while (num > 0) {\n        const thousands = num % 100;\n        if (thousands) {\n            str =\n                exports.NUMBERS.ones[thousands] +\n                    exports.NUMBERS.numSep +\n                    exports.NUMBERS.large[pos] +\n                    (str ? exports.NUMBERS.numSep + str : '');\n        }\n        num = Math.floor(num / 100);\n        pos++;\n    }\n    return hundredsWords ? str + exports.NUMBERS.numSep + hundredsWords : str;\n}\nfunction numberToOrdinal(num, _plural) {\n    if (num <= 10) {\n        return exports.NUMBERS.special.smallDenominators[num];\n    }\n    return wordOrdinal(num) + ' अंश';\n}\nfunction wordOrdinal(num) {\n    const gender = grammar_js_1.Grammar.getInstance().getParameter('gender');\n    if (num <= 0) {\n        return num.toString();\n    }\n    if (num < 10) {\n        return gender === 'f'\n            ? exports.NUMBERS.special.ordinalsFeminine[num]\n            : exports.NUMBERS.special.ordinalsMasculine[num];\n    }\n    const ordinal = numberToWords(num);\n    return ordinal + (gender === 'f' ? 'वीं' : 'वाँ');\n}\nfunction numericOrdinal(num) {\n    const gender = grammar_js_1.Grammar.getInstance().getParameter('gender');\n    if (num > 0 && num < 10) {\n        return gender === 'f'\n            ? exports.NUMBERS.special.simpleSmallOrdinalsFeminine[num]\n            : exports.NUMBERS.special.simpleSmallOrdinalsMasculine[num];\n    }\n    const ordinal = num\n        .toString()\n        .split('')\n        .map(function (x) {\n        const num = parseInt(x, 10);\n        return isNaN(num) ? '' : exports.NUMBERS.special.simpleNumbers[num];\n    })\n        .join('');\n    return ordinal + (gender === 'f' ? 'वीं' : 'वाँ');\n}\nexports.NUMBERS = (0, messages_js_1.NUMBERS)({\n    wordOrdinal: wordOrdinal,\n    numericOrdinal: numericOrdinal,\n    numberToWords: numberToWords,\n    numberToOrdinal: numberToOrdinal\n});\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hi = hi;\nconst locale_js_1 = require(\"../locale.js\");\nconst numbers_hi_js_1 = require(\"../numbers/numbers_hi.js\");\nconst transformers_js_1 = require(\"../transformers.js\");\nconst locale_util_js_1 = require(\"../locale_util.js\");\nlet locale = null;\nfunction hi() {\n    if (!locale) {\n        locale = create();\n    }\n    return locale;\n}\nfunction create() {\n    const loc = (0, locale_js_1.createLocale)();\n    loc.NUMBERS = numbers_hi_js_1.NUMBERS;\n    loc.ALPHABETS.combiner = transformers_js_1.Combiners.prefixCombiner;\n    loc.FUNCTIONS.radicalNestDepth = locale_util_js_1.nestingToString;\n    return loc;\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NUMBERS = void 0;\nconst messages_js_1 = require(\"../messages.js\");\nfunction thousandsToWords_(num) {\n    let n = num % 10000;\n    let str = '';\n    str += exports.NUMBERS.ones[Math.floor(n / 1000)]\n        ? Math.floor(n / 1000) === 1\n            ? '천'\n            : exports.NUMBERS.ones[Math.floor(n / 1000)] + '천'\n        : '';\n    n = n % 1000;\n    if (n) {\n        str += exports.NUMBERS.ones[Math.floor(n / 100)]\n            ? Math.floor(n / 100) === 1\n                ? '백'\n                : exports.NUMBERS.ones[Math.floor(n / 100)] + '백'\n            : '';\n        n = n % 100;\n        str +=\n            exports.NUMBERS.tens[Math.floor(n / 10)] + (n % 10 ? exports.NUMBERS.ones[n % 10] : '');\n    }\n    return str;\n}\nfunction numberToWords(num) {\n    if (num === 0)\n        return exports.NUMBERS.zero;\n    if (num >= Math.pow(10, 36))\n        return num.toString();\n    let pos = 0;\n    let str = '';\n    while (num > 0) {\n        const thousands = num % 10000;\n        if (thousands) {\n            str =\n                thousandsToWords_(num % 10000) +\n                    (pos ? exports.NUMBERS.large[pos] + exports.NUMBERS.numSep : '') +\n                    str;\n        }\n        num = Math.floor(num / 10000);\n        pos++;\n    }\n    return str.replace(/ $/, '');\n}\nfunction numberToOrdinal(num, _plural) {\n    if (num === 1)\n        return '첫번째';\n    return wordOrdinal(num) + '번째';\n}\nfunction wordOrdinal(num) {\n    const ordinal = numberToWords(num);\n    num %= 100;\n    const label = numberToWords(num);\n    if (!label || !num)\n        return ordinal;\n    const tens = num === 20 ? '스무' : exports.NUMBERS.tens[10 + Math.floor(num / 10)];\n    const ones = exports.NUMBERS.ones[10 + Math.floor(num % 10)];\n    return ordinal.slice(0, -label.length) + tens + ones;\n}\nfunction numericOrdinal(num) {\n    return numberToOrdinal(num, false);\n}\nexports.NUMBERS = (0, messages_js_1.NUMBERS)({\n    wordOrdinal: wordOrdinal,\n    numericOrdinal: numericOrdinal,\n    numberToWords: numberToWords,\n    numberToOrdinal: numberToOrdinal\n});\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ko = ko;\nconst grammar_js_1 = require(\"../../rule_engine/grammar.js\");\nconst locale_js_1 = require(\"../locale.js\");\nconst locale_util_js_1 = require(\"../locale_util.js\");\nconst numbers_ko_js_1 = require(\"../numbers/numbers_ko.js\");\nconst tr = require(\"../transformers.js\");\nlet locale = null;\nfunction ko() {\n    if (!locale) {\n        locale = create();\n    }\n    return locale;\n}\nfunction create() {\n    const loc = (0, locale_js_1.createLocale)();\n    loc.NUMBERS = numbers_ko_js_1.NUMBERS;\n    loc.FUNCTIONS.radicalNestDepth = locale_util_js_1.nestingToString;\n    loc.FUNCTIONS.plural = function (unit) {\n        return unit;\n    };\n    loc.FUNCTIONS.si = (prefix, unit) => {\n        return prefix + unit;\n    };\n    loc.FUNCTIONS.combineRootIndex = function (index, postfix) {\n        return index + postfix;\n    };\n    loc.ALPHABETS.combiner = tr.Combiners.prefixCombiner;\n    loc.ALPHABETS.digitTrans.default = numbers_ko_js_1.NUMBERS.numberToWords;\n    loc.CORRECTIONS.postposition = (name) => {\n        if (['같다', '는', '와', '를', '로'].includes(name))\n            return name;\n        const char = name.slice(-1);\n        const value = (char.charCodeAt(0) - 44032) % 28;\n        let final = value > 0 ? true : false;\n        if (char.match(/[r,l,n,m,1,3,6,7,8,0]/i))\n            final = true;\n        grammar_js_1.Grammar.getInstance().setParameter('final', final);\n        return name;\n    };\n    loc.CORRECTIONS.article = (name) => {\n        const final = grammar_js_1.Grammar.getInstance().getParameter('final');\n        if (final)\n            grammar_js_1.Grammar.getInstance().setParameter('final', false);\n        if (name === '같다')\n            name = '는';\n        const temp = { 는: '은', 와: '과', 를: '을', 로: '으로' }[name];\n        return temp !== undefined && final ? temp : name;\n    };\n    return loc;\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NUMBERS = void 0;\nconst grammar_js_1 = require(\"../../rule_engine/grammar.js\");\nconst messages_js_1 = require(\"../messages.js\");\nfunction hundredsToWords_(num) {\n    let n = num % 1000;\n    let str = '';\n    str += exports.NUMBERS.ones[Math.floor(n / 100)]\n        ? exports.NUMBERS.ones[Math.floor(n / 100)] + exports.NUMBERS.numSep + 'cento'\n        : '';\n    n = n % 100;\n    if (n) {\n        str += str ? exports.NUMBERS.numSep : '';\n        const ones = exports.NUMBERS.ones[n];\n        if (ones) {\n            str += ones;\n        }\n        else {\n            let tens = exports.NUMBERS.tens[Math.floor(n / 10)];\n            const rest = n % 10;\n            if (rest === 1 || rest === 8) {\n                tens = tens.slice(0, -1);\n            }\n            str += tens;\n            str += rest ? exports.NUMBERS.numSep + exports.NUMBERS.ones[n % 10] : '';\n        }\n    }\n    return str;\n}\nfunction numberToWords(num) {\n    if (num === 0) {\n        return exports.NUMBERS.zero;\n    }\n    if (num >= Math.pow(10, 36)) {\n        return num.toString();\n    }\n    if (num === 1 && grammar_js_1.Grammar.getInstance().getParameter('fraction')) {\n        return 'un';\n    }\n    let pos = 0;\n    let str = '';\n    while (num > 0) {\n        const hundreds = num % 1000;\n        if (hundreds) {\n            str =\n                hundredsToWords_(num % 1000) +\n                    (pos ? '-' + exports.NUMBERS.large[pos] + '-' : '') +\n                    str;\n        }\n        num = Math.floor(num / 1000);\n        pos++;\n    }\n    return str.replace(/-$/, '');\n}\nfunction numberToOrdinal(num, plural) {\n    if (num === 2) {\n        return plural ? 'mezzi' : 'mezzo';\n    }\n    const ordinal = wordOrdinal(num);\n    if (!plural) {\n        return ordinal;\n    }\n    const gender = ordinal.match(/o$/) ? 'i' : 'e';\n    return ordinal.slice(0, -1) + gender;\n}\nfunction wordOrdinal(num) {\n    const gender = grammar_js_1.Grammar.getInstance().getParameter('gender');\n    const postfix = gender === 'm' ? 'o' : 'a';\n    let ordinal = exports.NUMBERS.special.onesOrdinals[num];\n    if (ordinal) {\n        return ordinal.slice(0, -1) + postfix;\n    }\n    ordinal = numberToWords(num);\n    return ordinal.slice(0, -1) + 'esim' + postfix;\n}\nfunction numericOrdinal(num) {\n    const gender = grammar_js_1.Grammar.getInstance().getParameter('gender');\n    return num.toString() + (gender === 'm' ? 'o' : 'a');\n}\nexports.NUMBERS = (0, messages_js_1.NUMBERS)({\n    wordOrdinal: wordOrdinal,\n    numericOrdinal: numericOrdinal,\n    numberToWords: numberToWords,\n    numberToOrdinal: numberToOrdinal\n});\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.it = it;\nconst locale_util_js_1 = require(\"../locale_util.js\");\nconst locale_js_1 = require(\"../locale.js\");\nconst numbers_it_js_1 = require(\"../numbers/numbers_it.js\");\nconst transformers_js_1 = require(\"../transformers.js\");\nconst italianPostfixCombiner = function (letter, font, cap) {\n    if (letter.match(/^[a-zA-Z]$/)) {\n        font = font.replace('cerchiato', 'cerchiata');\n    }\n    letter = cap ? letter + ' ' + cap : letter;\n    return font ? letter + ' ' + font : letter;\n};\nlet locale = null;\nfunction it() {\n    if (!locale) {\n        locale = create();\n    }\n    return locale;\n}\nfunction create() {\n    const loc = (0, locale_js_1.createLocale)();\n    loc.NUMBERS = numbers_it_js_1.NUMBERS;\n    loc.COMBINERS['italianPostfix'] = italianPostfixCombiner;\n    loc.FUNCTIONS.radicalNestDepth = locale_util_js_1.nestingToString;\n    loc.FUNCTIONS.combineRootIndex = locale_util_js_1.combinePostfixIndex;\n    loc.FUNCTIONS.combineNestedFraction = (a, b, c) => c.replace(/ $/g, '') + b + a;\n    loc.FUNCTIONS.combineNestedRadical = (a, _b, c) => c + ' ' + a;\n    loc.FUNCTIONS.fontRegexp = (font) => RegExp(' (en |)' + font + '$');\n    loc.ALPHABETS.combiner = transformers_js_1.Combiners.romanceCombiner;\n    return loc;\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NUMBERS = void 0;\nconst engine_js_1 = require(\"../../common/engine.js\");\nconst messages_js_1 = require(\"../messages.js\");\nfunction hundredsToWordsRo_(num, ordinal = false) {\n    let n = num % 1000;\n    let str = '';\n    const count = Math.floor(n / 100);\n    const ones = exports.NUMBERS.ones[count];\n    str += ones ? (count === 1 ? '' : ones) + 'hundre' : '';\n    n = n % 100;\n    if (n) {\n        str += str ? 'og' : '';\n        if (ordinal) {\n            const ord = exports.NUMBERS.special.smallOrdinals[n];\n            if (ord) {\n                return str + ord;\n            }\n            if (n % 10) {\n                return (str +\n                    exports.NUMBERS.tens[Math.floor(n / 10)] +\n                    exports.NUMBERS.special.smallOrdinals[n % 10]);\n            }\n        }\n        str +=\n            exports.NUMBERS.ones[n] ||\n                exports.NUMBERS.tens[Math.floor(n / 10)] + (n % 10 ? exports.NUMBERS.ones[n % 10] : '');\n    }\n    return ordinal ? replaceOrdinal(str) : str;\n}\nfunction numberToWordsRo(num, ordinal = false) {\n    if (num === 0) {\n        return ordinal ? exports.NUMBERS.special.smallOrdinals[0] : exports.NUMBERS.zero;\n    }\n    if (num >= Math.pow(10, 36)) {\n        return num.toString();\n    }\n    let pos = 0;\n    let str = '';\n    while (num > 0) {\n        const hundreds = num % 1000;\n        if (hundreds) {\n            const hund = hundredsToWordsRo_(num % 1000, pos ? false : ordinal);\n            if (!pos && ordinal) {\n                ordinal = !ordinal;\n            }\n            str =\n                hund +\n                    (pos\n                        ? ' ' +\n                            (exports.NUMBERS.large[pos] + (pos > 1 && hundreds > 1 ? 'er' : '')) +\n                            (str ? ' ' : '')\n                        : '') +\n                    str;\n        }\n        num = Math.floor(num / 1000);\n        pos++;\n    }\n    return ordinal ? str + (str.match(/tusen$/) ? 'de' : 'te') : str;\n}\nfunction numberToOrdinal(num, _plural) {\n    return wordOrdinal(num);\n}\nfunction replaceOrdinal(str) {\n    const letOne = exports.NUMBERS.special.endOrdinal[0];\n    if (letOne === 'a' && str.match(/en$/)) {\n        return str.slice(0, -2) + exports.NUMBERS.special.endOrdinal;\n    }\n    if (str.match(/(d|n)$/) || str.match(/hundre$/)) {\n        return str + 'de';\n    }\n    if (str.match(/i$/)) {\n        return str + exports.NUMBERS.special.endOrdinal;\n    }\n    if (letOne === 'a' && str.match(/e$/)) {\n        return str.slice(0, -1) + exports.NUMBERS.special.endOrdinal;\n    }\n    if (str.match(/e$/)) {\n        return str + 'nde';\n    }\n    return str + 'nde';\n}\nfunction wordOrdinal(num) {\n    const ordinal = numberToWords(num, true);\n    return ordinal;\n}\nfunction numericOrdinal(num) {\n    return num.toString() + '.';\n}\nexports.NUMBERS = (0, messages_js_1.NUMBERS)({\n    wordOrdinal: wordOrdinal,\n    numericOrdinal: numericOrdinal,\n    numberToWords: numberToWords,\n    numberToOrdinal: numberToOrdinal\n});\nfunction onePrefix_(num, thd = false) {\n    const numOne = exports.NUMBERS.ones[1];\n    return num === numOne ? (num === 'ein' ? 'eitt ' : thd ? 'et' : 'ett') : num;\n}\nfunction hundredsToWordsGe_(num, ordinal = false) {\n    let n = num % 1000;\n    let str = '';\n    let ones = exports.NUMBERS.ones[Math.floor(n / 100)];\n    str += ones ? onePrefix_(ones) + 'hundre' : '';\n    n = n % 100;\n    if (n) {\n        str += str ? 'og' : '';\n        if (ordinal) {\n            const ord = exports.NUMBERS.special.smallOrdinals[n];\n            if (ord) {\n                return (str += ord);\n            }\n        }\n        ones = exports.NUMBERS.ones[n];\n        if (ones) {\n            str += ones;\n        }\n        else {\n            const tens = exports.NUMBERS.tens[Math.floor(n / 10)];\n            ones = exports.NUMBERS.ones[n % 10];\n            str += ones ? ones + 'og' + tens : tens;\n        }\n    }\n    return ordinal ? replaceOrdinal(str) : str;\n}\nfunction numberToWordsGe(num, ordinal = false) {\n    if (num === 0) {\n        return ordinal ? exports.NUMBERS.special.smallOrdinals[0] : exports.NUMBERS.zero;\n    }\n    if (num >= Math.pow(10, 36)) {\n        return num.toString();\n    }\n    let pos = 0;\n    let str = '';\n    while (num > 0) {\n        const hundreds = num % 1000;\n        if (hundreds) {\n            const hund = hundredsToWordsGe_(num % 1000, pos ? false : ordinal);\n            if (!pos && ordinal) {\n                ordinal = !ordinal;\n            }\n            str =\n                (pos === 1 ? onePrefix_(hund, true) : hund) +\n                    (pos > 1 ? exports.NUMBERS.numSep : '') +\n                    (pos\n                        ?\n                            exports.NUMBERS.large[pos] + (pos > 1 && hundreds > 1 ? 'er' : '')\n                        : '') +\n                    (pos > 1 && str ? exports.NUMBERS.numSep : '') +\n                    str;\n        }\n        num = Math.floor(num / 1000);\n        pos++;\n    }\n    return ordinal ? str + (str.match(/tusen$/) ? 'de' : 'te') : str;\n}\nfunction numberToWords(num, ordinal = false) {\n    const word = engine_js_1.Engine.getInstance().subiso === 'alt'\n        ? numberToWordsGe(num, ordinal)\n        : numberToWordsRo(num, ordinal);\n    return word;\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.nb = nb;\nconst locale_js_1 = require(\"../locale.js\");\nconst locale_util_js_1 = require(\"../locale_util.js\");\nconst numbers_nn_js_1 = require(\"../numbers/numbers_nn.js\");\nconst tr = require(\"../transformers.js\");\nlet locale = null;\nfunction nb() {\n    if (!locale) {\n        locale = create();\n    }\n    return locale;\n}\nfunction create() {\n    const loc = (0, locale_js_1.createLocale)();\n    loc.NUMBERS = numbers_nn_js_1.NUMBERS;\n    loc.ALPHABETS.combiner = tr.Combiners.prefixCombiner;\n    loc.ALPHABETS.digitTrans.default = numbers_nn_js_1.NUMBERS.numberToWords;\n    loc.FUNCTIONS.radicalNestDepth = locale_util_js_1.nestingToString;\n    return loc;\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NUMBERS = void 0;\nconst messages_js_1 = require(\"../messages.js\");\nfunction numberToWords(num) {\n    const digits = num.toString().split('');\n    return digits\n        .map(function (digit) {\n        return exports.NUMBERS.ones[parseInt(digit, 10)];\n    })\n        .join('');\n}\nexports.NUMBERS = (0, messages_js_1.NUMBERS)({\n    numberToWords: numberToWords,\n    numberToOrdinal: numberToWords\n});\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.nemeth = nemeth;\nconst locale_js_1 = require(\"../locale.js\");\nconst numbers_nemeth_js_1 = require(\"../numbers/numbers_nemeth.js\");\nconst transformers_js_1 = require(\"../transformers.js\");\nconst simpleEnglish = function (letter) {\n    return letter.match(RegExp('^' + locale.ALPHABETS.languagePrefix.english))\n        ? letter.slice(1)\n        : letter;\n};\nconst postfixCombiner = function (letter, font, _number) {\n    letter = simpleEnglish(letter);\n    return font ? letter + font : letter;\n};\nconst germanCombiner = function (letter, font, _cap) {\n    return font + simpleEnglish(letter);\n};\nconst embellishCombiner = function (letter, font, num) {\n    letter = simpleEnglish(letter);\n    return font + (num ? num : '') + letter + '⠻';\n};\nconst doubleEmbellishCombiner = function (letter, font, num) {\n    letter = simpleEnglish(letter);\n    return font + (num ? num : '') + letter + '⠻⠻';\n};\nconst parensCombiner = function (letter, font, _number) {\n    letter = simpleEnglish(letter);\n    return font + letter + '⠾';\n};\nlet locale = null;\nfunction nemeth() {\n    if (!locale) {\n        locale = create();\n    }\n    return locale;\n}\nfunction create() {\n    const loc = (0, locale_js_1.createLocale)();\n    loc.NUMBERS = numbers_nemeth_js_1.NUMBERS;\n    loc.COMBINERS = {\n        postfixCombiner: postfixCombiner,\n        germanCombiner: germanCombiner,\n        embellishCombiner: embellishCombiner,\n        doubleEmbellishCombiner: doubleEmbellishCombiner,\n        parensCombiner: parensCombiner\n    };\n    loc.FUNCTIONS.fracNestDepth = (_node) => false;\n    loc.FUNCTIONS.fontRegexp = (font) => RegExp('^' + font);\n    loc.FUNCTIONS.si = transformers_js_1.identityTransformer;\n    loc.ALPHABETS.combiner = (letter, font, num) => {\n        return font ? font + num + letter : simpleEnglish(letter);\n    };\n    loc.ALPHABETS.digitTrans = { default: numbers_nemeth_js_1.NUMBERS.numberToWords };\n    return loc;\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.nn = nn;\nconst locale_js_1 = require(\"../locale.js\");\nconst locale_util_js_1 = require(\"../locale_util.js\");\nconst numbers_nn_js_1 = require(\"../numbers/numbers_nn.js\");\nconst tr = require(\"../transformers.js\");\nlet locale = null;\nfunction nn() {\n    if (!locale) {\n        locale = create();\n    }\n    return locale;\n}\nfunction create() {\n    const loc = (0, locale_js_1.createLocale)();\n    loc.NUMBERS = numbers_nn_js_1.NUMBERS;\n    loc.ALPHABETS.combiner = tr.Combiners.prefixCombiner;\n    loc.ALPHABETS.digitTrans.default = numbers_nn_js_1.NUMBERS.numberToWords;\n    loc.FUNCTIONS.radicalNestDepth = locale_util_js_1.nestingToString;\n    loc.SUBISO = {\n        default: '',\n        current: '',\n        all: ['', 'alt']\n    };\n    return loc;\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NUMBERS = void 0;\nconst messages_js_1 = require(\"../messages.js\");\nfunction hundredsToWords_(num) {\n    let n = num % 1000;\n    let str = '';\n    const hundreds = Math.floor(n / 100);\n    str += exports.NUMBERS.ones[hundreds]\n        ? (hundreds === 1 ? '' : exports.NUMBERS.ones[hundreds] + exports.NUMBERS.numSep) + 'hundra'\n        : '';\n    n = n % 100;\n    if (n) {\n        str += str ? exports.NUMBERS.numSep : '';\n        str +=\n            exports.NUMBERS.ones[n] ||\n                exports.NUMBERS.tens[Math.floor(n / 10)] +\n                    (n % 10 ? exports.NUMBERS.numSep + exports.NUMBERS.ones[n % 10] : '');\n    }\n    return str;\n}\nfunction numberToWords(num, ordinal = false) {\n    if (num === 0) {\n        return exports.NUMBERS.zero;\n    }\n    if (num >= Math.pow(10, 36)) {\n        return num.toString();\n    }\n    let pos = 0;\n    let str = '';\n    while (num > 0) {\n        const hundreds = num % 1000;\n        if (hundreds) {\n            const large = exports.NUMBERS.large[pos];\n            const plural = hundreds > 1 && pos > 1 && !ordinal ? 'er' : '';\n            str =\n                (pos === 1 && hundreds === 1\n                    ? ''\n                    : (pos > 1 && hundreds === 1 ? 'en' : hundredsToWords_(num % 1000)) +\n                        (pos > 1 ? ' ' : '')) +\n                    (pos ? large + plural + (pos > 1 ? ' ' : '') : '') +\n                    str;\n        }\n        num = Math.floor(num / 1000);\n        pos++;\n    }\n    return str.replace(/ $/, '');\n}\nfunction numberToOrdinal(num, plural) {\n    if (num === 1) {\n        return plural ? 'hel' : 'hel';\n    }\n    if (num === 2) {\n        return plural ? 'halva' : 'halv';\n    }\n    let ordinal = wordOrdinal(num);\n    ordinal = ordinal.match(/de$/) ? ordinal.replace(/de$/, '') : ordinal;\n    return ordinal + (plural ? 'delar' : 'del');\n}\nfunction wordOrdinal(num) {\n    let ordinal = numberToWords(num, true);\n    if (ordinal.match(/^noll$/)) {\n        ordinal = 'nollte';\n    }\n    else if (ordinal.match(/ett$/)) {\n        ordinal = ordinal.replace(/ett$/, 'första');\n    }\n    else if (ordinal.match(/två$/)) {\n        ordinal = ordinal.replace(/två$/, 'andra');\n    }\n    else if (ordinal.match(/tre$/)) {\n        ordinal = ordinal.replace(/tre$/, 'tredje');\n    }\n    else if (ordinal.match(/fyra$/)) {\n        ordinal = ordinal.replace(/fyra$/, 'fjärde');\n    }\n    else if (ordinal.match(/fem$/)) {\n        ordinal = ordinal.replace(/fem$/, 'femte');\n    }\n    else if (ordinal.match(/sex$/)) {\n        ordinal = ordinal.replace(/sex$/, 'sjätte');\n    }\n    else if (ordinal.match(/sju$/)) {\n        ordinal = ordinal.replace(/sju$/, 'sjunde');\n    }\n    else if (ordinal.match(/åtta$/)) {\n        ordinal = ordinal.replace(/åtta$/, 'åttonde');\n    }\n    else if (ordinal.match(/nio$/)) {\n        ordinal = ordinal.replace(/nio$/, 'nionde');\n    }\n    else if (ordinal.match(/tio$/)) {\n        ordinal = ordinal.replace(/tio$/, 'tionde');\n    }\n    else if (ordinal.match(/elva$/)) {\n        ordinal = ordinal.replace(/elva$/, 'elfte');\n    }\n    else if (ordinal.match(/tolv$/)) {\n        ordinal = ordinal.replace(/tolv$/, 'tolfte');\n    }\n    else if (ordinal.match(/tusen$/)) {\n        ordinal = ordinal.replace(/tusen$/, 'tusonde');\n    }\n    else if (ordinal.match(/jard$/) || ordinal.match(/jon$/)) {\n        ordinal = ordinal + 'te';\n    }\n    else {\n        ordinal = ordinal + 'de';\n    }\n    return ordinal;\n}\nfunction numericOrdinal(num) {\n    const str = num.toString();\n    if (str.match(/11$|12$/)) {\n        return str + ':e';\n    }\n    return str + (str.match(/1$|2$/) ? ':a' : ':e');\n}\nexports.NUMBERS = (0, messages_js_1.NUMBERS)({\n    wordOrdinal: wordOrdinal,\n    numericOrdinal: numericOrdinal,\n    numberToWords: numberToWords,\n    numberToOrdinal: numberToOrdinal\n});\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sv = sv;\nconst locale_js_1 = require(\"../locale.js\");\nconst locale_util_js_1 = require(\"../locale_util.js\");\nconst numbers_sv_js_1 = require(\"../numbers/numbers_sv.js\");\nconst tr = require(\"../transformers.js\");\nlet locale = null;\nfunction sv() {\n    if (!locale) {\n        locale = create();\n    }\n    return locale;\n}\nfunction create() {\n    const loc = (0, locale_js_1.createLocale)();\n    loc.NUMBERS = numbers_sv_js_1.NUMBERS;\n    loc.FUNCTIONS.radicalNestDepth = locale_util_js_1.nestingToString;\n    loc.FUNCTIONS.fontRegexp = function (font) {\n        return new RegExp('((^' + font + ' )|( ' + font + '$))');\n    };\n    loc.ALPHABETS.combiner = tr.Combiners.prefixCombiner;\n    loc.ALPHABETS.digitTrans.default = numbers_sv_js_1.NUMBERS.numberToWords;\n    loc.CORRECTIONS.correctOne = (num) => num.replace(/^ett$/, 'en');\n    return loc;\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.locales = void 0;\nexports.setLocale = setLocale;\nexports.completeLocale = completeLocale;\nconst engine_js_1 = require(\"../common/engine.js\");\nconst variables_js_1 = require(\"../common/variables.js\");\nconst grammar_js_1 = require(\"../rule_engine/grammar.js\");\nconst locale_af_js_1 = require(\"./locales/locale_af.js\");\nconst locale_ca_js_1 = require(\"./locales/locale_ca.js\");\nconst locale_da_js_1 = require(\"./locales/locale_da.js\");\nconst locale_de_js_1 = require(\"./locales/locale_de.js\");\nconst locale_en_js_1 = require(\"./locales/locale_en.js\");\nconst locale_es_js_1 = require(\"./locales/locale_es.js\");\nconst locale_euro_js_1 = require(\"./locales/locale_euro.js\");\nconst locale_fr_js_1 = require(\"./locales/locale_fr.js\");\nconst locale_hi_js_1 = require(\"./locales/locale_hi.js\");\nconst locale_ko_js_1 = require(\"./locales/locale_ko.js\");\nconst locale_it_js_1 = require(\"./locales/locale_it.js\");\nconst locale_nb_js_1 = require(\"./locales/locale_nb.js\");\nconst locale_nemeth_js_1 = require(\"./locales/locale_nemeth.js\");\nconst locale_nn_js_1 = require(\"./locales/locale_nn.js\");\nconst locale_sv_js_1 = require(\"./locales/locale_sv.js\");\nconst locale_js_1 = require(\"./locale.js\");\nexports.locales = {\n    af: locale_af_js_1.af,\n    ca: locale_ca_js_1.ca,\n    da: locale_da_js_1.da,\n    de: locale_de_js_1.de,\n    en: locale_en_js_1.en,\n    es: locale_es_js_1.es,\n    euro: locale_euro_js_1.euro,\n    fr: locale_fr_js_1.fr,\n    hi: locale_hi_js_1.hi,\n    it: locale_it_js_1.it,\n    ko: locale_ko_js_1.ko,\n    nb: locale_nb_js_1.nb,\n    nn: locale_nn_js_1.nn,\n    sv: locale_sv_js_1.sv,\n    nemeth: locale_nemeth_js_1.nemeth\n};\nfunction setLocale() {\n    const msgs = getLocale();\n    setSubiso(msgs);\n    if (msgs) {\n        for (const key of Object.getOwnPropertyNames(msgs)) {\n            locale_js_1.LOCALE[key] = msgs[key];\n        }\n        for (const [key, func] of Object.entries(msgs.CORRECTIONS)) {\n            grammar_js_1.Grammar.getInstance().setCorrection(key, func);\n        }\n    }\n}\nfunction setSubiso(msg) {\n    const subiso = engine_js_1.Engine.getInstance().subiso;\n    if (msg.SUBISO.all.indexOf(subiso) === -1) {\n        engine_js_1.Engine.getInstance().subiso = msg.SUBISO.default;\n    }\n    msg.SUBISO.current = engine_js_1.Engine.getInstance().subiso;\n}\nfunction getLocale() {\n    const locale = variables_js_1.Variables.ensureLocale(engine_js_1.Engine.getInstance().locale, engine_js_1.Engine.getInstance().defaultLocale);\n    engine_js_1.Engine.getInstance().locale = locale;\n    return exports.locales[locale]();\n}\nfunction completeLocale(json) {\n    const locale = exports.locales[json.locale];\n    if (!locale) {\n        console.error('Locale ' + json.locale + ' does not exist!');\n        return;\n    }\n    const kind = json.kind.toUpperCase();\n    const messages = json.messages;\n    if (!messages)\n        return;\n    const loc = locale();\n    for (const [key, value] of Object.entries(messages)) {\n        loc[kind][key] = value;\n    }\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mapsForIE = void 0;\nexports.detectIE = detectIE;\nexports.detectEdge = detectEdge;\nconst system_external_js_1 = require(\"./system_external.js\");\nconst xpath_util_js_1 = require(\"./xpath_util.js\");\nfunction detectIE() {\n    const isIE = typeof window !== 'undefined' &&\n        'ActiveXObject' in window &&\n        'clipboardData' in window;\n    if (!isIE) {\n        return false;\n    }\n    loadMapsForIE();\n    loadWGXpath();\n    return true;\n}\nfunction detectEdge() {\n    var _a;\n    const isEdge = typeof window !== 'undefined' &&\n        'MSGestureEvent' in window &&\n        ((_a = window.chrome) === null || _a === void 0 ? void 0 : _a.loadTimes) === null;\n    if (!isEdge) {\n        return false;\n    }\n    document.evaluate = null;\n    loadWGXpath(true);\n    return true;\n}\nexports.mapsForIE = null;\nfunction loadWGXpath(opt_isEdge) {\n    loadScript(system_external_js_1.SystemExternal.WGXpath);\n    installWGXpath(opt_isEdge);\n}\nfunction installWGXpath(opt_isEdge, opt_count) {\n    let count = opt_count || 1;\n    if (typeof wgxpath === 'undefined' && count < 10) {\n        setTimeout(function () {\n            installWGXpath(opt_isEdge, count++);\n        }, 200);\n        return;\n    }\n    if (count >= 10) {\n        return;\n    }\n    system_external_js_1.SystemExternal.wgxpath = wgxpath;\n    opt_isEdge\n        ? system_external_js_1.SystemExternal.wgxpath.install({ document: document })\n        : system_external_js_1.SystemExternal.wgxpath.install();\n    xpath_util_js_1.xpath.evaluate = document.evaluate;\n    xpath_util_js_1.xpath.result = XPathResult;\n    xpath_util_js_1.xpath.createNSResolver = document.createNSResolver;\n}\nfunction loadMapsForIE() {\n    loadScript(system_external_js_1.SystemExternal.mathmapsIePath);\n}\nfunction loadScript(src) {\n    const scr = system_external_js_1.SystemExternal.document.createElement('script');\n    scr.type = 'text/javascript';\n    scr.src = src;\n    system_external_js_1.SystemExternal.document.head\n        ? system_external_js_1.SystemExternal.document.head.appendChild(scr)\n        : system_external_js_1.SystemExternal.document.body.appendChild(scr);\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.makePath = makePath;\nexports.localePath = localePath;\nconst system_external_js_1 = require(\"./system_external.js\");\nfunction makePath(path) {\n    return path.match('/$') ? path : path + '/';\n}\nfunction localePath(locale, ext = 'json') {\n    return (makePath(system_external_js_1.SystemExternal.jsonPath) +\n        locale +\n        (ext.match(/^\\./) ? ext : '.' + ext));\n}\n", "\"use strict\";\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SemanticMap = exports.NamedSymbol = void 0;\nexports.addFunctionSemantic = addFunctionSemantic;\nexports.equal = equal;\nexports.isMatchingFence = isMatchingFence;\nconst semantic_meaning_js_1 = require(\"./semantic_meaning.js\");\nconst Alphabet = require(\"../speech_rules/alphabet.js\");\nexports.NamedSymbol = {\n    functionApplication: String.fromCodePoint(0x2061),\n    invisibleTimes: String.fromCodePoint(0x2062),\n    invisibleComma: String.fromCodePoint(0x2063),\n    invisiblePlus: String.fromCodePoint(0x2064)\n};\nclass meaningMap extends Map {\n    get(symbol) {\n        return (super.get(symbol) || {\n            role: semantic_meaning_js_1.SemanticRole.UNKNOWN,\n            type: semantic_meaning_js_1.SemanticType.UNKNOWN,\n            font: semantic_meaning_js_1.SemanticFont.UNKNOWN\n        });\n    }\n}\nclass secondaryMap extends Map {\n    set(char, kind, annotation = '') {\n        super.set(this.secKey(kind, char), annotation || kind);\n        return this;\n    }\n    has(char, kind) {\n        return super.has(this.secKey(kind, char));\n    }\n    get(char, kind) {\n        return super.get(this.secKey(kind, char));\n    }\n    secKey(kind, char) {\n        return char ? `${kind} ${char}` : `${kind}`;\n    }\n}\nexports.SemanticMap = {\n    Meaning: new meaningMap(),\n    Secondary: new secondaryMap(),\n    FencesHoriz: new Map(),\n    FencesVert: new Map(),\n    LatexCommands: new Map()\n};\nfunction addMeaning(symbols, meaning) {\n    for (const symbol of symbols) {\n        exports.SemanticMap.Meaning.set(symbol, {\n            role: meaning.role || semantic_meaning_js_1.SemanticRole.UNKNOWN,\n            type: meaning.type || semantic_meaning_js_1.SemanticType.UNKNOWN,\n            font: meaning.font || semantic_meaning_js_1.SemanticFont.UNKNOWN\n        });\n        if (meaning.secondary) {\n            exports.SemanticMap.Secondary.set(symbol, meaning.secondary);\n        }\n    }\n}\nfunction initMeaning() {\n    const sets = [\n        {\n            set: [\n                '23',\n                '26',\n                '40',\n                '5c',\n                'a1',\n                'a7',\n                'b6',\n                'bf',\n                '2017',\n                ['2022', '2025'],\n                '2027',\n                '203b',\n                '203c',\n                ['2041', '2043'],\n                ['2047', '2049'],\n                ['204b', '204d'],\n                '2050',\n                '2055',\n                '2056',\n                ['2058', '205e'],\n                '2234',\n                '2235',\n                'fe45',\n                'fe46',\n                'fe5f',\n                'fe60',\n                'fe68',\n                'fe6b',\n                'ff03',\n                'ff06',\n                'ff0f',\n                'ff20',\n                'ff3c'\n            ],\n            type: semantic_meaning_js_1.SemanticType.PUNCTUATION,\n            role: semantic_meaning_js_1.SemanticRole.UNKNOWN\n        },\n        {\n            set: [\n                '22',\n                'ab',\n                'bb',\n                '2dd',\n                ['2018', '201f'],\n                '2039',\n                '203a',\n                ['301d', '301f'],\n                'fe10',\n                'ff02',\n                'ff07'\n            ],\n            type: semantic_meaning_js_1.SemanticType.PUNCTUATION,\n            role: semantic_meaning_js_1.SemanticRole.QUOTES\n        },\n        {\n            set: ['3b', '204f', '2a1f', '2a3e', 'fe14', 'fe54', 'ff1b'],\n            type: semantic_meaning_js_1.SemanticType.PUNCTUATION,\n            role: semantic_meaning_js_1.SemanticRole.SEMICOLON\n        },\n        {\n            set: ['3f', '203d', 'fe16', 'fe56', 'ff1f'],\n            type: semantic_meaning_js_1.SemanticType.PUNCTUATION,\n            role: semantic_meaning_js_1.SemanticRole.QUESTION\n        },\n        {\n            set: ['21', 'fe15', 'fe57', 'ff01'],\n            type: semantic_meaning_js_1.SemanticType.PUNCTUATION,\n            role: semantic_meaning_js_1.SemanticRole.EXCLAMATION\n        },\n        {\n            set: [\n                '5e',\n                '60',\n                'a8',\n                'aa',\n                'b4',\n                'ba',\n                '2c7',\n                ['2d8', '2da'],\n                '2040',\n                '207a',\n                '207d',\n                '207e',\n                'ff3e',\n                'ff40'\n            ],\n            type: semantic_meaning_js_1.SemanticType.PUNCTUATION,\n            role: semantic_meaning_js_1.SemanticRole.OVERACCENT\n        },\n        {\n            set: ['b8', '2db', '2038', '203f', '2054', '208a', '208d', '208e'],\n            type: semantic_meaning_js_1.SemanticType.PUNCTUATION,\n            role: semantic_meaning_js_1.SemanticRole.UNDERACCENT\n        },\n        {\n            set: ['3a', '2982', 'fe13', 'fe30', 'fe55', 'ff1a'],\n            type: semantic_meaning_js_1.SemanticType.PUNCTUATION,\n            role: semantic_meaning_js_1.SemanticRole.COLON\n        },\n        {\n            set: ['2c', '2063', 'fe50', 'ff0c'],\n            type: semantic_meaning_js_1.SemanticType.PUNCTUATION,\n            role: semantic_meaning_js_1.SemanticRole.COMMA\n        },\n        {\n            set: ['2026', ['22ee', '22f1'], 'fe19'],\n            type: semantic_meaning_js_1.SemanticType.PUNCTUATION,\n            role: semantic_meaning_js_1.SemanticRole.ELLIPSIS\n        },\n        {\n            set: ['2e', 'fe52', 'ff0e'],\n            type: semantic_meaning_js_1.SemanticType.PUNCTUATION,\n            role: semantic_meaning_js_1.SemanticRole.FULLSTOP\n        },\n        {\n            set: ['2d', '207b', '208b', '2212', '2796', 'fe63', 'ff0d'],\n            type: semantic_meaning_js_1.SemanticType.OPERATOR,\n            role: semantic_meaning_js_1.SemanticRole.DASH,\n            secondary: semantic_meaning_js_1.SemanticSecondary.BAR\n        },\n        {\n            set: [\n                '5f',\n                'af',\n                ['2010', '2015'],\n                '203e',\n                '208b',\n                ['fe49', 'fe4f'],\n                'fe58',\n                'ff3f',\n                'ffe3'\n            ],\n            type: semantic_meaning_js_1.SemanticType.PUNCTUATION,\n            role: semantic_meaning_js_1.SemanticRole.DASH,\n            secondary: semantic_meaning_js_1.SemanticSecondary.BAR\n        },\n        {\n            set: [\n                '7e',\n                '2dc',\n                '2f7',\n                '303',\n                '330',\n                '334',\n                '2053',\n                '223c',\n                '223d',\n                '301c',\n                'ff5e'\n            ],\n            type: semantic_meaning_js_1.SemanticType.OPERATOR,\n            role: semantic_meaning_js_1.SemanticRole.TILDE,\n            secondary: semantic_meaning_js_1.SemanticSecondary.TILDE\n        },\n        {\n            set: ['27', '2b9', '2ba', ['2032', '2037'], '2057'],\n            type: semantic_meaning_js_1.SemanticType.PUNCTUATION,\n            role: semantic_meaning_js_1.SemanticRole.PRIME\n        },\n        {\n            set: ['b0'],\n            type: semantic_meaning_js_1.SemanticType.PUNCTUATION,\n            role: semantic_meaning_js_1.SemanticRole.DEGREE\n        },\n        {\n            set: [\n                '2b',\n                'b1',\n                '2064',\n                '2213',\n                '2214',\n                '2228',\n                '222a',\n                ['228c', '228e'],\n                '2294',\n                '2295',\n                '229d',\n                '229e',\n                '22bb',\n                '22bd',\n                '22c4',\n                '22ce',\n                '22d3',\n                '2304',\n                '271b',\n                '271c',\n                '2795',\n                '27cf',\n                '29fa',\n                '29fb',\n                '29fe',\n                ['2a22', '2a28'],\n                '2a2d',\n                '2a2e',\n                '2a39',\n                '2a42',\n                '2a45',\n                '2a46',\n                '2a48',\n                '2a4a',\n                '2a4c',\n                '2a4f',\n                '2a50',\n                '2a52',\n                '2a54',\n                '2a56',\n                '2a57',\n                '2a59',\n                '2a5b',\n                '2a5d',\n                ['2a61', '2a63'],\n                '2adc',\n                '2add',\n                'fe62',\n                'ff0b'\n            ],\n            type: semantic_meaning_js_1.SemanticType.OPERATOR,\n            role: semantic_meaning_js_1.SemanticRole.ADDITION\n        },\n        {\n            set: [\n                '2a',\n                'b7',\n                'd7',\n                '2020',\n                '2021',\n                '204e',\n                '2051',\n                '2062',\n                ['2217', '2219'],\n                '2227',\n                '2229',\n                '2240',\n                '2293',\n                '2297',\n                ['2299', '229b'],\n                '22a0',\n                '22a1',\n                '22b9',\n                '22bc',\n                ['22c5', '22cc'],\n                '22cf',\n                '22d2',\n                '22d4',\n                '2303',\n                '2305',\n                '2306',\n                '25cb',\n                '2715',\n                '2716',\n                '27ce',\n                '27d1',\n                ['29d1', '29d7'],\n                '29e2',\n                '2a1d',\n                ['2a2f', '2a37'],\n                ['2a3b', '2a3d'],\n                '2a40',\n                '2a43',\n                '2a44',\n                '2a47',\n                '2a49',\n                '2a4b',\n                '2a4d',\n                '2a4e',\n                '2a51',\n                '2a53',\n                '2a55',\n                '2a58',\n                '2a5a',\n                '2a5c',\n                ['2a5e', '2a60'],\n                '2ada',\n                '2adb',\n                'fe61',\n                'ff0a'\n            ],\n            type: semantic_meaning_js_1.SemanticType.OPERATOR,\n            role: semantic_meaning_js_1.SemanticRole.MULTIPLICATION\n        },\n        {\n            set: [\n                '2d',\n                'af',\n                '2010',\n                '2011',\n                '2052',\n                '207b',\n                '208b',\n                '2212',\n                '2216',\n                '2238',\n                '2242',\n                '2296',\n                '229f',\n                '2796',\n                '29ff',\n                ['2a29', '2a2c'],\n                '2a3a',\n                '2a41',\n                'fe63',\n                'ff0d'\n            ],\n            type: semantic_meaning_js_1.SemanticType.OPERATOR,\n            role: semantic_meaning_js_1.SemanticRole.SUBTRACTION\n        },\n        {\n            set: [\n                '2f',\n                'f7',\n                '2044',\n                '2215',\n                '2298',\n                '2797',\n                '27cc',\n                '29bc',\n                ['29f5', '29f9'],\n                '2a38'\n            ],\n            type: semantic_meaning_js_1.SemanticType.OPERATOR,\n            role: semantic_meaning_js_1.SemanticRole.DIVISION\n        },\n        {\n            set: ['25', '2030', '2031', 'ff05', 'fe6a'],\n            type: semantic_meaning_js_1.SemanticType.OPERATOR,\n            role: semantic_meaning_js_1.SemanticRole.POSTFIXOP\n        },\n        {\n            set: [\n                'ac',\n                '2200',\n                '2201',\n                '2203',\n                '2204',\n                '2206',\n                ['221a', '221c'],\n                '2310',\n                'ffe2'\n            ],\n            type: semantic_meaning_js_1.SemanticType.OPERATOR,\n            role: semantic_meaning_js_1.SemanticRole.PREFIXOP\n        },\n        {\n            set: [\n                '2320',\n                '2321',\n                '23aa',\n                '23ae',\n                '23af',\n                '23b2',\n                '23b3',\n                '23b6',\n                '23b7'\n            ],\n            type: semantic_meaning_js_1.SemanticType.OPERATOR,\n            role: semantic_meaning_js_1.SemanticRole.PREFIXOP\n        },\n        {\n            set: ['1d7ca', '1d7cb'],\n            type: semantic_meaning_js_1.SemanticType.OPERATOR,\n            role: semantic_meaning_js_1.SemanticRole.PREFIXOP,\n            font: semantic_meaning_js_1.SemanticFont.BOLD\n        },\n        {\n            set: [\n                '3d',\n                '7e',\n                '207c',\n                '208c',\n                '221d',\n                '2237',\n                ['223a', '223f'],\n                '2243',\n                '2245',\n                '2248',\n                ['224a', '224e'],\n                ['2251', '225f'],\n                '2261',\n                '2263',\n                '229c',\n                '22cd',\n                '22d5',\n                '29e4',\n                '29e6',\n                '2a66',\n                '2a67',\n                ['2a6a', '2a6c'],\n                ['2a6c', '2a78'],\n                'fe66',\n                'ff1d'\n            ],\n            type: semantic_meaning_js_1.SemanticType.RELATION,\n            role: semantic_meaning_js_1.SemanticRole.EQUALITY\n        },\n        {\n            set: [\n                '3c',\n                '3e',\n                '2241',\n                '2242',\n                '2244',\n                '2246',\n                '2247',\n                '2249',\n                '224f',\n                '2250',\n                '2260',\n                '2262',\n                ['2264', '2281'],\n                '22b0',\n                '22b1',\n                ['22d6', '22e1'],\n                ['22e6', '22e9'],\n                ['2976', '2978'],\n                '29c0',\n                '29c1',\n                '29e1',\n                '29e3',\n                '29e5',\n                ['2a79', '2abc'],\n                ['2af7', '2afa'],\n                'fe64',\n                'fe65',\n                'ff1c',\n                'ff1e'\n            ],\n            type: semantic_meaning_js_1.SemanticType.RELATION,\n            role: semantic_meaning_js_1.SemanticRole.INEQUALITY\n        },\n        {\n            set: [\n                ['2282', '228b'],\n                ['228f', '2292'],\n                ['22b2', '22b8'],\n                '22d0',\n                '22d1',\n                ['22e2', '22e5'],\n                ['22ea', '22ed'],\n                '27c3',\n                '27c4',\n                ['27c7', '27c9'],\n                ['27d5', '27d7'],\n                '27dc',\n                ['2979', '297b'],\n                '29df',\n                ['2abd', '2ad8']\n            ],\n            type: semantic_meaning_js_1.SemanticType.RELATION,\n            role: semantic_meaning_js_1.SemanticRole.SET\n        },\n        {\n            set: [\n                '2236',\n                ['27e0', '27e5'],\n                '292b',\n                '292c',\n                ['29b5', '29bb'],\n                '29be',\n                '29bf',\n                ['29c2', '29d0']\n            ],\n            type: semantic_meaning_js_1.SemanticType.RELATION,\n            role: semantic_meaning_js_1.SemanticRole.UNKNOWN\n        },\n        {\n            set: ['2205', ['29b0', '29b4']],\n            type: semantic_meaning_js_1.SemanticType.IDENTIFIER,\n            role: semantic_meaning_js_1.SemanticRole.SETEMPTY\n        },\n        {\n            set: ['1ab2', '221e', ['29dc', '29de']],\n            type: semantic_meaning_js_1.SemanticType.IDENTIFIER,\n            role: semantic_meaning_js_1.SemanticRole.INFTY\n        },\n        {\n            set: [\n                '22a2',\n                '22a3',\n                ['22a6', '22af'],\n                '27da',\n                '27db',\n                '27dd',\n                '27de',\n                '2ade',\n                ['2ae2', '2ae6'],\n                '2aec',\n                '2aed'\n            ],\n            type: semantic_meaning_js_1.SemanticType.RELATION,\n            role: semantic_meaning_js_1.SemanticRole.LOGIC\n        },\n        {\n            set: [\n                '22a4',\n                '22a5',\n                '22ba',\n                '27d8',\n                '27d9',\n                '27df',\n                '2adf',\n                '2ae0',\n                ['2ae7', '2aeb'],\n                '2af1'\n            ],\n            type: semantic_meaning_js_1.SemanticType.IDENTIFIER,\n            role: semantic_meaning_js_1.SemanticRole.LOGIC\n        },\n        {\n            set: [\n                ['2190', '21ff'],\n                '2301',\n                '2324',\n                '238b',\n                '2794',\n                ['2798', '27af'],\n                ['27b1', '27be'],\n                ['27f0', '27ff'],\n                ['2900', '292a'],\n                ['292d', '2975'],\n                ['297c', '297f'],\n                ['2b00', '2b11'],\n                ['2b30', '2b4c'],\n                ['ffe9', 'ffec']\n            ],\n            type: semantic_meaning_js_1.SemanticType.RELATION,\n            role: semantic_meaning_js_1.SemanticRole.ARROW\n        },\n        {\n            set: ['2208', '220a', ['22f2', '22f9'], '22ff', '27d2', '2ad9'],\n            type: semantic_meaning_js_1.SemanticType.OPERATOR,\n            role: semantic_meaning_js_1.SemanticRole.ELEMENT\n        },\n        {\n            set: ['2209'],\n            type: semantic_meaning_js_1.SemanticType.OPERATOR,\n            role: semantic_meaning_js_1.SemanticRole.NONELEMENT\n        },\n        {\n            set: ['220b', '220d', ['22fa', '22fe']],\n            type: semantic_meaning_js_1.SemanticType.OPERATOR,\n            role: semantic_meaning_js_1.SemanticRole.REELEMENT\n        },\n        {\n            set: ['220c'],\n            type: semantic_meaning_js_1.SemanticType.OPERATOR,\n            role: semantic_meaning_js_1.SemanticRole.RENONELEMENT\n        },\n        {\n            set: [\n                ['220f', '2211'],\n                ['22c0', '22c3'],\n                ['2a00', '2a0b'],\n                '2a3f',\n                '2afc',\n                '2aff'\n            ],\n            type: semantic_meaning_js_1.SemanticType.LARGEOP,\n            role: semantic_meaning_js_1.SemanticRole.SUM\n        },\n        {\n            set: ['2140'],\n            type: semantic_meaning_js_1.SemanticType.LARGEOP,\n            role: semantic_meaning_js_1.SemanticRole.SUM,\n            font: semantic_meaning_js_1.SemanticFont.DOUBLESTRUCK\n        },\n        {\n            set: [\n                ['222b', '2233'],\n                ['2a0c', '2a17'],\n                ['2a17', '2a1c']\n            ],\n            type: semantic_meaning_js_1.SemanticType.LARGEOP,\n            role: semantic_meaning_js_1.SemanticRole.INTEGRAL\n        },\n        {\n            set: [['2500', '257F']],\n            type: semantic_meaning_js_1.SemanticType.RELATION,\n            role: semantic_meaning_js_1.SemanticRole.BOX\n        },\n        {\n            set: [['2580', '259F']],\n            type: semantic_meaning_js_1.SemanticType.IDENTIFIER,\n            role: semantic_meaning_js_1.SemanticRole.BLOCK\n        },\n        {\n            set: [\n                ['25A0', '25FF'],\n                ['2B12', '2B2F'],\n                ['2B50', '2B59']\n            ],\n            type: semantic_meaning_js_1.SemanticType.RELATION,\n            role: semantic_meaning_js_1.SemanticRole.GEOMETRY\n        },\n        {\n            set: [\n                '220e',\n                '2300',\n                '2302',\n                '2311',\n                '29bd',\n                '29e0',\n                ['29e8', '29f3'],\n                '2a1e',\n                '2afe',\n                'ffed',\n                'ffee'\n            ],\n            type: semantic_meaning_js_1.SemanticType.OPERATOR,\n            role: semantic_meaning_js_1.SemanticRole.GEOMETRY\n        },\n        {\n            set: [\n                ['221f', '2222'],\n                '22be',\n                '22bf',\n                ['2312', '2314'],\n                '237c',\n                '27c0',\n                ['299b', '29af']\n            ],\n            type: semantic_meaning_js_1.SemanticType.OPERATOR,\n            role: semantic_meaning_js_1.SemanticRole.GEOMETRY\n        },\n        {\n            set: [\n                '24',\n                ['a2', 'a5'],\n                'b5',\n                '2123',\n                ['2125', '2127'],\n                '212a',\n                '212b',\n                'fe69',\n                'ff04',\n                'ffe0',\n                'ffe1',\n                'ffe5',\n                'ffe6'\n            ],\n            type: semantic_meaning_js_1.SemanticType.IDENTIFIER,\n            role: semantic_meaning_js_1.SemanticRole.UNKNOWN\n        },\n        {\n            set: [\n                'a9',\n                'ae',\n                '210f',\n                '2114',\n                '2116',\n                '2117',\n                ['211e', '2122'],\n                '212e',\n                '2132',\n                ['2139', '213b'],\n                ['2141', '2144'],\n                '214d',\n                '214e',\n                ['1f12a', '1f12c'],\n                '1f18a'\n            ],\n            type: semantic_meaning_js_1.SemanticType.IDENTIFIER,\n            role: semantic_meaning_js_1.SemanticRole.OTHERLETTER\n        },\n        {\n            set: [\n                '2224',\n                '2226',\n                '2239',\n                '2307',\n                '27b0',\n                '27bf',\n                '27c1',\n                '27c2',\n                '27ca',\n                '27cb',\n                '27cd',\n                '27d0',\n                '27d3',\n                '27d4',\n                '2981',\n                '2999',\n                '299a',\n                '29e7',\n                '29f4',\n                '2a20',\n                '2a21',\n                '2a64',\n                '2a65',\n                '2a68',\n                '2a69',\n                '2ae1',\n                ['2aee', '2af0'],\n                '2af2',\n                '2af3',\n                '2af5',\n                '2af6',\n                '2afb',\n                '2afd'\n            ],\n            type: semantic_meaning_js_1.SemanticType.OPERATOR,\n            role: semantic_meaning_js_1.SemanticRole.UNKNOWN\n        },\n        {\n            set: ['2605', '2606', '26aa', '26ab', ['2720', '274d']],\n            type: semantic_meaning_js_1.SemanticType.OPERATOR,\n            role: semantic_meaning_js_1.SemanticRole.UNKNOWN\n        },\n        {\n            set: [['2145', '2149']],\n            type: semantic_meaning_js_1.SemanticType.IDENTIFIER,\n            role: semantic_meaning_js_1.SemanticRole.LATINLETTER,\n            font: semantic_meaning_js_1.SemanticFont.DOUBLESTRUCKITALIC,\n            secondary: semantic_meaning_js_1.SemanticSecondary.ALLLETTERS\n        },\n        {\n            set: [['213c', '213f']],\n            type: semantic_meaning_js_1.SemanticType.IDENTIFIER,\n            role: semantic_meaning_js_1.SemanticRole.GREEKLETTER,\n            font: semantic_meaning_js_1.SemanticFont.DOUBLESTRUCK,\n            secondary: semantic_meaning_js_1.SemanticSecondary.ALLLETTERS\n        },\n        {\n            set: [\n                '3d0',\n                '3d7',\n                '3f6',\n                ['1d26', '1d2a'],\n                '1d5e',\n                '1d60',\n                ['1d66', '1d6a']\n            ],\n            type: semantic_meaning_js_1.SemanticType.IDENTIFIER,\n            role: semantic_meaning_js_1.SemanticRole.GREEKLETTER,\n            font: semantic_meaning_js_1.SemanticFont.NORMAL,\n            secondary: semantic_meaning_js_1.SemanticSecondary.ALLLETTERS\n        },\n        {\n            set: [['2135', '2138']],\n            type: semantic_meaning_js_1.SemanticType.IDENTIFIER,\n            role: semantic_meaning_js_1.SemanticRole.OTHERLETTER,\n            font: semantic_meaning_js_1.SemanticFont.NORMAL,\n            secondary: semantic_meaning_js_1.SemanticSecondary.ALLLETTERS\n        },\n        {\n            set: ['131', '237'],\n            type: semantic_meaning_js_1.SemanticType.IDENTIFIER,\n            role: semantic_meaning_js_1.SemanticRole.LATINLETTER,\n            font: semantic_meaning_js_1.SemanticFont.NORMAL\n        },\n        {\n            set: ['1d6a4', '1d6a5'],\n            type: semantic_meaning_js_1.SemanticType.IDENTIFIER,\n            role: semantic_meaning_js_1.SemanticRole.LATINLETTER,\n            font: semantic_meaning_js_1.SemanticFont.ITALIC\n        },\n        {\n            set: ['2113', '2118'],\n            type: semantic_meaning_js_1.SemanticType.IDENTIFIER,\n            role: semantic_meaning_js_1.SemanticRole.LATINLETTER,\n            font: semantic_meaning_js_1.SemanticFont.SCRIPT\n        },\n        {\n            set: [\n                ['c0', 'd6'],\n                ['d8', 'f6'],\n                ['f8', '1bf'],\n                ['1c4', '2af'],\n                ['1d00', '1d25'],\n                ['1d6b', '1d9a'],\n                ['1e00', '1ef9'],\n                ['363', '36f'],\n                ['1dd3', '1de6'],\n                ['1d62', '1d65'],\n                '1dca',\n                '2071',\n                '207f',\n                ['2090', '209c'],\n                '2c7c'\n            ],\n            type: semantic_meaning_js_1.SemanticType.IDENTIFIER,\n            role: semantic_meaning_js_1.SemanticRole.LATINLETTER,\n            font: semantic_meaning_js_1.SemanticFont.NORMAL\n        },\n        {\n            set: [['00bc', '00be'], ['2150', '215f'], '2189'],\n            type: semantic_meaning_js_1.SemanticType.NUMBER,\n            role: semantic_meaning_js_1.SemanticRole.FLOAT\n        },\n        {\n            set: ['23E8', ['3248', '324f']],\n            type: semantic_meaning_js_1.SemanticType.NUMBER,\n            role: semantic_meaning_js_1.SemanticRole.INTEGER\n        },\n        {\n            set: [['214A', '214C'], '2705', '2713', '2714', '2717', '2718'],\n            type: semantic_meaning_js_1.SemanticType.IDENTIFIER,\n            role: semantic_meaning_js_1.SemanticRole.UNKNOWN\n        },\n        {\n            set: [\n                '20',\n                'a0',\n                'ad',\n                ['2000', '200f'],\n                ['2028', '202f'],\n                ['205f', '2060'],\n                '206a',\n                '206b',\n                '206e',\n                '206f',\n                'feff',\n                ['fff9', 'fffb']\n            ],\n            type: semantic_meaning_js_1.SemanticType.TEXT,\n            role: semantic_meaning_js_1.SemanticRole.SPACE\n        },\n        {\n            set: [\n                '7c',\n                'a6',\n                '2223',\n                '23b8',\n                '23b9',\n                '23d0',\n                '2758',\n                ['fe31', 'fe34'],\n                'ff5c',\n                'ffe4',\n                'ffe8'\n            ],\n            type: semantic_meaning_js_1.SemanticType.FENCE,\n            role: semantic_meaning_js_1.SemanticRole.NEUTRAL\n        },\n        {\n            set: ['2016', '2225', '2980', '2af4'],\n            type: semantic_meaning_js_1.SemanticType.FENCE,\n            role: semantic_meaning_js_1.SemanticRole.METRIC\n        }\n    ];\n    sets.forEach((_a) => {\n        var { set: s } = _a, m = __rest(_a, [\"set\"]);\n        return addMeaning(Alphabet.makeMultiInterval(s), m);\n    });\n}\nfunction addFences(map, ints, sep = 1) {\n    const used = {};\n    const codes = Alphabet.makeCodeInterval(ints);\n    for (const code of codes) {\n        if (used[code])\n            continue;\n        map.set(String.fromCodePoint(code), String.fromCodePoint(code + sep));\n        used[code] = true;\n        used[code + sep] = true;\n    }\n}\nfunction initFences() {\n    addFences(exports.SemanticMap.FencesVert, [\n        '23b4',\n        ['23dc', '23e1'],\n        ['fe35', 'fe44'],\n        'fe47'\n    ]);\n    addFences(exports.SemanticMap.FencesHoriz, [\n        '28',\n        '2045',\n        ['2308', '230f'],\n        ['231c', '231f'],\n        '2329',\n        '23b0',\n        ['2768', '2775'],\n        '27c5',\n        ['27e6', '27ef'],\n        ['2983', '2998'],\n        ['29d8', '29db'],\n        '29fc',\n        ['2e22', '2e29'],\n        ['3008', '3011'],\n        ['3014', '301b'],\n        'fd3e',\n        'fe17',\n        ['fe59', 'fe5e'],\n        'ff08',\n        'ff5f',\n        'ff62'\n    ]);\n    addFences(exports.SemanticMap.FencesHoriz, ['5b', '7b', 'ff3b', 'ff5b'], 2);\n    addFences(exports.SemanticMap.FencesHoriz, [['239b', '23a6']], 3);\n    addFences(exports.SemanticMap.FencesHoriz, [['23a7', '23a9']], 4);\n    addMeaning([...exports.SemanticMap.FencesHoriz.keys()], {\n        type: semantic_meaning_js_1.SemanticType.FENCE,\n        role: semantic_meaning_js_1.SemanticRole.OPEN\n    });\n    addMeaning([...exports.SemanticMap.FencesHoriz.values()], {\n        type: semantic_meaning_js_1.SemanticType.FENCE,\n        role: semantic_meaning_js_1.SemanticRole.CLOSE\n    });\n    addMeaning([...exports.SemanticMap.FencesVert.keys()], {\n        type: semantic_meaning_js_1.SemanticType.FENCE,\n        role: semantic_meaning_js_1.SemanticRole.TOP\n    });\n    addMeaning([...exports.SemanticMap.FencesVert.values()], {\n        type: semantic_meaning_js_1.SemanticType.FENCE,\n        role: semantic_meaning_js_1.SemanticRole.BOTTOM\n    });\n}\nconst trigonometricFunctions = [\n    'cos',\n    'cot',\n    'csc',\n    'sec',\n    'sin',\n    'tan',\n    'arccos',\n    'arccot',\n    'arccsc',\n    'arcsec',\n    'arcsin',\n    'arctan'\n];\nconst hyperbolicFunctions = [\n    'cosh',\n    'coth',\n    'csch',\n    'sech',\n    'sinh',\n    'tanh',\n    'arcosh',\n    'arcoth',\n    'arcsch',\n    'arsech',\n    'arsinh',\n    'artanh'\n];\nconst algebraicFunctions = ['deg', 'det', 'dim', 'hom', 'ker', 'Tr'];\nconst elementaryFunctions = [\n    'log',\n    'ln',\n    'lg',\n    'exp',\n    'gcd',\n    'lcm',\n    'arg',\n    'im',\n    're',\n    'Pr'\n];\nconst prefixFunctions = trigonometricFunctions.concat(hyperbolicFunctions, algebraicFunctions, elementaryFunctions);\nfunction initFunctions() {\n    addMeaning([\n        'inf',\n        'lim',\n        'liminf',\n        'limsup',\n        'max',\n        'min',\n        'sup',\n        'injlim',\n        'projlim'\n    ], {\n        type: semantic_meaning_js_1.SemanticType.FUNCTION,\n        role: semantic_meaning_js_1.SemanticRole.LIMFUNC\n    });\n    addMeaning(prefixFunctions, {\n        type: semantic_meaning_js_1.SemanticType.FUNCTION,\n        role: semantic_meaning_js_1.SemanticRole.PREFIXFUNC\n    });\n    addMeaning(['mod', 'rem'], {\n        type: semantic_meaning_js_1.SemanticType.OPERATOR,\n        role: semantic_meaning_js_1.SemanticRole.PREFIXFUNC\n    });\n}\nfunction addFunctionSemantic(base, names) {\n    const meaning = exports.SemanticMap.Meaning.get(base) || {\n        type: semantic_meaning_js_1.SemanticType.FUNCTION,\n        role: semantic_meaning_js_1.SemanticRole.PREFIXFUNC\n    };\n    addMeaning(names, meaning);\n}\nfunction equal(meaning1, meaning2) {\n    return (meaning1.type === meaning2.type &&\n        meaning1.role === meaning2.role &&\n        meaning1.font === meaning2.font);\n}\nfunction isMatchingFence(open, close) {\n    const meaning = exports.SemanticMap.Meaning.get(open);\n    if (meaning.type !== semantic_meaning_js_1.SemanticType.FENCE) {\n        return false;\n    }\n    if (meaning.role === semantic_meaning_js_1.SemanticRole.NEUTRAL ||\n        meaning.role === semantic_meaning_js_1.SemanticRole.METRIC) {\n        return open === close;\n    }\n    return (exports.SemanticMap.FencesHoriz.get(open) === close ||\n        exports.SemanticMap.FencesVert.get(open) === close);\n}\nfunction changeSemantics(alphabet, change) {\n    for (const [pos, meaning] of Object.entries(change)) {\n        const character = alphabet[pos];\n        if (character !== undefined) {\n            exports.SemanticMap.Meaning.set(character, meaning);\n        }\n    }\n}\nfunction addSecondaries(alphabet, change) {\n    for (const [pos, meaning] of Object.entries(change)) {\n        const character = alphabet[pos];\n        if (character !== undefined) {\n            exports.SemanticMap.Secondary.set(character, meaning);\n        }\n    }\n}\nfunction singleAlphabet(alphabet, type, role, font, semfont, secondaries = [], change = {}, secondary = {}) {\n    const interval = Alphabet.INTERVALS.get(Alphabet.alphabetName(alphabet, font));\n    if (interval) {\n        interval.unicode.forEach((x) => {\n            exports.SemanticMap.Meaning.set(x, {\n                type: type,\n                role: role,\n                font: semfont\n            });\n            secondaries.forEach((sec) => exports.SemanticMap.Secondary.set(x, sec));\n        });\n        changeSemantics(interval.unicode, change);\n        addSecondaries(interval.unicode, secondary);\n    }\n}\nfunction initAlphabets() {\n    for (const [name, font] of Object.entries(semantic_meaning_js_1.SemanticFont)) {\n        const emb = !!Alphabet.Embellish[name];\n        const semfont = emb\n            ? semantic_meaning_js_1.SemanticFont.UNKNOWN\n            : font === semantic_meaning_js_1.SemanticFont.FULLWIDTH\n                ? semantic_meaning_js_1.SemanticFont.NORMAL\n                : font;\n        singleAlphabet(Alphabet.Base.LATINCAP, semantic_meaning_js_1.SemanticType.IDENTIFIER, semantic_meaning_js_1.SemanticRole.LATINLETTER, font, semfont, [semantic_meaning_js_1.SemanticSecondary.ALLLETTERS]);\n        singleAlphabet(Alphabet.Base.LATINSMALL, semantic_meaning_js_1.SemanticType.IDENTIFIER, semantic_meaning_js_1.SemanticRole.LATINLETTER, font, semfont, [semantic_meaning_js_1.SemanticSecondary.ALLLETTERS], {}, { 3: semantic_meaning_js_1.SemanticSecondary.D });\n        singleAlphabet(Alphabet.Base.GREEKCAP, semantic_meaning_js_1.SemanticType.IDENTIFIER, semantic_meaning_js_1.SemanticRole.GREEKLETTER, font, semfont, [semantic_meaning_js_1.SemanticSecondary.ALLLETTERS]);\n        singleAlphabet(Alphabet.Base.GREEKSMALL, semantic_meaning_js_1.SemanticType.IDENTIFIER, semantic_meaning_js_1.SemanticRole.GREEKLETTER, font, semfont, [semantic_meaning_js_1.SemanticSecondary.ALLLETTERS], {\n            0: {\n                type: semantic_meaning_js_1.SemanticType.OPERATOR,\n                role: semantic_meaning_js_1.SemanticRole.PREFIXOP,\n                font: semfont\n            },\n            26: {\n                type: semantic_meaning_js_1.SemanticType.OPERATOR,\n                role: semantic_meaning_js_1.SemanticRole.PREFIXOP,\n                font: semfont\n            }\n        });\n        singleAlphabet(Alphabet.Base.DIGIT, semantic_meaning_js_1.SemanticType.NUMBER, semantic_meaning_js_1.SemanticRole.INTEGER, font, semfont);\n    }\n}\ninitMeaning();\ninitFences();\ninitAlphabets();\ninitFunctions();\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MathSimpleStore = void 0;\nconst engine_js_1 = require(\"../common/engine.js\");\nconst dynamic_cstr_js_1 = require(\"./dynamic_cstr.js\");\nclass MathSimpleStore {\n    constructor() {\n        this.rules = new Map();\n    }\n    static parseUnicode(num) {\n        const keyValue = parseInt(num, 16);\n        return String.fromCodePoint(keyValue);\n    }\n    static testDynamicConstraints_(dynamic, rule) {\n        if (engine_js_1.Engine.getInstance().strict) {\n            return rule.cstr.equal(dynamic);\n        }\n        return engine_js_1.Engine.getInstance().comparator.match(rule.cstr);\n    }\n    defineRulesFromMappings(locale, modality, mapping) {\n        for (const [domain, styles] of Object.entries(mapping)) {\n            for (const [style, content] of Object.entries(styles)) {\n                this.defineRuleFromStrings(locale, modality, domain, style, content);\n            }\n        }\n    }\n    getRules(key) {\n        let store = this.rules.get(key);\n        if (!store) {\n            store = [];\n            this.rules.set(key, store);\n        }\n        return store;\n    }\n    defineRuleFromStrings(locale, modality, domain, style, content) {\n        let store = this.getRules(locale);\n        const parser = engine_js_1.Engine.getInstance().parsers[domain] ||\n            engine_js_1.Engine.getInstance().defaultParser;\n        const comp = engine_js_1.Engine.getInstance().comparators[domain];\n        const cstr = `${locale}.${modality}.${domain}.${style}`;\n        const dynamic = parser.parse(cstr);\n        const comparator = comp ? comp() : engine_js_1.Engine.getInstance().comparator;\n        const oldCstr = comparator.getReference();\n        comparator.setReference(dynamic);\n        const rule = { cstr: dynamic, action: content };\n        store = store.filter((r) => !dynamic.equal(r.cstr));\n        store.push(rule);\n        this.rules.set(locale, store);\n        comparator.setReference(oldCstr);\n    }\n    lookupRule(_node, dynamic) {\n        let rules = this.getRules(dynamic.getValue(dynamic_cstr_js_1.Axis.LOCALE));\n        rules = rules.filter(function (rule) {\n            return MathSimpleStore.testDynamicConstraints_(dynamic, rule);\n        });\n        if (rules.length === 1) {\n            return rules[0];\n        }\n        return rules.length\n            ? rules.sort((r1, r2) => engine_js_1.Engine.getInstance().comparator.compare(r1.cstr, r2.cstr))[0]\n            : null;\n    }\n}\nexports.MathSimpleStore = MathSimpleStore;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.addCharacterRules = exports.baseStores = exports.subStores = void 0;\nexports.changeLocale = changeLocale;\nexports.setSiPrefixes = setSiPrefixes;\nexports.defineRules = defineRules;\nexports.defineRule = defineRule;\nexports.addSymbolRules = addSymbolRules;\nexports.addFunctionRules = addFunctionRules;\nexports.addUnitRules = addUnitRules;\nexports.lookupRule = lookupRule;\nexports.lookupCategory = lookupCategory;\nexports.lookupString = lookupString;\nexports.enumerate = enumerate;\nexports.reset = reset;\nconst engine_js_1 = require(\"../common/engine.js\");\nconst l10n_js_1 = require(\"../l10n/l10n.js\");\nconst semantic_attr_js_1 = require(\"../semantic_tree/semantic_attr.js\");\nconst math_simple_store_js_1 = require(\"./math_simple_store.js\");\nconst dynamic_cstr_js_1 = require(\"./dynamic_cstr.js\");\nlet locale = dynamic_cstr_js_1.DynamicCstr.DEFAULT_VALUES[dynamic_cstr_js_1.Axis.LOCALE];\nlet modality = dynamic_cstr_js_1.DynamicCstr.DEFAULT_VALUES[dynamic_cstr_js_1.Axis.MODALITY];\nfunction changeLocale(json) {\n    if (!json['locale'] && !json['modality']) {\n        return false;\n    }\n    locale = json['locale'] || locale;\n    modality = json['modality'] || modality;\n    return true;\n}\nlet siPrefixes = {};\nfunction setSiPrefixes(prefixes) {\n    siPrefixes = prefixes;\n}\nexports.subStores = new Map();\nexports.baseStores = new Map();\nfunction getSubStore(base, key) {\n    let store = exports.subStores.get(key);\n    if (store) {\n        return store;\n    }\n    store = new math_simple_store_js_1.MathSimpleStore();\n    store.base = exports.baseStores.get(base);\n    exports.subStores.set(key, store);\n    return store;\n}\nfunction completeWithBase(json) {\n    const base = exports.baseStores.get(json.key);\n    if (!base) {\n        return;\n    }\n    const names = json.names;\n    Object.assign(json, base);\n    if (names && base.names) {\n        json.names = json.names.concat(names);\n    }\n}\nfunction defineRules(base, str, mappings) {\n    const store = getSubStore(base, str);\n    store.defineRulesFromMappings(locale, modality, mappings);\n}\nfunction defineRule(domain, style, str, content) {\n    const store = getSubStore(str, str);\n    store.defineRuleFromStrings(locale, modality, domain, style, content);\n}\nfunction addSymbolRules(json) {\n    for (const rule of json) {\n        if (changeLocale(rule)) {\n            continue;\n        }\n        const key = math_simple_store_js_1.MathSimpleStore.parseUnicode(rule['key']);\n        if (locale === 'base') {\n            exports.baseStores.set(key, rule);\n            continue;\n        }\n        defineRules(key, key, rule['mappings']);\n    }\n}\nfunction addCharacterRule(json) {\n    if (changeLocale(json)) {\n        return;\n    }\n    for (const [key, value] of Object.entries(json)) {\n        defineRule('default', 'default', key, value);\n    }\n}\nconst addCharacterRules = (json) => json.forEach(addCharacterRule);\nexports.addCharacterRules = addCharacterRules;\nfunction addFunctionRule(json) {\n    for (let j = 0, name; (name = json.names[j]); j++) {\n        defineRules(json.key, name, json.mappings);\n    }\n}\nfunction addFunctionRules(json) {\n    for (const rule of json) {\n        if (changeLocale(rule)) {\n            continue;\n        }\n        (0, semantic_attr_js_1.addFunctionSemantic)(rule.key, rule.names || []);\n        if (locale === 'base') {\n            exports.baseStores.set(rule.key, rule);\n            continue;\n        }\n        completeWithBase(rule);\n        addFunctionRule(rule);\n    }\n}\nfunction addUnitRules(json) {\n    for (const rule of json) {\n        if (changeLocale(rule)) {\n            continue;\n        }\n        rule.key += ':unit';\n        if (locale === 'base') {\n            exports.baseStores.set(rule.key, rule);\n            continue;\n        }\n        completeWithBase(rule);\n        if (rule.names) {\n            rule.names = rule.names.map(function (name) {\n                return name + ':unit';\n            });\n        }\n        if (rule.si) {\n            addSiUnitRule(rule);\n        }\n        addFunctionRule(rule);\n    }\n}\nfunction addSiUnitRule(json) {\n    for (const key of Object.keys(siPrefixes)) {\n        const newJson = Object.assign({}, json);\n        newJson.mappings = {};\n        const prefix = siPrefixes[key];\n        newJson['names'] = newJson['names'].map(function (name) {\n            return key + name;\n        });\n        for (const domain of Object.keys(json['mappings'])) {\n            newJson.mappings[domain] = {};\n            for (const style of Object.keys(json['mappings'][domain])) {\n                newJson['mappings'][domain][style] = l10n_js_1.locales[locale]().FUNCTIONS.si(prefix, json['mappings'][domain][style]);\n            }\n        }\n        addFunctionRule(newJson);\n    }\n}\nfunction lookupRule(node, dynamic) {\n    const store = exports.subStores.get(node);\n    return store ? store.lookupRule(null, dynamic) : null;\n}\nfunction lookupCategory(character) {\n    const store = exports.subStores.get(character);\n    return (store === null || store === void 0 ? void 0 : store.base) ? store.base.category : '';\n}\nfunction lookupString(text, dynamic) {\n    const rule = lookupRule(text, dynamic);\n    if (!rule) {\n        return null;\n    }\n    return rule.action;\n}\nengine_js_1.Engine.getInstance().evaluator = lookupString;\nfunction enumerate(info = {}) {\n    for (const store of exports.subStores.values()) {\n        for (const [, rules] of store.rules.entries()) {\n            for (const { cstr: dynamic } of rules) {\n                info = enumerate_(dynamic.getValues(), info);\n            }\n        }\n    }\n    return info;\n}\nfunction enumerate_(dynamic, info) {\n    info = info || {};\n    if (!dynamic.length) {\n        return info;\n    }\n    info[dynamic[0]] = enumerate_(dynamic.slice(1), info[dynamic[0]]);\n    return info;\n}\nfunction reset() {\n    locale = dynamic_cstr_js_1.DynamicCstr.DEFAULT_VALUES[dynamic_cstr_js_1.Axis.LOCALE];\n    modality = dynamic_cstr_js_1.DynamicCstr.DEFAULT_VALUES[dynamic_cstr_js_1.Axis.MODALITY];\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Span = void 0;\nclass Span {\n    constructor(speech, attributes) {\n        this.speech = speech;\n        this.attributes = attributes;\n    }\n    static empty() {\n        return new Span('', {});\n    }\n    static stringEmpty(str) {\n        return new Span(str, {});\n    }\n    static stringAttr(str, attr) {\n        return new Span(str, attr);\n    }\n    static singleton(str, def = {}) {\n        return [Span.stringAttr(str, def)];\n    }\n    static node(str, node, def = {}) {\n        const attr = Span.getAttributes(node);\n        Object.assign(attr, def);\n        return new Span(str, attr);\n    }\n    static getAttributes(node) {\n        const attrs = {};\n        for (const attr of Span.attributeList) {\n            if (node.hasAttribute(attr)) {\n                attrs[attr] = node.getAttribute(attr);\n            }\n        }\n        return attrs;\n    }\n}\nexports.Span = Span;\nSpan.attributeList = ['id', 'extid'];\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AuditoryDescription = exports.AuditoryList = exports.AuditoryItem = void 0;\nconst grammar_js_1 = require(\"../rule_engine/grammar.js\");\nconst span_js_1 = require(\"./span.js\");\nclass AuditoryItem {\n    constructor(data = null) {\n        this.data = data;\n        this.prev = null;\n        this.next = null;\n    }\n}\nexports.AuditoryItem = AuditoryItem;\nclass AuditoryList extends Set {\n    constructor(descrs) {\n        super();\n        this.annotations = [];\n        this.anchor = new AuditoryItem();\n        this.anchor.next = this.anchor;\n        this.anchor.prev = this.anchor;\n        descrs.forEach((d) => {\n            const item = new AuditoryItem(d);\n            if (d.annotation) {\n                this.annotations.push(item);\n            }\n            this.push(item);\n        });\n    }\n    first() {\n        return this.empty ? null : this.anchor.next;\n    }\n    last() {\n        return this.empty ? null : this.anchor.prev;\n    }\n    push(item) {\n        item.next = this.anchor;\n        item.prev = this.anchor.prev;\n        item.prev.next = item;\n        this.anchor.prev = item;\n        super.add(item);\n    }\n    pop() {\n        const item = this.last();\n        if (!item) {\n            return null;\n        }\n        this.delete(item);\n        return item;\n    }\n    delete(item) {\n        if (!this.has(item)) {\n            return false;\n        }\n        super.delete(item);\n        item.prev.next = item.next;\n        item.next = item.prev;\n        return true;\n    }\n    insertAfter(descr, item) {\n        this.insertBefore(descr, item.next);\n    }\n    insertBefore(descr, item) {\n        const nitem = new AuditoryItem(descr);\n        if (!item || !this.has(item)) {\n            this.push(nitem);\n            return;\n        }\n        item.prev.next = nitem;\n        nitem.prev = item.prev;\n        nitem.next = item;\n        item.prev = nitem;\n    }\n    prevText(item) {\n        do {\n            item = item.prev;\n        } while (item !== this.anchor && !item.data.text);\n        return item === this.anchor ? null : item;\n    }\n    *[Symbol.iterator]() {\n        let current = this.anchor.next;\n        while (current !== this.anchor) {\n            yield current;\n            current = current.next;\n        }\n    }\n    nextText(item) {\n        while (item !== this.anchor && !item.data.text) {\n            item = item.next;\n        }\n        return item;\n    }\n    clear() {\n        this.anchor.next = this.anchor;\n        this.anchor.prev = this.anchor;\n        super.clear();\n    }\n    empty() {\n        return this.anchor.prev === this.anchor && this.anchor === this.anchor.next;\n    }\n    toList() {\n        const result = [];\n        let item = this.anchor.next;\n        while (item !== this.anchor) {\n            result.push(item.data);\n            item = item.next;\n        }\n        return result;\n    }\n}\nexports.AuditoryList = AuditoryList;\nclass AuditoryDescription {\n    static create(args, flags = {}) {\n        args.text = grammar_js_1.Grammar.getInstance().apply(args.text, flags);\n        return new AuditoryDescription(args);\n    }\n    constructor({ context, text, userValue, annotation, attributes, personality, layout }) {\n        this.context = context || '';\n        this.text = text || '';\n        this.userValue = userValue || '';\n        this.annotation = annotation || '';\n        this.attributes = attributes || {};\n        this.personality = personality || {};\n        this.layout = layout || '';\n    }\n    isEmpty() {\n        return (this.context.length === 0 &&\n            this.text.length === 0 &&\n            this.userValue.length === 0 &&\n            this.annotation.length === 0);\n    }\n    clone() {\n        let personality;\n        if (this.personality) {\n            personality = {};\n            for (const [key, val] of Object.entries(this.personality)) {\n                personality[key] = val;\n            }\n        }\n        let attributes;\n        if (this.attributes) {\n            attributes = {};\n            for (const [key, val] of Object.entries(this.attributes)) {\n                attributes[key] = val;\n            }\n        }\n        return new AuditoryDescription({\n            context: this.context,\n            text: this.text,\n            userValue: this.userValue,\n            annotation: this.annotation,\n            personality: personality,\n            attributes: attributes,\n            layout: this.layout\n        });\n    }\n    toString() {\n        return ('AuditoryDescription(context=\"' +\n            this.context +\n            '\" ' +\n            ' text=\"' +\n            this.text +\n            '\" ' +\n            ' userValue=\"' +\n            this.userValue +\n            '\" ' +\n            ' annotation=\"' +\n            this.annotation +\n            '\")');\n    }\n    descriptionString() {\n        return this.context && this.text\n            ? this.context + ' ' + this.text\n            : this.context || this.text;\n    }\n    descriptionSpan() {\n        return span_js_1.Span.stringAttr(this.descriptionString(), this.attributes);\n    }\n    equals(that) {\n        return (this.context === that.context &&\n            this.text === that.text &&\n            this.userValue === that.userValue &&\n            this.annotation === that.annotation);\n    }\n}\nexports.AuditoryDescription = AuditoryDescription;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.addStore = addStore;\nexports.getStore = getStore;\nconst dynamic_cstr_js_1 = require(\"../rule_engine/dynamic_cstr.js\");\nconst funcStore = new Map();\nfunction addStore(constr, inherit, store) {\n    const values = {};\n    if (inherit) {\n        const inherits = funcStore.get(inherit) || {};\n        Object.assign(values, inherits);\n    }\n    funcStore.set(constr, Object.assign(values, store));\n}\nfunction getStore(locale, modality, domain) {\n    return (funcStore.get([locale, modality, domain].join('.')) ||\n        funcStore.get([dynamic_cstr_js_1.DynamicCstr.DEFAULT_VALUES[dynamic_cstr_js_1.Axis.LOCALE], modality, domain].join('.')) ||\n        funcStore.get([dynamic_cstr_js_1.DynamicCstr.BASE_LOCALE, modality, domain].join('.')) ||\n        {});\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.nodeCounter = nodeCounter;\nexports.pauseSeparator = pauseSeparator;\nexports.contentIterator = contentIterator;\nconst auditory_description_js_1 = require(\"../audio/auditory_description.js\");\nconst XpathUtil = require(\"../common/xpath_util.js\");\nconst engine_js_1 = require(\"../common/engine.js\");\nfunction nodeCounter(nodes, context) {\n    const localLength = nodes.length;\n    let localCounter = 0;\n    let localContext = context;\n    if (!context) {\n        localContext = '';\n    }\n    return function () {\n        if (localCounter < localLength) {\n            localCounter += 1;\n        }\n        return localContext + ' ' + localCounter;\n    };\n}\nfunction pauseSeparator(_nodes, context) {\n    const numeral = parseFloat(context);\n    const value = isNaN(numeral) ? context : numeral;\n    return function () {\n        return [\n            auditory_description_js_1.AuditoryDescription.create({\n                text: '',\n                personality: { pause: value }\n            })\n        ];\n    };\n}\nfunction contentIterator(nodes, context) {\n    let contentNodes;\n    if (nodes.length > 0) {\n        contentNodes = XpathUtil.evalXPath('../../content/*', nodes[0]);\n    }\n    else {\n        contentNodes = [];\n    }\n    return function () {\n        const content = contentNodes.shift();\n        const contextDescr = context\n            ? [auditory_description_js_1.AuditoryDescription.create({ text: context }, { translate: true })]\n            : [];\n        if (!content) {\n            return contextDescr;\n        }\n        const descrs = engine_js_1.Engine.evaluateNode(content);\n        return contextDescr.concat(descrs);\n    };\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SemanticVisitor = exports.SemanticAnnotator = void 0;\nclass SemanticAnnotator {\n    constructor(domain, name, func) {\n        this.domain = domain;\n        this.name = name;\n        this.func = func;\n        this.active = false;\n    }\n    annotate(node) {\n        node.childNodes.forEach(this.annotate.bind(this));\n        node.contentNodes.forEach(this.annotate.bind(this));\n        node.addAnnotation(this.domain, this.func(node));\n    }\n}\nexports.SemanticAnnotator = SemanticAnnotator;\nclass SemanticVisitor {\n    constructor(domain, name, func, def = {}) {\n        this.domain = domain;\n        this.name = name;\n        this.func = func;\n        this.def = def;\n        this.active = false;\n    }\n    visit(node, info) {\n        let result = this.func(node, info);\n        node.addAnnotation(this.domain, result[0]);\n        for (let i = 0, child; (child = node.childNodes[i]); i++) {\n            result = this.visit(child, result[1]);\n        }\n        for (let i = 0, content; (content = node.contentNodes[i]); i++) {\n            result = this.visit(content, result[1]);\n        }\n        return result;\n    }\n}\nexports.SemanticVisitor = SemanticVisitor;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.visitors = exports.annotators = void 0;\nexports.register = register;\nexports.activate = activate;\nexports.deactivate = deactivate;\nexports.annotate = annotate;\nconst semantic_annotator_js_1 = require(\"./semantic_annotator.js\");\nexports.annotators = new Map();\nexports.visitors = new Map();\nfunction register(annotator) {\n    const name = annotator.domain + ':' + annotator.name;\n    annotator instanceof semantic_annotator_js_1.SemanticAnnotator\n        ? exports.annotators.set(name, annotator)\n        : exports.visitors.set(name, annotator);\n}\nfunction activate(domain, name) {\n    const key = domain + ':' + name;\n    const annotator = exports.annotators.get(key) || exports.visitors.get(key);\n    if (annotator) {\n        annotator.active = true;\n    }\n}\nfunction deactivate(domain, name) {\n    const key = domain + ':' + name;\n    const annotator = exports.annotators.get(key) || exports.visitors.get(key);\n    if (annotator) {\n        annotator.active = false;\n    }\n}\nfunction annotate(node) {\n    for (const annotator of exports.annotators.values()) {\n        if (annotator.active) {\n            annotator.annotate(node);\n        }\n    }\n    for (const visitor of exports.visitors.values()) {\n        if (visitor.active) {\n            visitor.visit(node, Object.assign({}, visitor.def));\n        }\n    }\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.nodeCounter = nodeCounter;\nexports.allCellsSimple = allCellsSimple;\nexports.isSmallVulgarFraction = isSmallVulgarFraction;\nexports.ordinalExponent = ordinalExponent;\nexports.nestingDepth = nestingDepth;\nexports.matchingFences = matchingFences;\nexports.fencedArguments = fencedArguments;\nexports.simpleArguments = simpleArguments;\nexports.wordOrdinal = wordOrdinal;\nconst span_js_1 = require(\"../audio/span.js\");\nconst DomUtil = require(\"../common/dom_util.js\");\nconst engine_js_1 = require(\"../common/engine.js\");\nconst XpathUtil = require(\"../common/xpath_util.js\");\nconst locale_js_1 = require(\"../l10n/locale.js\");\nconst transformers_js_1 = require(\"../l10n/transformers.js\");\nconst grammar_js_1 = require(\"../rule_engine/grammar.js\");\nconst StoreUtil = require(\"../rule_engine/store_util.js\");\nconst semantic_annotations_js_1 = require(\"../semantic_tree/semantic_annotations.js\");\nconst semantic_annotator_js_1 = require(\"../semantic_tree/semantic_annotator.js\");\nconst semantic_attr_js_1 = require(\"../semantic_tree/semantic_attr.js\");\nconst semantic_meaning_js_1 = require(\"../semantic_tree/semantic_meaning.js\");\nfunction nodeCounter(nodes, context) {\n    const split = context.split('-');\n    const func = StoreUtil.nodeCounter(nodes, split[0] || '');\n    const sep = split[1] || '';\n    const init = split[2] || '';\n    let first = true;\n    return function () {\n        const result = func();\n        if (first) {\n            first = false;\n            return init + result + sep;\n        }\n        else {\n            return result + sep;\n        }\n    };\n}\nfunction isSimpleExpression(node) {\n    return (isSimpleNumber_(node) ||\n        isSimpleLetters_(node) ||\n        isSimpleDegree_(node) ||\n        isSimpleNegative_(node) ||\n        isSimpleFunction_(node));\n}\nfunction isSimpleFunction_(node) {\n    return (node.type === semantic_meaning_js_1.SemanticType.APPL &&\n        (node.childNodes[0].role === semantic_meaning_js_1.SemanticRole.PREFIXFUNC ||\n            node.childNodes[0].role === semantic_meaning_js_1.SemanticRole.SIMPLEFUNC) &&\n        (isSimple_(node.childNodes[1]) ||\n            (node.childNodes[1].type === semantic_meaning_js_1.SemanticType.FENCED &&\n                isSimple_(node.childNodes[1].childNodes[0]))));\n}\nfunction isSimpleNegative_(node) {\n    return (node.type === semantic_meaning_js_1.SemanticType.PREFIXOP &&\n        node.role === semantic_meaning_js_1.SemanticRole.NEGATIVE &&\n        isSimple_(node.childNodes[0]) &&\n        node.childNodes[0].type !== semantic_meaning_js_1.SemanticType.PREFIXOP &&\n        node.childNodes[0].type !== semantic_meaning_js_1.SemanticType.APPL &&\n        node.childNodes[0].type !== semantic_meaning_js_1.SemanticType.PUNCTUATED);\n}\nfunction isSimpleDegree_(node) {\n    return (node.type === semantic_meaning_js_1.SemanticType.PUNCTUATED &&\n        node.role === semantic_meaning_js_1.SemanticRole.ENDPUNCT &&\n        node.childNodes.length === 2 &&\n        node.childNodes[1].role === semantic_meaning_js_1.SemanticRole.DEGREE &&\n        (isLetter_(node.childNodes[0]) ||\n            isNumber_(node.childNodes[0]) ||\n            (node.childNodes[0].type === semantic_meaning_js_1.SemanticType.PREFIXOP &&\n                node.childNodes[0].role === semantic_meaning_js_1.SemanticRole.NEGATIVE &&\n                (isLetter_(node.childNodes[0].childNodes[0]) ||\n                    isNumber_(node.childNodes[0].childNodes[0])))));\n}\nfunction isSimpleLetters_(node) {\n    return (isLetter_(node) ||\n        (node.type === semantic_meaning_js_1.SemanticType.INFIXOP &&\n            node.role === semantic_meaning_js_1.SemanticRole.IMPLICIT &&\n            ((node.childNodes.length === 2 &&\n                (isLetter_(node.childNodes[0]) ||\n                    isSimpleNumber_(node.childNodes[0])) &&\n                isLetter_(node.childNodes[1])) ||\n                (node.childNodes.length === 3 &&\n                    isSimpleNumber_(node.childNodes[0]) &&\n                    isLetter_(node.childNodes[1]) &&\n                    isLetter_(node.childNodes[2])))));\n}\nfunction isSimple_(node) {\n    return node.hasAnnotation('clearspeak', 'simple');\n}\nfunction isLetter_(node) {\n    return (node.type === semantic_meaning_js_1.SemanticType.IDENTIFIER &&\n        (node.role === semantic_meaning_js_1.SemanticRole.LATINLETTER ||\n            node.role === semantic_meaning_js_1.SemanticRole.GREEKLETTER ||\n            node.role === semantic_meaning_js_1.SemanticRole.OTHERLETTER ||\n            node.role === semantic_meaning_js_1.SemanticRole.SIMPLEFUNC));\n}\nfunction isNumber_(node) {\n    return (node.type === semantic_meaning_js_1.SemanticType.NUMBER &&\n        (node.role === semantic_meaning_js_1.SemanticRole.INTEGER || node.role === semantic_meaning_js_1.SemanticRole.FLOAT));\n}\nfunction isSimpleNumber_(node) {\n    return isNumber_(node) || isSimpleFraction_(node);\n}\nfunction isSimpleFraction_(node) {\n    if (hasPreference('Fraction_Over') || hasPreference('Fraction_FracOver')) {\n        return false;\n    }\n    if (node.type !== semantic_meaning_js_1.SemanticType.FRACTION ||\n        node.role !== semantic_meaning_js_1.SemanticRole.VULGAR) {\n        return false;\n    }\n    if (hasPreference('Fraction_Ordinal')) {\n        return true;\n    }\n    const enumerator = parseInt(node.childNodes[0].textContent, 10);\n    const denominator = parseInt(node.childNodes[1].textContent, 10);\n    return (enumerator > 0 && enumerator < 20 && denominator > 0 && denominator < 11);\n}\nfunction hasPreference(pref) {\n    return engine_js_1.Engine.getInstance().style === pref;\n}\n(0, semantic_annotations_js_1.register)(new semantic_annotator_js_1.SemanticAnnotator('clearspeak', 'simple', function (node) {\n    return isSimpleExpression(node) ? 'simple' : '';\n}));\nfunction simpleNode(node) {\n    if (!node.hasAttribute('annotation')) {\n        return false;\n    }\n    const annotation = node.getAttribute('annotation');\n    return !!/clearspeak:simple$|clearspeak:simple;/.exec(annotation);\n}\nfunction simpleCell_(node) {\n    if (simpleNode(node)) {\n        return true;\n    }\n    if (node.tagName !== semantic_meaning_js_1.SemanticType.SUBSCRIPT) {\n        return false;\n    }\n    const children = node.childNodes[0].childNodes;\n    const index = children[1];\n    return (children[0].tagName === semantic_meaning_js_1.SemanticType.IDENTIFIER &&\n        (isInteger_(index) ||\n            (index.tagName === semantic_meaning_js_1.SemanticType.INFIXOP &&\n                index.hasAttribute('role') &&\n                index.getAttribute('role') === semantic_meaning_js_1.SemanticRole.IMPLICIT &&\n                allIndices_(index))));\n}\nfunction isInteger_(node) {\n    return (node.tagName === semantic_meaning_js_1.SemanticType.NUMBER &&\n        node.hasAttribute('role') &&\n        node.getAttribute('role') === semantic_meaning_js_1.SemanticRole.INTEGER);\n}\nfunction allIndices_(node) {\n    const nodes = XpathUtil.evalXPath('children/*', node);\n    return nodes.every((x) => isInteger_(x) || x.tagName === semantic_meaning_js_1.SemanticType.IDENTIFIER);\n}\nfunction allCellsSimple(node) {\n    const xpath = node.tagName === semantic_meaning_js_1.SemanticType.MATRIX\n        ? 'children/row/children/cell/children/*'\n        : 'children/line/children/*';\n    const nodes = XpathUtil.evalXPath(xpath, node);\n    const result = nodes.every(simpleCell_);\n    return result ? [node] : [];\n}\nfunction isSmallVulgarFraction(node) {\n    return (0, transformers_js_1.vulgarFractionSmall)(node, 20, 11) ? [node] : [];\n}\nfunction isUnitExpression(node) {\n    return ((node.type === semantic_meaning_js_1.SemanticType.TEXT && node.role !== semantic_meaning_js_1.SemanticRole.LABEL) ||\n        (node.type === semantic_meaning_js_1.SemanticType.PUNCTUATED &&\n            node.role === semantic_meaning_js_1.SemanticRole.TEXT &&\n            isNumber_(node.childNodes[0]) &&\n            allTextLastContent_(node.childNodes.slice(1))) ||\n        (node.type === semantic_meaning_js_1.SemanticType.IDENTIFIER &&\n            node.role === semantic_meaning_js_1.SemanticRole.UNIT) ||\n        (node.type === semantic_meaning_js_1.SemanticType.INFIXOP &&\n            (node.role === semantic_meaning_js_1.SemanticRole.IMPLICIT || node.role === semantic_meaning_js_1.SemanticRole.UNIT)));\n}\nfunction allTextLastContent_(nodes) {\n    for (let i = 0; i < nodes.length - 1; i++) {\n        if (!(nodes[i].type === semantic_meaning_js_1.SemanticType.TEXT && nodes[i].textContent === '')) {\n            return false;\n        }\n    }\n    return nodes[nodes.length - 1].type === semantic_meaning_js_1.SemanticType.TEXT;\n}\n(0, semantic_annotations_js_1.register)(new semantic_annotator_js_1.SemanticAnnotator('clearspeak', 'unit', function (node) {\n    return isUnitExpression(node) ? 'unit' : '';\n}));\nfunction ordinalExponent(node) {\n    const num = parseInt(node.textContent, 10);\n    return [\n        span_js_1.Span.stringEmpty(isNaN(num)\n            ? node.textContent\n            : num > 10\n                ? locale_js_1.LOCALE.NUMBERS.numericOrdinal(num)\n                : locale_js_1.LOCALE.NUMBERS.wordOrdinal(num))\n    ];\n}\nlet NESTING_DEPTH = null;\nfunction nestingDepth(node) {\n    let count = 0;\n    const fence = node.textContent;\n    const index = node.getAttribute('role') === 'open' ? 0 : 1;\n    let parent = node.parentNode;\n    while (parent) {\n        if (parent.tagName === semantic_meaning_js_1.SemanticType.FENCED &&\n            parent.childNodes[0].childNodes[index].textContent === fence) {\n            count++;\n        }\n        parent = parent.parentNode;\n    }\n    NESTING_DEPTH = count > 1 ? locale_js_1.LOCALE.NUMBERS.wordOrdinal(count) : '';\n    return [span_js_1.Span.stringEmpty(NESTING_DEPTH)];\n}\nfunction matchingFences(node) {\n    const sibling = node.previousSibling;\n    let left, right;\n    if (sibling) {\n        left = sibling;\n        right = node;\n    }\n    else {\n        left = node;\n        right = node.nextSibling;\n    }\n    if (!right) {\n        return [];\n    }\n    return (0, semantic_attr_js_1.isMatchingFence)(left.textContent, right.textContent) ? [node] : [];\n}\nfunction insertNesting(text, correction) {\n    if (!correction || !text) {\n        return text;\n    }\n    const start = text.match(/^(open|close) /);\n    if (!start) {\n        return correction + ' ' + text;\n    }\n    return start[0] + correction + ' ' + text.substring(start[0].length);\n}\ngrammar_js_1.Grammar.getInstance().setCorrection('insertNesting', insertNesting);\nfunction fencedArguments(node) {\n    const content = DomUtil.toArray(node.parentNode.childNodes);\n    const children = XpathUtil.evalXPath('../../children/*', node);\n    const index = content.indexOf(node);\n    return fencedFactor_(children[index]) || fencedFactor_(children[index + 1])\n        ? [node]\n        : [];\n}\nfunction simpleArguments(node) {\n    const content = DomUtil.toArray(node.parentNode.childNodes);\n    const children = XpathUtil.evalXPath('../../children/*', node);\n    const index = content.indexOf(node);\n    return simpleFactor_(children[index]) &&\n        children[index + 1] &&\n        (simpleFactor_(children[index + 1]) ||\n            children[index + 1].tagName === semantic_meaning_js_1.SemanticType.ROOT ||\n            children[index + 1].tagName === semantic_meaning_js_1.SemanticType.SQRT ||\n            (children[index + 1].tagName === semantic_meaning_js_1.SemanticType.SUPERSCRIPT &&\n                children[index + 1].childNodes[0].childNodes[0] &&\n                (children[index + 1].childNodes[0].childNodes[0]\n                    .tagName === semantic_meaning_js_1.SemanticType.NUMBER ||\n                    children[index + 1].childNodes[0].childNodes[0]\n                        .tagName === semantic_meaning_js_1.SemanticType.IDENTIFIER) &&\n                (children[index + 1].childNodes[0].childNodes[1].textContent === '2' ||\n                    children[index + 1].childNodes[0].childNodes[1].textContent === '3')))\n        ? [node]\n        : [];\n}\nfunction simpleFactor_(node) {\n    return (!!node &&\n        (node.tagName === semantic_meaning_js_1.SemanticType.NUMBER ||\n            node.tagName === semantic_meaning_js_1.SemanticType.IDENTIFIER ||\n            node.tagName === semantic_meaning_js_1.SemanticType.FUNCTION ||\n            node.tagName === semantic_meaning_js_1.SemanticType.APPL ||\n            node.tagName === semantic_meaning_js_1.SemanticType.FRACTION));\n}\nfunction fencedFactor_(node) {\n    return (node &&\n        (node.tagName === semantic_meaning_js_1.SemanticType.FENCED ||\n            (node.hasAttribute('role') &&\n                node.getAttribute('role') === semantic_meaning_js_1.SemanticRole.LEFTRIGHT) ||\n            layoutFactor_(node)));\n}\nfunction layoutFactor_(node) {\n    return (!!node &&\n        (node.tagName === semantic_meaning_js_1.SemanticType.MATRIX ||\n            node.tagName === semantic_meaning_js_1.SemanticType.VECTOR));\n}\nfunction wordOrdinal(node) {\n    return [\n        span_js_1.Span.stringEmpty(locale_js_1.LOCALE.NUMBERS.wordOrdinal(parseInt(node.textContent, 10)))\n    ];\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.removeEmpty = removeEmpty;\nexports.interleaveLists = interleaveLists;\nexports.setdifference = setdifference;\nfunction removeEmpty(strs) {\n    return strs.filter((str) => str);\n}\nfunction interleaveLists(list1, list2) {\n    const result = [];\n    while (list1.length || list2.length) {\n        if (list1.length) {\n            result.push(list1.shift());\n        }\n        if (list2.length) {\n            result.push(list2.shift());\n        }\n    }\n    return result;\n}\nfunction setdifference(a, b) {\n    if (!a) {\n        return [];\n    }\n    if (!b) {\n        return a;\n    }\n    return a.filter((x) => b.indexOf(x) < 0);\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SemanticHeuristics = void 0;\nexports.SemanticHeuristics = {\n    factory: null,\n    updateFactory: function (nodeFactory) {\n        exports.SemanticHeuristics.factory = nodeFactory;\n    },\n    heuristics: new Map(),\n    flags: {\n        combine_juxtaposition: true,\n        convert_juxtaposition: true,\n        multioperator: true\n    },\n    blacklist: {},\n    add: function (heuristic) {\n        const name = heuristic.name;\n        exports.SemanticHeuristics.heuristics.set(name, heuristic);\n        if (!exports.SemanticHeuristics.flags[name]) {\n            exports.SemanticHeuristics.flags[name] = false;\n        }\n    },\n    run: function (name, root, opt_alternative) {\n        const heuristic = exports.SemanticHeuristics.heuristics.get(name);\n        return heuristic &&\n            !exports.SemanticHeuristics.blacklist[name] &&\n            (exports.SemanticHeuristics.flags[name] || heuristic.applicable(root))\n            ? heuristic.apply(root)\n            : opt_alternative\n                ? opt_alternative(root)\n                : root;\n    }\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.reduce = reduce;\nconst semantic_meaning_js_1 = require(\"./semantic_meaning.js\");\nconst comparators = [];\nfunction add(comparator) {\n    comparators.push(comparator);\n}\nfunction apply(meaning1, meaning2) {\n    for (let i = 0, comparator; (comparator = comparators[i]); i++) {\n        const result = comparator.compare(meaning1, meaning2);\n        if (result !== 0) {\n            return result;\n        }\n    }\n    return 0;\n}\nfunction sort(meanings) {\n    meanings.sort(apply);\n}\nfunction reduce(meanings) {\n    if (meanings.length <= 1) {\n        return meanings;\n    }\n    const copy = meanings.slice();\n    sort(copy);\n    const result = [];\n    let last;\n    do {\n        last = copy.pop();\n        result.push(last);\n    } while (last && copy.length && apply(copy[copy.length - 1], last) === 0);\n    return result;\n}\nclass SemanticComparator {\n    constructor(comparator, type = null) {\n        this.comparator = comparator;\n        this.type = type;\n        add(this);\n    }\n    compare(meaning1, meaning2) {\n        return this.type &&\n            this.type === meaning1.type &&\n            this.type === meaning2.type\n            ? this.comparator(meaning1, meaning2)\n            : 0;\n    }\n}\nfunction simpleFunction(meaning1, meaning2) {\n    if (meaning1.role === semantic_meaning_js_1.SemanticRole.SIMPLEFUNC) {\n        return 1;\n    }\n    if (meaning2.role === semantic_meaning_js_1.SemanticRole.SIMPLEFUNC) {\n        return -1;\n    }\n    return 0;\n}\nnew SemanticComparator(simpleFunction, semantic_meaning_js_1.SemanticType.IDENTIFIER);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SemanticMeaningCollator = exports.SemanticNodeCollator = exports.SemanticDefault = void 0;\nconst SemanticAttr = require(\"./semantic_attr.js\");\nconst semantic_ordering_js_1 = require(\"./semantic_ordering.js\");\nfunction key(symbol, font) {\n    return symbol.match(/^.+:.+$/) || !font ? symbol : symbol + ':' + font;\n}\nclass SemanticDefault extends Map {\n    set(symbol, meaning) {\n        super.set(key(symbol, meaning.font), meaning);\n        return this;\n    }\n    setNode(node) {\n        this.set(node.textContent, node.meaning());\n    }\n    get(symbol, font = null) {\n        return super.get(key(symbol, font));\n    }\n    getNode(node) {\n        return this.get(node.textContent, node.font);\n    }\n}\nexports.SemanticDefault = SemanticDefault;\nclass SemanticCollator extends Map {\n    add(symbol, entry) {\n        const list = this.get(symbol);\n        if (list) {\n            list.push(entry);\n        }\n        else {\n            super.set(symbol, [entry]);\n        }\n    }\n    get(symbol, font = null) {\n        return super.get(key(symbol, font));\n    }\n    getNode(node) {\n        return this.get(node.textContent, node.font);\n    }\n    minimize() {\n        for (const [key, entry] of this) {\n            if (entry.length === 1) {\n                this.delete(key);\n            }\n        }\n    }\n    isMultiValued() {\n        for (const value of this.values()) {\n            if (value.length > 1) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\nclass SemanticNodeCollator extends SemanticCollator {\n    add(symbol, entry) {\n        super.add(key(symbol, entry.font), entry);\n    }\n    addNode(node) {\n        this.add(node.textContent, node);\n    }\n    toString() {\n        const outer = [];\n        for (const [key, nodes] of this) {\n            const length = Array(key.length + 3).join(' ');\n            const inner = nodes.map((node) => node.toString()).join('\\n' + length);\n            outer.push(key + ': ' + inner);\n        }\n        return outer.join('\\n');\n    }\n    collateMeaning() {\n        const collator = new SemanticMeaningCollator();\n        for (const [key, val] of this) {\n            collator.set(key, val.map((node) => node.meaning()));\n        }\n        return collator;\n    }\n}\nexports.SemanticNodeCollator = SemanticNodeCollator;\nclass SemanticMeaningCollator extends SemanticCollator {\n    add(symbol, entry) {\n        const list = this.get(symbol, entry.font);\n        if (!list ||\n            !list.find(function (x) {\n                return SemanticAttr.equal(x, entry);\n            })) {\n            super.add(key(symbol, entry.font), entry);\n        }\n    }\n    addNode(node) {\n        this.add(node.textContent, node.meaning());\n    }\n    toString() {\n        const outer = [];\n        for (const [key, nodes] of this) {\n            const length = Array(key.length + 3).join(' ');\n            const inner = nodes\n                .map((node) => `{type: ${node.type}, role: ${node.role}, font: ${node.font}}`)\n                .join('\\n' + length);\n            outer.push(key + ': ' + inner);\n        }\n        return outer.join('\\n');\n    }\n    reduce() {\n        for (const [key, val] of this) {\n            if (val.length !== 1) {\n                this.set(key, (0, semantic_ordering_js_1.reduce)(val));\n            }\n        }\n    }\n    default() {\n        const def = new SemanticDefault();\n        for (const [key, val] of this) {\n            if (val.length === 1) {\n                def.set(key, val[0]);\n            }\n        }\n        return def;\n    }\n    newDefault() {\n        const oldDefault = this.default();\n        this.reduce();\n        const newDefault = this.default();\n        return oldDefault.size !== newDefault.size ? newDefault : null;\n    }\n}\nexports.SemanticMeaningCollator = SemanticMeaningCollator;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MMLTAGS = void 0;\nexports.hasMathTag = hasMathTag;\nexports.hasIgnoreTag = hasIgnoreTag;\nexports.hasEmptyTag = hasEmptyTag;\nexports.hasDisplayTag = hasDisplayTag;\nexports.isOrphanedGlyph = isOrphanedGlyph;\nexports.purgeNodes = purgeNodes;\nexports.isZeroLength = isZeroLength;\nexports.addAttributes = addAttributes;\nexports.getEmbellishedInner = getEmbellishedInner;\nexports.sliceNodes = sliceNodes;\nexports.partitionNodes = partitionNodes;\nconst DomUtil = require(\"../common/dom_util.js\");\nvar MMLTAGS;\n(function (MMLTAGS) {\n    MMLTAGS[\"ANNOTATION\"] = \"ANNOTATION\";\n    MMLTAGS[\"ANNOTATIONXML\"] = \"ANNOTATION-XML\";\n    MMLTAGS[\"MACTION\"] = \"MACTION\";\n    MMLTAGS[\"MALIGNGROUP\"] = \"MALIGNGROUP\";\n    MMLTAGS[\"MALIGNMARK\"] = \"MALIGNMARK\";\n    MMLTAGS[\"MATH\"] = \"MATH\";\n    MMLTAGS[\"MENCLOSE\"] = \"MENCLOSE\";\n    MMLTAGS[\"MERROR\"] = \"MERROR\";\n    MMLTAGS[\"MFENCED\"] = \"MFENCED\";\n    MMLTAGS[\"MFRAC\"] = \"MFRAC\";\n    MMLTAGS[\"MGLYPH\"] = \"MGLYPH\";\n    MMLTAGS[\"MI\"] = \"MI\";\n    MMLTAGS[\"MLABELEDTR\"] = \"MLABELEDTR\";\n    MMLTAGS[\"MMULTISCRIPTS\"] = \"MMULTISCRIPTS\";\n    MMLTAGS[\"MN\"] = \"MN\";\n    MMLTAGS[\"MO\"] = \"MO\";\n    MMLTAGS[\"MOVER\"] = \"MOVER\";\n    MMLTAGS[\"MPADDED\"] = \"MPADDED\";\n    MMLTAGS[\"MPHANTOM\"] = \"MPHANTOM\";\n    MMLTAGS[\"MPRESCRIPTS\"] = \"MPRESCRIPTS\";\n    MMLTAGS[\"MROOT\"] = \"MROOT\";\n    MMLTAGS[\"MROW\"] = \"MROW\";\n    MMLTAGS[\"MS\"] = \"MS\";\n    MMLTAGS[\"MSPACE\"] = \"MSPACE\";\n    MMLTAGS[\"MSQRT\"] = \"MSQRT\";\n    MMLTAGS[\"MSTYLE\"] = \"MSTYLE\";\n    MMLTAGS[\"MSUB\"] = \"MSUB\";\n    MMLTAGS[\"MSUBSUP\"] = \"MSUBSUP\";\n    MMLTAGS[\"MSUP\"] = \"MSUP\";\n    MMLTAGS[\"MTABLE\"] = \"MTABLE\";\n    MMLTAGS[\"MTD\"] = \"MTD\";\n    MMLTAGS[\"MTEXT\"] = \"MTEXT\";\n    MMLTAGS[\"MTR\"] = \"MTR\";\n    MMLTAGS[\"MUNDER\"] = \"MUNDER\";\n    MMLTAGS[\"MUNDEROVER\"] = \"MUNDEROVER\";\n    MMLTAGS[\"NONE\"] = \"NONE\";\n    MMLTAGS[\"SEMANTICS\"] = \"SEMANTICS\";\n})(MMLTAGS || (exports.MMLTAGS = MMLTAGS = {}));\nconst ALLTAGS = Object.values(MMLTAGS);\nconst LEAFTAGS = [\n    MMLTAGS.MO,\n    MMLTAGS.MI,\n    MMLTAGS.MN,\n    MMLTAGS.MTEXT,\n    MMLTAGS.MS,\n    MMLTAGS.MSPACE\n];\nconst IGNORETAGS = [\n    MMLTAGS.MERROR,\n    MMLTAGS.MPHANTOM,\n    MMLTAGS.MALIGNGROUP,\n    MMLTAGS.MALIGNMARK,\n    MMLTAGS.MPRESCRIPTS,\n    MMLTAGS.ANNOTATION,\n    MMLTAGS.ANNOTATIONXML\n];\nconst EMPTYTAGS = [\n    MMLTAGS.MATH,\n    MMLTAGS.MROW,\n    MMLTAGS.MPADDED,\n    MMLTAGS.MACTION,\n    MMLTAGS.NONE,\n    MMLTAGS.MSTYLE,\n    MMLTAGS.SEMANTICS\n];\nconst DISPLAYTAGS = [MMLTAGS.MROOT, MMLTAGS.MSQRT];\nconst directSpeechKeys = ['aria-label', 'exact-speech', 'alt'];\nfunction hasMathTag(node) {\n    return !!node && DomUtil.tagName(node) === MMLTAGS.MATH;\n}\nfunction hasLeafTag(node) {\n    return !!node && LEAFTAGS.includes(DomUtil.tagName(node));\n}\nfunction hasIgnoreTag(node) {\n    return (!!node &&\n        (IGNORETAGS.includes(DomUtil.tagName(node)) ||\n            !ALLTAGS.includes(DomUtil.tagName(node))));\n}\nfunction hasEmptyTag(node) {\n    return !!node && EMPTYTAGS.includes(DomUtil.tagName(node));\n}\nfunction hasDisplayTag(node) {\n    return !!node && DISPLAYTAGS.includes(DomUtil.tagName(node));\n}\nfunction isOrphanedGlyph(node) {\n    return (!!node &&\n        DomUtil.tagName(node) === MMLTAGS.MGLYPH &&\n        !hasLeafTag(node.parentNode));\n}\nfunction purgeNodes(nodes) {\n    const nodeArray = [];\n    for (let i = 0, node; (node = nodes[i]); i++) {\n        if (node.nodeType !== DomUtil.NodeType.ELEMENT_NODE) {\n            continue;\n        }\n        const tagName = DomUtil.tagName(node);\n        if (IGNORETAGS.includes(tagName)) {\n            continue;\n        }\n        if (EMPTYTAGS.includes(tagName) && node.childNodes.length === 0) {\n            continue;\n        }\n        nodeArray.push(node);\n    }\n    return nodeArray;\n}\nfunction isZeroLength(length) {\n    if (!length) {\n        return false;\n    }\n    const negativeNamedSpaces = [\n        'negativeveryverythinmathspace',\n        'negativeverythinmathspace',\n        'negativethinmathspace',\n        'negativemediummathspace',\n        'negativethickmathspace',\n        'negativeverythickmathspace',\n        'negativeveryverythickmathspace'\n    ];\n    if (negativeNamedSpaces.includes(length)) {\n        return true;\n    }\n    const value = length.match(/[0-9.]+/);\n    if (!value) {\n        return false;\n    }\n    return parseFloat(value[0]) === 0;\n}\nfunction addAttributes(to, from) {\n    if (from.hasAttributes()) {\n        const attrs = from.attributes;\n        for (let i = attrs.length - 1; i >= 0; i--) {\n            const key = attrs[i].name;\n            if (key.match(/^ext/)) {\n                to.attributes[key] = attrs[i].value;\n                to.nobreaking = true;\n            }\n            if (directSpeechKeys.includes(key)) {\n                to.attributes['ext-speech'] = attrs[i].value;\n                to.nobreaking = true;\n            }\n            if (key.match(/texclass$/)) {\n                to.attributes['texclass'] = attrs[i].value;\n            }\n            if (key.toLowerCase() === 'data-latex') {\n                to.attributes['latex'] = attrs[i].value;\n            }\n            if (key === 'href') {\n                to.attributes['href'] = attrs[i].value;\n                to.nobreaking = true;\n            }\n        }\n    }\n}\nfunction getEmbellishedInner(node) {\n    if (node && node.embellished && node.childNodes.length > 0) {\n        return getEmbellishedInner(node.childNodes[0]);\n    }\n    return node;\n}\nfunction sliceNodes(nodes, pred, opt_reverse) {\n    if (opt_reverse) {\n        nodes.reverse();\n    }\n    const head = [];\n    for (let i = 0, node; (node = nodes[i]); i++) {\n        if (pred(node)) {\n            if (opt_reverse) {\n                return {\n                    head: nodes.slice(i + 1).reverse(),\n                    div: node,\n                    tail: head.reverse()\n                };\n            }\n            return { head: head, div: node, tail: nodes.slice(i + 1) };\n        }\n        head.push(node);\n    }\n    if (opt_reverse) {\n        return { head: [], div: null, tail: head.reverse() };\n    }\n    return { head: head, div: null, tail: [] };\n}\nfunction partitionNodes(nodes, pred) {\n    let restNodes = nodes;\n    const rel = [];\n    const comp = [];\n    let result = null;\n    do {\n        result = sliceNodes(restNodes, pred);\n        comp.push(result.head);\n        rel.push(result.div);\n        restNodes = result.tail;\n    } while (result.div);\n    rel.pop();\n    return { rel: rel, comp: comp };\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SemanticNode = void 0;\nconst DomUtil = require(\"../common/dom_util.js\");\nconst semantic_attr_js_1 = require(\"./semantic_attr.js\");\nconst semantic_meaning_js_1 = require(\"./semantic_meaning.js\");\nconst SemanticUtil = require(\"./semantic_util.js\");\nclass SemanticNode {\n    static fromXml(xml) {\n        const id = parseInt(xml.getAttribute('id'), 10);\n        const node = new SemanticNode(id);\n        node.type = xml.tagName;\n        SemanticNode.setAttribute(node, xml, 'role');\n        SemanticNode.setAttribute(node, xml, 'font');\n        SemanticNode.setAttribute(node, xml, 'embellished');\n        SemanticNode.setAttribute(node, xml, 'fencepointer', 'fencePointer');\n        if (xml.getAttribute('annotation')) {\n            node.parseAnnotation(xml.getAttribute('annotation'));\n        }\n        SemanticUtil.addAttributes(node, xml);\n        SemanticNode.processChildren(node, xml);\n        return node;\n    }\n    static setAttribute(node, xml, attribute, opt_name) {\n        opt_name = opt_name || attribute;\n        const value = xml.getAttribute(attribute);\n        if (value) {\n            node[opt_name] = value;\n        }\n    }\n    static processChildren(node, xml) {\n        for (const child of DomUtil.toArray(xml.childNodes)) {\n            if (child.nodeType === DomUtil.NodeType.TEXT_NODE) {\n                node.textContent = child.textContent;\n                continue;\n            }\n            const children = DomUtil.toArray(child.childNodes).map(SemanticNode.fromXml);\n            children.forEach((x) => (x.parent = node));\n            if (DomUtil.tagName(child) === 'CONTENT') {\n                node.contentNodes = children;\n            }\n            else {\n                node.childNodes = children;\n            }\n        }\n    }\n    constructor(id) {\n        this.id = id;\n        this.mathml = [];\n        this.parent = null;\n        this.type = semantic_meaning_js_1.SemanticType.UNKNOWN;\n        this.role = semantic_meaning_js_1.SemanticRole.UNKNOWN;\n        this.font = semantic_meaning_js_1.SemanticFont.UNKNOWN;\n        this.embellished = null;\n        this.fencePointer = '';\n        this.childNodes = [];\n        this.textContent = '';\n        this.mathmlTree = null;\n        this.contentNodes = [];\n        this.annotation = {};\n        this.attributes = {};\n        this.nobreaking = false;\n    }\n    querySelectorAll(pred) {\n        let result = [];\n        for (let i = 0, child; (child = this.childNodes[i]); i++) {\n            result = result.concat(child.querySelectorAll(pred));\n        }\n        for (let i = 0, content; (content = this.contentNodes[i]); i++) {\n            result = result.concat(content.querySelectorAll(pred));\n        }\n        if (pred(this)) {\n            result.unshift(this);\n        }\n        return result;\n    }\n    xml(xml, brief) {\n        const xmlNodeList = function (tag, nodes) {\n            const xmlNodes = nodes.map(function (x) {\n                return x.xml(xml, brief);\n            });\n            const tagNode = xml.createElementNS('', tag);\n            for (let i = 0, child; (child = xmlNodes[i]); i++) {\n                tagNode.appendChild(child);\n            }\n            return tagNode;\n        };\n        const node = xml.createElementNS('', this.type);\n        if (!brief) {\n            this.xmlAttributes(node);\n        }\n        node.textContent = this.textContent;\n        if (this.contentNodes.length > 0) {\n            node.appendChild(xmlNodeList(\"content\", this.contentNodes));\n        }\n        if (this.childNodes.length > 0) {\n            node.appendChild(xmlNodeList(\"children\", this.childNodes));\n        }\n        return node;\n    }\n    toString(brief = false) {\n        const xml = DomUtil.parseInput('<snode/>');\n        return DomUtil.serializeXml(this.xml(xml.ownerDocument, brief));\n    }\n    allAttributes() {\n        const attributes = [];\n        attributes.push([\"role\", this.role]);\n        if (this.font !== semantic_meaning_js_1.SemanticFont.UNKNOWN) {\n            attributes.push([\"font\", this.font]);\n        }\n        if (Object.keys(this.annotation).length) {\n            attributes.push([\"annotation\", this.annotationXml()]);\n        }\n        if (this.embellished) {\n            attributes.push([\"embellished\", this.embellished]);\n        }\n        if (this.fencePointer) {\n            attributes.push([\"fencepointer\", this.fencePointer]);\n        }\n        attributes.push([\"id\", this.id.toString()]);\n        return attributes;\n    }\n    annotationXml() {\n        const result = [];\n        for (const [key, val] of Object.entries(this.annotation)) {\n            val.forEach((mean) => result.push(key + ':' + mean));\n        }\n        return result.join(';');\n    }\n    attributesXml() {\n        const result = [];\n        for (const [key, value] of Object.entries(this.attributes)) {\n            result.push(key + ':' + SemanticNode.escapeValue(value));\n        }\n        return result.join(';');\n    }\n    toJson() {\n        const json = {};\n        json[\"type\"] = this.type;\n        const attributes = this.allAttributes();\n        for (let i = 0, attr; (attr = attributes[i]); i++) {\n            json[attr[0]] = attr[1].toString();\n        }\n        if (this.textContent) {\n            json[\"$t\"] = this.textContent;\n        }\n        if (this.childNodes.length) {\n            json[\"children\"] = this.childNodes.map(function (child) {\n                return child.toJson();\n            });\n        }\n        if (this.contentNodes.length) {\n            json[\"content\"] = this.contentNodes.map(function (child) {\n                return child.toJson();\n            });\n        }\n        return json;\n    }\n    updateContent(content, text) {\n        const newContent = text\n            ? content\n                .replace(/^[ \\f\\n\\r\\t\\v\\u200b]*/, '')\n                .replace(/[ \\f\\n\\r\\t\\v\\u200b]*$/, '')\n            : content.trim();\n        content = content && !newContent ? content : newContent;\n        if (this.textContent === content) {\n            return;\n        }\n        const meaning = semantic_attr_js_1.SemanticMap.Meaning.get(content.replace(/\\s/g, ' '));\n        this.textContent = content;\n        this.role = meaning.role;\n        this.type = meaning.type;\n        this.font = meaning.font;\n    }\n    addMathmlNodes(mmlNodes) {\n        for (let i = 0, mml; (mml = mmlNodes[i]); i++) {\n            if (this.mathml.indexOf(mml) === -1) {\n                this.mathml.push(mml);\n            }\n        }\n    }\n    appendChild(child) {\n        this.childNodes.push(child);\n        this.addMathmlNodes(child.mathml);\n        child.parent = this;\n    }\n    replaceChild(oldNode, newNode) {\n        const index = this.childNodes.indexOf(oldNode);\n        if (index === -1) {\n            return;\n        }\n        oldNode.parent = null;\n        newNode.parent = this;\n        this.childNodes[index] = newNode;\n        const removeMathml = oldNode.mathml.filter(function (x) {\n            return newNode.mathml.indexOf(x) === -1;\n        });\n        const addMathml = newNode.mathml.filter(function (x) {\n            return oldNode.mathml.indexOf(x) === -1;\n        });\n        this.removeMathmlNodes(removeMathml);\n        this.addMathmlNodes(addMathml);\n    }\n    appendContentNode(node) {\n        if (node) {\n            this.contentNodes.push(node);\n            this.addMathmlNodes(node.mathml);\n            node.parent = this;\n        }\n    }\n    removeContentNode(node) {\n        if (node) {\n            const index = this.contentNodes.indexOf(node);\n            if (index !== -1) {\n                this.contentNodes.slice(index, 1);\n            }\n        }\n    }\n    equals(node) {\n        if (!node) {\n            return false;\n        }\n        if (this.type !== node.type ||\n            this.role !== node.role ||\n            this.textContent !== node.textContent ||\n            this.childNodes.length !== node.childNodes.length ||\n            this.contentNodes.length !== node.contentNodes.length) {\n            return false;\n        }\n        for (let i = 0, node1, node2; (node1 = this.childNodes[i]), (node2 = node.childNodes[i]); i++) {\n            if (!node1.equals(node2)) {\n                return false;\n            }\n        }\n        for (let i = 0, node1, node2; (node1 = this.contentNodes[i]), (node2 = node.contentNodes[i]); i++) {\n            if (!node1.equals(node2)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    displayTree() {\n        console.info(this.displayTree_(0));\n    }\n    addAnnotation(domain, annotation) {\n        if (annotation) {\n            this.addAnnotation_(domain, annotation);\n        }\n    }\n    getAnnotation(domain) {\n        const content = this.annotation[domain];\n        return content ? content : [];\n    }\n    hasAnnotation(domain, annotation) {\n        const content = this.annotation[domain];\n        if (!content) {\n            return false;\n        }\n        return content.indexOf(annotation) !== -1;\n    }\n    parseAnnotation(stateStr) {\n        const annotations = stateStr.split(';');\n        for (let i = 0, l = annotations.length; i < l; i++) {\n            const annotation = annotations[i].split(':');\n            this.addAnnotation(annotation[0], annotation[1]);\n        }\n    }\n    meaning() {\n        return { type: this.type, role: this.role, font: this.font };\n    }\n    xmlAttributes(node) {\n        const attributes = this.allAttributes();\n        for (let i = 0, attr; (attr = attributes[i]); i++) {\n            node.setAttribute(attr[0], attr[1]);\n        }\n        this.addExternalAttributes(node);\n    }\n    addExternalAttributes(node) {\n        for (const [attr, val] of Object.entries(this.attributes)) {\n            node.setAttribute(attr, val);\n        }\n    }\n    static escapeValue(value) {\n        return value.replace(/;/g, '\\\\0003B');\n    }\n    parseAttributes(stateStr) {\n        if (!stateStr)\n            return;\n        const attributes = stateStr.split(';');\n        for (let i = 0, l = attributes.length; i < l; i++) {\n            const [key, ...values] = attributes[i].split(':');\n            if (key) {\n                this.attributes[key] = values.join('').replace(/\\\\0003B/g, ';');\n            }\n        }\n    }\n    removeMathmlNodes(mmlNodes) {\n        const mmlList = this.mathml;\n        for (let i = 0, mml; (mml = mmlNodes[i]); i++) {\n            const index = mmlList.indexOf(mml);\n            if (index !== -1) {\n                mmlList.splice(index, 1);\n            }\n        }\n        this.mathml = mmlList;\n    }\n    displayTree_(depth) {\n        depth++;\n        const depthString = Array(depth).join('  ');\n        let result = '';\n        result += '\\n' + depthString + this.toString();\n        result += '\\n' + depthString + 'MathmlTree:';\n        result += '\\n' + depthString + this.mathmlTreeString();\n        result += '\\n' + depthString + 'MathML:';\n        for (let i = 0, mml; (mml = this.mathml[i]); i++) {\n            result += '\\n' + depthString + mml.toString();\n        }\n        result += '\\n' + depthString + 'Begin Content';\n        this.contentNodes.forEach(function (x) {\n            result += x.displayTree_(depth);\n        });\n        result += '\\n' + depthString + 'End Content';\n        result += '\\n' + depthString + 'Begin Children';\n        this.childNodes.forEach(function (x) {\n            result += x.displayTree_(depth);\n        });\n        result += '\\n' + depthString + 'End Children';\n        return result;\n    }\n    mathmlTreeString() {\n        return this.mathmlTree ? this.mathmlTree.toString() : 'EMPTY';\n    }\n    addAnnotation_(domain, annotation) {\n        const content = this.annotation[domain];\n        if (content && !content.includes(annotation)) {\n            content.push(annotation);\n        }\n        else {\n            this.annotation[domain] = [annotation];\n        }\n    }\n}\nexports.SemanticNode = SemanticNode;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SemanticNodeFactory = void 0;\nconst semantic_meaning_js_1 = require(\"./semantic_meaning.js\");\nconst semantic_default_js_1 = require(\"./semantic_default.js\");\nconst semantic_default_js_2 = require(\"./semantic_default.js\");\nconst semantic_node_js_1 = require(\"./semantic_node.js\");\nclass SemanticNodeFactory {\n    constructor() {\n        this.leafMap = new semantic_default_js_2.SemanticNodeCollator();\n        this.defaultMap = new semantic_default_js_1.SemanticDefault();\n        this.idCounter_ = -1;\n    }\n    makeNode(id) {\n        return this.createNode_(id);\n    }\n    makeUnprocessed(mml) {\n        const node = this.createNode_();\n        node.mathml = [mml];\n        node.mathmlTree = mml;\n        return node;\n    }\n    makeEmptyNode() {\n        const node = this.createNode_();\n        node.type = semantic_meaning_js_1.SemanticType.EMPTY;\n        return node;\n    }\n    makeContentNode(content) {\n        const node = this.createNode_();\n        node.updateContent(content);\n        return node;\n    }\n    makeMultipleContentNodes(num, content) {\n        const nodes = [];\n        for (let i = 0; i < num; i++) {\n            nodes.push(this.makeContentNode(content));\n        }\n        return nodes;\n    }\n    makeLeafNode(content, font) {\n        if (!content) {\n            return this.makeEmptyNode();\n        }\n        const node = this.makeContentNode(content);\n        node.font = font || node.font;\n        const meaning = this.defaultMap.getNode(node);\n        if (meaning) {\n            node.type = meaning.type;\n            node.role = meaning.role;\n            node.font = meaning.font;\n        }\n        this.leafMap.addNode(node);\n        return node;\n    }\n    makeBranchNode(type, children, contentNodes, opt_content) {\n        const node = this.createNode_();\n        if (opt_content) {\n            node.updateContent(opt_content);\n        }\n        node.type = type;\n        node.childNodes = children;\n        node.contentNodes = contentNodes;\n        children.concat(contentNodes).forEach(function (x) {\n            x.parent = node;\n            node.addMathmlNodes(x.mathml);\n        });\n        return node;\n    }\n    createNode_(id) {\n        if (typeof id !== 'undefined') {\n            this.idCounter_ = Math.max(this.idCounter_, id);\n        }\n        else {\n            id = ++this.idCounter_;\n        }\n        return new semantic_node_js_1.SemanticNode(id);\n    }\n}\nexports.SemanticNodeFactory = SemanticNodeFactory;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isType = isType;\nexports.isRole = isRole;\nexports.isAccent = isAccent;\nexports.isSimpleFunctionScope = isSimpleFunctionScope;\nexports.isPrefixFunctionBoundary = isPrefixFunctionBoundary;\nexports.isBigOpBoundary = isBigOpBoundary;\nexports.isIntegralDxBoundary = isIntegralDxBoundary;\nexports.isIntegralDxBoundarySingle = isIntegralDxBoundarySingle;\nexports.isGeneralFunctionBoundary = isGeneralFunctionBoundary;\nexports.isEmbellished = isEmbellished;\nexports.isOperator = isOperator;\nexports.isRelation = isRelation;\nexports.isPunctuation = isPunctuation;\nexports.isFence = isFence;\nexports.isElligibleEmbellishedFence = isElligibleEmbellishedFence;\nexports.isTableOrMultiline = isTableOrMultiline;\nexports.tableIsMatrixOrVector = tableIsMatrixOrVector;\nexports.isFencedElement = isFencedElement;\nexports.tableIsCases = tableIsCases;\nexports.tableIsMultiline = tableIsMultiline;\nexports.lineIsLabelled = lineIsLabelled;\nexports.isBinomial = isBinomial;\nexports.isLimitBase = isLimitBase;\nexports.isSimpleFunctionHead = isSimpleFunctionHead;\nexports.singlePunctAtPosition = singlePunctAtPosition;\nexports.isSimpleFunction = isSimpleFunction;\nexports.isSetNode = isSetNode;\nexports.isSingletonSetContent = isSingletonSetContent;\nexports.isUnitCounter = isUnitCounter;\nexports.isPureUnit = isPureUnit;\nexports.isUnitProduct = isUnitProduct;\nexports.isImplicit = isImplicit;\nexports.isImplicitOp = isImplicitOp;\nexports.isNeutralFence = isNeutralFence;\nexports.compareNeutralFences = compareNeutralFences;\nexports.elligibleLeftNeutral = elligibleLeftNeutral;\nexports.elligibleRightNeutral = elligibleRightNeutral;\nexports.isMembership = isMembership;\nconst semantic_attr_js_1 = require(\"./semantic_attr.js\");\nconst semantic_meaning_js_1 = require(\"./semantic_meaning.js\");\nconst semantic_util_js_1 = require(\"./semantic_util.js\");\nfunction isType(node, attr) {\n    return node.type === attr;\n}\nfunction embellishedType(node, attr) {\n    return node.embellished === attr;\n}\nfunction isRole(node, attr) {\n    return node.role === attr;\n}\nfunction isAccent(node) {\n    return (isType(node, semantic_meaning_js_1.SemanticType.FENCE) ||\n        isType(node, semantic_meaning_js_1.SemanticType.PUNCTUATION) ||\n        isType(node, semantic_meaning_js_1.SemanticType.OPERATOR) ||\n        isType(node, semantic_meaning_js_1.SemanticType.RELATION));\n}\nfunction isSimpleFunctionScope(node) {\n    const children = node.childNodes;\n    if (children.length === 0) {\n        return true;\n    }\n    if (children.length > 1) {\n        return false;\n    }\n    const child = children[0];\n    if (child.type === semantic_meaning_js_1.SemanticType.INFIXOP) {\n        if (child.role !== semantic_meaning_js_1.SemanticRole.IMPLICIT) {\n            return false;\n        }\n        if (child.childNodes.some((x) => isType(x, semantic_meaning_js_1.SemanticType.INFIXOP))) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction isPrefixFunctionBoundary(node) {\n    return ((isOperator(node) && !isRole(node, semantic_meaning_js_1.SemanticRole.DIVISION)) ||\n        isType(node, semantic_meaning_js_1.SemanticType.APPL) ||\n        isGeneralFunctionBoundary(node));\n}\nfunction isBigOpBoundary(node) {\n    return isOperator(node) || isGeneralFunctionBoundary(node);\n}\nfunction isIntegralDxBoundary(firstNode, secondNode) {\n    return (!!secondNode &&\n        isType(secondNode, semantic_meaning_js_1.SemanticType.IDENTIFIER) &&\n        semantic_attr_js_1.SemanticMap.Secondary.has(firstNode.textContent, semantic_meaning_js_1.SemanticSecondary.D));\n}\nfunction isIntegralDxBoundarySingle(node) {\n    if (isType(node, semantic_meaning_js_1.SemanticType.IDENTIFIER)) {\n        const firstChar = node.textContent[0];\n        return (firstChar &&\n            node.textContent[1] &&\n            semantic_attr_js_1.SemanticMap.Secondary.has(firstChar, semantic_meaning_js_1.SemanticSecondary.D));\n    }\n    return false;\n}\nfunction isGeneralFunctionBoundary(node) {\n    return isRelation(node) || isPunctuation(node);\n}\nfunction isEmbellished(node) {\n    if (node.embellished) {\n        return node.embellished;\n    }\n    if (isEmbellishedType(node.type)) {\n        return node.type;\n    }\n    return null;\n}\nfunction isEmbellishedType(type) {\n    return (type === semantic_meaning_js_1.SemanticType.OPERATOR ||\n        type === semantic_meaning_js_1.SemanticType.RELATION ||\n        type === semantic_meaning_js_1.SemanticType.FENCE ||\n        type === semantic_meaning_js_1.SemanticType.PUNCTUATION);\n}\nfunction isOperator(node) {\n    return (isType(node, semantic_meaning_js_1.SemanticType.OPERATOR) ||\n        embellishedType(node, semantic_meaning_js_1.SemanticType.OPERATOR));\n}\nfunction isRelation(node) {\n    return (isType(node, semantic_meaning_js_1.SemanticType.RELATION) ||\n        embellishedType(node, semantic_meaning_js_1.SemanticType.RELATION));\n}\nfunction isPunctuation(node) {\n    return (isType(node, semantic_meaning_js_1.SemanticType.PUNCTUATION) ||\n        embellishedType(node, semantic_meaning_js_1.SemanticType.PUNCTUATION));\n}\nfunction isFence(node) {\n    return (isType(node, semantic_meaning_js_1.SemanticType.FENCE) ||\n        embellishedType(node, semantic_meaning_js_1.SemanticType.FENCE));\n}\nfunction isElligibleEmbellishedFence(node) {\n    if (!node || !isFence(node)) {\n        return false;\n    }\n    if (!node.embellished) {\n        return true;\n    }\n    return recurseBaseNode(node);\n}\nfunction bothSide(node) {\n    return (isType(node, semantic_meaning_js_1.SemanticType.TENSOR) &&\n        (!isType(node.childNodes[1], semantic_meaning_js_1.SemanticType.EMPTY) ||\n            !isType(node.childNodes[2], semantic_meaning_js_1.SemanticType.EMPTY)) &&\n        (!isType(node.childNodes[3], semantic_meaning_js_1.SemanticType.EMPTY) ||\n            !isType(node.childNodes[4], semantic_meaning_js_1.SemanticType.EMPTY)));\n}\nfunction recurseBaseNode(node) {\n    if (!node.embellished) {\n        return true;\n    }\n    if (bothSide(node)) {\n        return false;\n    }\n    if (isRole(node, semantic_meaning_js_1.SemanticRole.CLOSE) && isType(node, semantic_meaning_js_1.SemanticType.TENSOR)) {\n        return false;\n    }\n    if (isRole(node, semantic_meaning_js_1.SemanticRole.OPEN) &&\n        (isType(node, semantic_meaning_js_1.SemanticType.SUBSCRIPT) ||\n            isType(node, semantic_meaning_js_1.SemanticType.SUPERSCRIPT))) {\n        return false;\n    }\n    return recurseBaseNode(node.childNodes[0]);\n}\nfunction isTableOrMultiline(node) {\n    return (!!node &&\n        (isType(node, semantic_meaning_js_1.SemanticType.TABLE) || isType(node, semantic_meaning_js_1.SemanticType.MULTILINE)));\n}\nfunction tableIsMatrixOrVector(node) {\n    return (!!node && isFencedElement(node) && isTableOrMultiline(node.childNodes[0]));\n}\nfunction isFencedElement(node) {\n    return (!!node &&\n        isType(node, semantic_meaning_js_1.SemanticType.FENCED) &&\n        (isRole(node, semantic_meaning_js_1.SemanticRole.LEFTRIGHT) || isNeutralFence(node)) &&\n        node.childNodes.length === 1);\n}\nfunction tableIsCases(_table, prevNodes) {\n    return (prevNodes.length > 0 &&\n        isRole(prevNodes[prevNodes.length - 1], semantic_meaning_js_1.SemanticRole.OPENFENCE));\n}\nfunction tableIsMultiline(table) {\n    return table.childNodes.every(function (row) {\n        const length = row.childNodes.length;\n        return length <= 1;\n    });\n}\nfunction lineIsLabelled(line) {\n    return (isType(line, semantic_meaning_js_1.SemanticType.LINE) &&\n        line.contentNodes.length &&\n        isRole(line.contentNodes[0], semantic_meaning_js_1.SemanticRole.LABEL));\n}\nfunction isBinomial(table) {\n    return table.childNodes.length === 2;\n}\nfunction isLimitBase(node) {\n    return (isType(node, semantic_meaning_js_1.SemanticType.LARGEOP) ||\n        isType(node, semantic_meaning_js_1.SemanticType.LIMBOTH) ||\n        isType(node, semantic_meaning_js_1.SemanticType.LIMLOWER) ||\n        isType(node, semantic_meaning_js_1.SemanticType.LIMUPPER) ||\n        (isType(node, semantic_meaning_js_1.SemanticType.FUNCTION) &&\n            isRole(node, semantic_meaning_js_1.SemanticRole.LIMFUNC)) ||\n        ((isType(node, semantic_meaning_js_1.SemanticType.OVERSCORE) ||\n            isType(node, semantic_meaning_js_1.SemanticType.UNDERSCORE)) &&\n            isLimitBase(node.childNodes[0])));\n}\nfunction isSimpleFunctionHead(node) {\n    return (node.type === semantic_meaning_js_1.SemanticType.IDENTIFIER ||\n        node.role === semantic_meaning_js_1.SemanticRole.LATINLETTER ||\n        node.role === semantic_meaning_js_1.SemanticRole.GREEKLETTER ||\n        node.role === semantic_meaning_js_1.SemanticRole.OTHERLETTER);\n}\nfunction singlePunctAtPosition(nodes, puncts, position) {\n    return (puncts.length === 1 &&\n        (nodes[position].type === semantic_meaning_js_1.SemanticType.PUNCTUATION ||\n            nodes[position].embellished === semantic_meaning_js_1.SemanticType.PUNCTUATION) &&\n        nodes[position] === puncts[0]);\n}\nfunction isSimpleFunction(node) {\n    return (isType(node, semantic_meaning_js_1.SemanticType.IDENTIFIER) &&\n        isRole(node, semantic_meaning_js_1.SemanticRole.SIMPLEFUNC));\n}\nfunction isLeftBrace(node) {\n    const leftBrace = ['{', '﹛', '｛'];\n    return !!node && leftBrace.indexOf(node.textContent) !== -1;\n}\nfunction isRightBrace(node) {\n    const rightBrace = ['}', '﹜', '｝'];\n    return !!node && rightBrace.indexOf(node.textContent) !== -1;\n}\nfunction isSetNode(node) {\n    return (isLeftBrace(node.contentNodes[0]) && isRightBrace(node.contentNodes[1]));\n}\nconst illegalSingleton = [\n    semantic_meaning_js_1.SemanticType.PUNCTUATION,\n    semantic_meaning_js_1.SemanticType.PUNCTUATED,\n    semantic_meaning_js_1.SemanticType.RELSEQ,\n    semantic_meaning_js_1.SemanticType.MULTIREL,\n    semantic_meaning_js_1.SemanticType.TABLE,\n    semantic_meaning_js_1.SemanticType.MULTILINE,\n    semantic_meaning_js_1.SemanticType.CASES,\n    semantic_meaning_js_1.SemanticType.INFERENCE\n];\nconst scriptedElement = [\n    semantic_meaning_js_1.SemanticType.LIMUPPER,\n    semantic_meaning_js_1.SemanticType.LIMLOWER,\n    semantic_meaning_js_1.SemanticType.LIMBOTH,\n    semantic_meaning_js_1.SemanticType.SUBSCRIPT,\n    semantic_meaning_js_1.SemanticType.SUPERSCRIPT,\n    semantic_meaning_js_1.SemanticType.UNDERSCORE,\n    semantic_meaning_js_1.SemanticType.OVERSCORE,\n    semantic_meaning_js_1.SemanticType.TENSOR\n];\nfunction isSingletonSetContent(node) {\n    const type = node.type;\n    if (illegalSingleton.indexOf(type) !== -1 ||\n        (type === semantic_meaning_js_1.SemanticType.INFIXOP && node.role !== semantic_meaning_js_1.SemanticRole.IMPLICIT)) {\n        return false;\n    }\n    if (type === semantic_meaning_js_1.SemanticType.FENCED) {\n        return node.role === semantic_meaning_js_1.SemanticRole.LEFTRIGHT\n            ? isSingletonSetContent(node.childNodes[0])\n            : true;\n    }\n    if (scriptedElement.indexOf(type) !== -1) {\n        return isSingletonSetContent(node.childNodes[0]);\n    }\n    return true;\n}\nfunction isNumber(node) {\n    return (node.type === semantic_meaning_js_1.SemanticType.NUMBER &&\n        (node.role === semantic_meaning_js_1.SemanticRole.INTEGER || node.role === semantic_meaning_js_1.SemanticRole.FLOAT));\n}\nfunction isUnitCounter(node) {\n    return (isNumber(node) ||\n        node.role === semantic_meaning_js_1.SemanticRole.VULGAR ||\n        node.role === semantic_meaning_js_1.SemanticRole.MIXED);\n}\nfunction isPureUnit(node) {\n    const children = node.childNodes;\n    return (node.role === semantic_meaning_js_1.SemanticRole.UNIT &&\n        (!children.length || children[0].role === semantic_meaning_js_1.SemanticRole.UNIT));\n}\nfunction isUnitProduct(node) {\n    const children = node.childNodes;\n    return (node.type === semantic_meaning_js_1.SemanticType.INFIXOP &&\n        (node.role === semantic_meaning_js_1.SemanticRole.MULTIPLICATION ||\n            node.role === semantic_meaning_js_1.SemanticRole.IMPLICIT) &&\n        children.length &&\n        (isPureUnit(children[0]) || isUnitCounter(children[0])) &&\n        node.childNodes.slice(1).every(isPureUnit));\n}\nfunction isImplicit(node) {\n    return (node.type === semantic_meaning_js_1.SemanticType.INFIXOP &&\n        (node.role === semantic_meaning_js_1.SemanticRole.IMPLICIT ||\n            (node.role === semantic_meaning_js_1.SemanticRole.UNIT &&\n                !!node.contentNodes.length &&\n                node.contentNodes[0].textContent === semantic_attr_js_1.NamedSymbol.invisibleTimes)));\n}\nfunction isImplicitOp(node) {\n    return (node.type === semantic_meaning_js_1.SemanticType.INFIXOP && node.role === semantic_meaning_js_1.SemanticRole.IMPLICIT);\n}\nfunction isNeutralFence(fence) {\n    return (fence.role === semantic_meaning_js_1.SemanticRole.NEUTRAL || fence.role === semantic_meaning_js_1.SemanticRole.METRIC);\n}\nfunction compareNeutralFences(fence1, fence2) {\n    return (isNeutralFence(fence1) &&\n        isNeutralFence(fence2) &&\n        (0, semantic_util_js_1.getEmbellishedInner)(fence1).textContent ===\n            (0, semantic_util_js_1.getEmbellishedInner)(fence2).textContent);\n}\nfunction elligibleLeftNeutral(fence) {\n    if (!isNeutralFence(fence)) {\n        return false;\n    }\n    if (!fence.embellished) {\n        return true;\n    }\n    if (fence.type === semantic_meaning_js_1.SemanticType.SUPERSCRIPT ||\n        fence.type === semantic_meaning_js_1.SemanticType.SUBSCRIPT) {\n        return false;\n    }\n    if (fence.type === semantic_meaning_js_1.SemanticType.TENSOR &&\n        (fence.childNodes[3].type !== semantic_meaning_js_1.SemanticType.EMPTY ||\n            fence.childNodes[4].type !== semantic_meaning_js_1.SemanticType.EMPTY)) {\n        return false;\n    }\n    return true;\n}\nfunction elligibleRightNeutral(fence) {\n    if (!isNeutralFence(fence)) {\n        return false;\n    }\n    if (!fence.embellished) {\n        return true;\n    }\n    if (fence.type === semantic_meaning_js_1.SemanticType.TENSOR &&\n        (fence.childNodes[1].type !== semantic_meaning_js_1.SemanticType.EMPTY ||\n            fence.childNodes[2].type !== semantic_meaning_js_1.SemanticType.EMPTY)) {\n        return false;\n    }\n    return true;\n}\nfunction isMembership(element) {\n    return [\n        semantic_meaning_js_1.SemanticRole.ELEMENT,\n        semantic_meaning_js_1.SemanticRole.NONELEMENT,\n        semantic_meaning_js_1.SemanticRole.REELEMENT,\n        semantic_meaning_js_1.SemanticRole.RENONELEMENT\n    ].includes(element.role);\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SemanticProcessor = void 0;\nconst DomUtil = require(\"../common/dom_util.js\");\nconst semantic_attr_js_1 = require(\"./semantic_attr.js\");\nconst semantic_meaning_js_1 = require(\"./semantic_meaning.js\");\nconst semantic_heuristic_factory_js_1 = require(\"./semantic_heuristic_factory.js\");\nconst semantic_node_factory_js_1 = require(\"./semantic_node_factory.js\");\nconst SemanticPred = require(\"./semantic_pred.js\");\nconst SemanticUtil = require(\"./semantic_util.js\");\nconst semantic_util_js_1 = require(\"../semantic_tree/semantic_util.js\");\nclass SemanticProcessor {\n    static getInstance() {\n        SemanticProcessor.instance =\n            SemanticProcessor.instance || new SemanticProcessor();\n        return SemanticProcessor.instance;\n    }\n    static tableToMultiline(table) {\n        if (!SemanticPred.tableIsMultiline(table)) {\n            return semantic_heuristic_factory_js_1.SemanticHeuristics.run('rewrite_subcases', table, SemanticProcessor.classifyTable);\n        }\n        table.type = semantic_meaning_js_1.SemanticType.MULTILINE;\n        for (let i = 0, row; (row = table.childNodes[i]); i++) {\n            SemanticProcessor.rowToLine_(row, semantic_meaning_js_1.SemanticRole.MULTILINE);\n        }\n        if (table.childNodes.length === 1 &&\n            !SemanticPred.lineIsLabelled(table.childNodes[0]) &&\n            SemanticPred.isFencedElement(table.childNodes[0].childNodes[0])) {\n            SemanticProcessor.tableToMatrixOrVector_(SemanticProcessor.rewriteFencedLine_(table));\n        }\n        SemanticProcessor.binomialForm_(table);\n        SemanticProcessor.classifyMultiline(table);\n        return table;\n    }\n    static number(node) {\n        if (node.type === semantic_meaning_js_1.SemanticType.UNKNOWN ||\n            node.type === semantic_meaning_js_1.SemanticType.IDENTIFIER) {\n            node.type = semantic_meaning_js_1.SemanticType.NUMBER;\n        }\n        SemanticProcessor.meaningFromContent(node, SemanticProcessor.numberRole_);\n        SemanticProcessor.exprFont_(node);\n    }\n    static classifyMultiline(multiline) {\n        let index = 0;\n        const length = multiline.childNodes.length;\n        let line;\n        while (index < length &&\n            (!(line = multiline.childNodes[index]) || !line.childNodes.length)) {\n            index++;\n        }\n        if (index >= length) {\n            return;\n        }\n        const firstRole = line.childNodes[0].role;\n        if (firstRole !== semantic_meaning_js_1.SemanticRole.UNKNOWN &&\n            multiline.childNodes.every(function (x) {\n                const cell = x.childNodes[0];\n                return (!cell ||\n                    (cell.role === firstRole &&\n                        (SemanticPred.isType(cell, semantic_meaning_js_1.SemanticType.RELATION) ||\n                            SemanticPred.isType(cell, semantic_meaning_js_1.SemanticType.RELSEQ))));\n            })) {\n            multiline.role = firstRole;\n        }\n    }\n    static classifyTable(table) {\n        const columns = SemanticProcessor.computeColumns_(table);\n        SemanticProcessor.classifyByColumns_(table, columns, semantic_meaning_js_1.SemanticRole.EQUALITY) ||\n            SemanticProcessor.classifyByColumns_(table, columns, semantic_meaning_js_1.SemanticRole.INEQUALITY, [semantic_meaning_js_1.SemanticRole.EQUALITY]) ||\n            SemanticProcessor.classifyByColumns_(table, columns, semantic_meaning_js_1.SemanticRole.ARROW) ||\n            SemanticProcessor.detectCaleyTable(table);\n        return table;\n    }\n    static detectCaleyTable(table) {\n        if (!table.mathmlTree) {\n            return false;\n        }\n        const tree = table.mathmlTree;\n        const cl = tree.getAttribute('columnlines');\n        const rl = tree.getAttribute('rowlines');\n        if (!cl || !rl) {\n            return false;\n        }\n        if (SemanticProcessor.cayleySpacing(cl) &&\n            SemanticProcessor.cayleySpacing(rl)) {\n            table.role = semantic_meaning_js_1.SemanticRole.CAYLEY;\n            return true;\n        }\n        return false;\n    }\n    static cayleySpacing(lines) {\n        const list = lines.split(' ');\n        return ((list[0] === 'solid' || list[0] === 'dashed') &&\n            list.slice(1).every((x) => x === 'none'));\n    }\n    static proof(node, semantics, parse) {\n        const attrs = SemanticProcessor.separateSemantics(semantics);\n        return SemanticProcessor.getInstance().proof(node, attrs, parse);\n    }\n    static findSemantics(node, attr, opt_value) {\n        const value = opt_value == null ? null : opt_value;\n        const semantics = SemanticProcessor.getSemantics(node);\n        if (!semantics) {\n            return false;\n        }\n        if (!semantics[attr]) {\n            return false;\n        }\n        return value == null ? true : semantics[attr] === value;\n    }\n    static getSemantics(node) {\n        const semantics = node.getAttribute('semantics');\n        if (!semantics) {\n            return null;\n        }\n        return SemanticProcessor.separateSemantics(semantics);\n    }\n    static removePrefix(name) {\n        const [, ...rest] = name.split('_');\n        return rest.join('_');\n    }\n    static separateSemantics(attr) {\n        const result = {};\n        attr.split(';').forEach(function (x) {\n            const [name, value] = x.split(':');\n            result[SemanticProcessor.removePrefix(name)] = value;\n        });\n        return result;\n    }\n    static matchSpaces_(nodes, ops) {\n        for (let i = 0, op; (op = ops[i]); i++) {\n            const node = nodes[i];\n            const mt1 = node.mathmlTree;\n            const mt2 = nodes[i + 1].mathmlTree;\n            if (!mt1 || !mt2) {\n                continue;\n            }\n            const sibling = mt1.nextSibling;\n            if (!sibling || sibling === mt2) {\n                continue;\n            }\n            const spacer = SemanticProcessor.getSpacer_(sibling);\n            if (spacer) {\n                op.mathml.push(spacer);\n                op.mathmlTree = spacer;\n                op.role = semantic_meaning_js_1.SemanticRole.SPACE;\n            }\n        }\n    }\n    static getSpacer_(node) {\n        if (DomUtil.tagName(node) === semantic_util_js_1.MMLTAGS.MSPACE) {\n            return node;\n        }\n        while (SemanticUtil.hasEmptyTag(node) && node.childNodes.length === 1) {\n            node = node.childNodes[0];\n            if (DomUtil.tagName(node) === semantic_util_js_1.MMLTAGS.MSPACE) {\n                return node;\n            }\n        }\n        return null;\n    }\n    static fenceToPunct_(fence) {\n        const newRole = SemanticProcessor.FENCE_TO_PUNCT_[fence.role];\n        if (!newRole) {\n            return;\n        }\n        while (fence.embellished) {\n            fence.embellished = semantic_meaning_js_1.SemanticType.PUNCTUATION;\n            if (!(SemanticPred.isRole(fence, semantic_meaning_js_1.SemanticRole.SUBSUP) ||\n                SemanticPred.isRole(fence, semantic_meaning_js_1.SemanticRole.UNDEROVER))) {\n                fence.role = newRole;\n            }\n            fence = fence.childNodes[0];\n        }\n        fence.type = semantic_meaning_js_1.SemanticType.PUNCTUATION;\n        fence.role = newRole;\n    }\n    static classifyFunction_(funcNode, restNodes) {\n        if (funcNode.type === semantic_meaning_js_1.SemanticType.APPL ||\n            funcNode.type === semantic_meaning_js_1.SemanticType.BIGOP ||\n            funcNode.type === semantic_meaning_js_1.SemanticType.INTEGRAL) {\n            return '';\n        }\n        if (restNodes[0] &&\n            restNodes[0].textContent === semantic_attr_js_1.NamedSymbol.functionApplication) {\n            SemanticProcessor.getInstance().funcAppls[funcNode.id] =\n                restNodes.shift();\n            let role = semantic_meaning_js_1.SemanticRole.SIMPLEFUNC;\n            semantic_heuristic_factory_js_1.SemanticHeuristics.run('simple2prefix', funcNode);\n            if (funcNode.role === semantic_meaning_js_1.SemanticRole.PREFIXFUNC ||\n                funcNode.role === semantic_meaning_js_1.SemanticRole.LIMFUNC) {\n                role = funcNode.role;\n            }\n            SemanticProcessor.propagateFunctionRole_(funcNode, role);\n            return 'prefix';\n        }\n        const kind = SemanticProcessor.CLASSIFY_FUNCTION_[funcNode.role];\n        return kind\n            ? kind\n            : SemanticPred.isSimpleFunctionHead(funcNode)\n                ? 'simple'\n                : '';\n    }\n    static propagateFunctionRole_(funcNode, tag) {\n        if (funcNode) {\n            if (funcNode.type === semantic_meaning_js_1.SemanticType.INFIXOP) {\n                return;\n            }\n            if (!(SemanticPred.isRole(funcNode, semantic_meaning_js_1.SemanticRole.SUBSUP) ||\n                SemanticPred.isRole(funcNode, semantic_meaning_js_1.SemanticRole.UNDEROVER))) {\n                funcNode.role = tag;\n            }\n            SemanticProcessor.propagateFunctionRole_(funcNode.childNodes[0], tag);\n        }\n    }\n    static getFunctionOp_(tree, pred) {\n        if (pred(tree)) {\n            return tree;\n        }\n        for (let i = 0, child; (child = tree.childNodes[i]); i++) {\n            const op = SemanticProcessor.getFunctionOp_(child, pred);\n            if (op) {\n                return op;\n            }\n        }\n        return null;\n    }\n    static tableToMatrixOrVector_(node) {\n        const matrix = node.childNodes[0];\n        SemanticPred.isType(matrix, semantic_meaning_js_1.SemanticType.MULTILINE)\n            ? SemanticProcessor.tableToVector_(node)\n            : SemanticProcessor.tableToMatrix_(node);\n        node.contentNodes.forEach(matrix.appendContentNode.bind(matrix));\n        for (let i = 0, row; (row = matrix.childNodes[i]); i++) {\n            SemanticProcessor.assignRoleToRow_(row, SemanticProcessor.getComponentRoles_(matrix));\n        }\n        matrix.parent = null;\n        return matrix;\n    }\n    static tableToVector_(node) {\n        const vector = node.childNodes[0];\n        vector.type = semantic_meaning_js_1.SemanticType.VECTOR;\n        if (vector.childNodes.length === 1) {\n            SemanticProcessor.tableToSquare_(node);\n            return;\n        }\n        SemanticProcessor.binomialForm_(vector);\n    }\n    static binomialForm_(node) {\n        if (!SemanticPred.isRole(node, semantic_meaning_js_1.SemanticRole.UNKNOWN)) {\n            return;\n        }\n        if (SemanticPred.isBinomial(node)) {\n            node.role = semantic_meaning_js_1.SemanticRole.BINOMIAL;\n            node.childNodes[0].role = semantic_meaning_js_1.SemanticRole.BINOMIAL;\n            node.childNodes[1].role = semantic_meaning_js_1.SemanticRole.BINOMIAL;\n        }\n    }\n    static tableToMatrix_(node) {\n        const matrix = node.childNodes[0];\n        matrix.type = semantic_meaning_js_1.SemanticType.MATRIX;\n        if (matrix.childNodes &&\n            matrix.childNodes.length > 0 &&\n            matrix.childNodes[0].childNodes &&\n            matrix.childNodes.length === matrix.childNodes[0].childNodes.length) {\n            SemanticProcessor.tableToSquare_(node);\n            return;\n        }\n        if (matrix.childNodes && matrix.childNodes.length === 1) {\n            matrix.role = semantic_meaning_js_1.SemanticRole.ROWVECTOR;\n        }\n    }\n    static tableToSquare_(node) {\n        const matrix = node.childNodes[0];\n        if (!SemanticPred.isRole(matrix, semantic_meaning_js_1.SemanticRole.UNKNOWN)) {\n            return;\n        }\n        if (SemanticPred.isNeutralFence(node)) {\n            matrix.role = semantic_meaning_js_1.SemanticRole.DETERMINANT;\n            return;\n        }\n        matrix.role = semantic_meaning_js_1.SemanticRole.SQUAREMATRIX;\n    }\n    static getComponentRoles_(node) {\n        const role = node.role;\n        if (role && role !== semantic_meaning_js_1.SemanticRole.UNKNOWN) {\n            return role;\n        }\n        return node.type.toLowerCase() || semantic_meaning_js_1.SemanticRole.UNKNOWN;\n    }\n    static tableToCases_(table, openFence) {\n        for (let i = 0, row; (row = table.childNodes[i]); i++) {\n            SemanticProcessor.assignRoleToRow_(row, semantic_meaning_js_1.SemanticRole.CASES);\n        }\n        table.type = semantic_meaning_js_1.SemanticType.CASES;\n        table.appendContentNode(openFence);\n        if (SemanticPred.tableIsMultiline(table)) {\n            SemanticProcessor.binomialForm_(table);\n        }\n        return table;\n    }\n    static rewriteFencedLine_(table) {\n        const line = table.childNodes[0];\n        const fenced = table.childNodes[0].childNodes[0];\n        const element = table.childNodes[0].childNodes[0].childNodes[0];\n        fenced.parent = table.parent;\n        table.parent = fenced;\n        element.parent = line;\n        fenced.childNodes = [table];\n        line.childNodes = [element];\n        return fenced;\n    }\n    static rowToLine_(row, opt_role) {\n        const role = opt_role || semantic_meaning_js_1.SemanticRole.UNKNOWN;\n        if (SemanticPred.isType(row, semantic_meaning_js_1.SemanticType.ROW)) {\n            row.type = semantic_meaning_js_1.SemanticType.LINE;\n            row.role = role;\n            if (row.childNodes.length === 1 &&\n                SemanticPred.isType(row.childNodes[0], semantic_meaning_js_1.SemanticType.CELL)) {\n                row.childNodes = row.childNodes[0].childNodes;\n                row.childNodes.forEach(function (x) {\n                    x.parent = row;\n                });\n            }\n        }\n    }\n    static assignRoleToRow_(row, role) {\n        if (SemanticPred.isType(row, semantic_meaning_js_1.SemanticType.LINE)) {\n            row.role = role;\n            return;\n        }\n        if (SemanticPred.isType(row, semantic_meaning_js_1.SemanticType.ROW)) {\n            row.role = role;\n            row.childNodes.forEach(function (cell) {\n                if (SemanticPred.isType(cell, semantic_meaning_js_1.SemanticType.CELL)) {\n                    cell.role = role;\n                }\n            });\n        }\n    }\n    static nextSeparatorFunction_(separators) {\n        let sepList;\n        if (separators) {\n            if (separators.match(/^\\s+$/)) {\n                return null;\n            }\n            else {\n                sepList = separators\n                    .replace(/\\s/g, '')\n                    .split('')\n                    .filter(function (x) {\n                    return x;\n                });\n            }\n        }\n        else {\n            sepList = [','];\n        }\n        return function () {\n            if (sepList.length > 1) {\n                return sepList.shift();\n            }\n            return sepList[0];\n        };\n    }\n    static meaningFromContent(node, func) {\n        const content = [...node.textContent].filter((x) => x.match(/[^\\s]/));\n        const meaning = content.map((x) => semantic_attr_js_1.SemanticMap.Meaning.get(x));\n        func(node, content, meaning);\n    }\n    static numberRole_(node, content, meaning) {\n        if (node.role !== semantic_meaning_js_1.SemanticRole.UNKNOWN) {\n            return;\n        }\n        if (meaning.every(function (x) {\n            return ((x.type === semantic_meaning_js_1.SemanticType.NUMBER && x.role === semantic_meaning_js_1.SemanticRole.INTEGER) ||\n                (x.type === semantic_meaning_js_1.SemanticType.PUNCTUATION && x.role === semantic_meaning_js_1.SemanticRole.COMMA));\n        })) {\n            node.role = semantic_meaning_js_1.SemanticRole.INTEGER;\n            if (content[0] === '0') {\n                node.addAnnotation('general', 'basenumber');\n            }\n            return;\n        }\n        if (meaning.every(function (x) {\n            return ((x.type === semantic_meaning_js_1.SemanticType.NUMBER && x.role === semantic_meaning_js_1.SemanticRole.INTEGER) ||\n                x.type === semantic_meaning_js_1.SemanticType.PUNCTUATION);\n        })) {\n            node.role = semantic_meaning_js_1.SemanticRole.FLOAT;\n            return;\n        }\n        node.role = semantic_meaning_js_1.SemanticRole.OTHERNUMBER;\n    }\n    static exprFont_(node) {\n        if (node.font !== semantic_meaning_js_1.SemanticFont.UNKNOWN) {\n            return;\n        }\n        SemanticProcessor.compSemantics(node, 'font', semantic_meaning_js_1.SemanticFont);\n    }\n    static compSemantics(node, field, sem) {\n        const content = [...node.textContent];\n        const meaning = content.map((x) => semantic_attr_js_1.SemanticMap.Meaning.get(x));\n        const single = meaning.reduce(function (prev, curr) {\n            if (!prev ||\n                !curr[field] ||\n                curr[field] === sem.UNKNOWN ||\n                curr[field] === prev) {\n                return prev;\n            }\n            if (prev === sem.UNKNOWN) {\n                return curr[field];\n            }\n            return null;\n        }, sem.UNKNOWN);\n        if (single) {\n            node[field] = single;\n        }\n    }\n    static purgeFences_(partition) {\n        const rel = partition.rel;\n        const comp = partition.comp;\n        const newRel = [];\n        const newComp = [];\n        while (rel.length > 0) {\n            const currentRel = rel.shift();\n            let currentComp = comp.shift();\n            if (SemanticPred.isElligibleEmbellishedFence(currentRel)) {\n                newRel.push(currentRel);\n                newComp.push(currentComp);\n                continue;\n            }\n            SemanticProcessor.fenceToPunct_(currentRel);\n            currentComp.push(currentRel);\n            currentComp = currentComp.concat(comp.shift());\n            comp.unshift(currentComp);\n        }\n        newComp.push(comp.shift());\n        return { rel: newRel, comp: newComp };\n    }\n    static rewriteFencedNode_(fenced) {\n        const ofence = fenced.contentNodes[0];\n        const cfence = fenced.contentNodes[1];\n        let rewritten = SemanticProcessor.rewriteFence_(fenced, ofence);\n        fenced.contentNodes[0] = rewritten.fence;\n        rewritten = SemanticProcessor.rewriteFence_(rewritten.node, cfence);\n        fenced.contentNodes[1] = rewritten.fence;\n        fenced.contentNodes[0].parent = fenced;\n        fenced.contentNodes[1].parent = fenced;\n        rewritten.node.parent = null;\n        return rewritten.node;\n    }\n    static rewriteFence_(node, fence) {\n        if (!fence.embellished) {\n            return { node: node, fence: fence };\n        }\n        const newFence = fence.childNodes[0];\n        const rewritten = SemanticProcessor.rewriteFence_(node, newFence);\n        if (SemanticPred.isType(fence, semantic_meaning_js_1.SemanticType.SUPERSCRIPT) ||\n            SemanticPred.isType(fence, semantic_meaning_js_1.SemanticType.SUBSCRIPT) ||\n            SemanticPred.isType(fence, semantic_meaning_js_1.SemanticType.TENSOR)) {\n            if (!SemanticPred.isRole(fence, semantic_meaning_js_1.SemanticRole.SUBSUP)) {\n                fence.role = node.role;\n            }\n            if (newFence !== rewritten.node) {\n                fence.replaceChild(newFence, rewritten.node);\n                newFence.parent = node;\n            }\n            SemanticProcessor.propagateFencePointer_(fence, newFence);\n            return { node: fence, fence: rewritten.fence };\n        }\n        fence.replaceChild(newFence, rewritten.fence);\n        if (fence.mathmlTree && fence.mathml.indexOf(fence.mathmlTree) === -1) {\n            fence.mathml.push(fence.mathmlTree);\n        }\n        return { node: rewritten.node, fence: fence };\n    }\n    static propagateFencePointer_(oldNode, newNode) {\n        oldNode.fencePointer = newNode.fencePointer || newNode.id.toString();\n        oldNode.embellished = null;\n    }\n    static classifyByColumns_(table, columns, relation, alternatives = []) {\n        const relations = [relation].concat(alternatives);\n        const test1 = (x) => SemanticProcessor.isPureRelation_(x, relations);\n        const test2 = (x) => SemanticProcessor.isEndRelation_(x, relations) ||\n            SemanticProcessor.isPureRelation_(x, relations);\n        const test3 = (x) => SemanticProcessor.isEndRelation_(x, relations, true) ||\n            SemanticProcessor.isPureRelation_(x, relations);\n        if ((columns.length === 3 &&\n            SemanticProcessor.testColumns_(columns, 1, test1)) ||\n            (columns.length === 2 &&\n                (SemanticProcessor.testColumns_(columns, 1, test2) ||\n                    SemanticProcessor.testColumns_(columns, 0, test3)))) {\n            table.role = relation;\n            return true;\n        }\n        return false;\n    }\n    static isEndRelation_(node, relations, opt_right) {\n        const position = opt_right ? node.childNodes.length - 1 : 0;\n        return (SemanticPred.isType(node, semantic_meaning_js_1.SemanticType.RELSEQ) &&\n            relations.some((relation) => SemanticPred.isRole(node, relation)) &&\n            SemanticPred.isType(node.childNodes[position], semantic_meaning_js_1.SemanticType.EMPTY));\n    }\n    static isPureRelation_(node, relations) {\n        return (SemanticPred.isType(node, semantic_meaning_js_1.SemanticType.RELATION) &&\n            relations.some((relation) => SemanticPred.isRole(node, relation)));\n    }\n    static computeColumns_(table) {\n        const columns = [];\n        for (let i = 0, row; (row = table.childNodes[i]); i++) {\n            for (let j = 0, cell; (cell = row.childNodes[j]); j++) {\n                const column = columns[j];\n                column ? columns[j].push(cell) : (columns[j] = [cell]);\n            }\n        }\n        return columns;\n    }\n    static testColumns_(columns, index, pred) {\n        const column = columns[index];\n        return column\n            ? column.some(function (cell) {\n                return (cell.childNodes.length && pred(cell.childNodes[0]));\n            }) &&\n                column.every(function (cell) {\n                    return (!cell.childNodes.length ||\n                        pred(cell.childNodes[0]));\n                })\n            : false;\n    }\n    setNodeFactory(factory) {\n        SemanticProcessor.getInstance().factory_ = factory;\n        semantic_heuristic_factory_js_1.SemanticHeuristics.updateFactory(SemanticProcessor.getInstance().factory_);\n    }\n    getNodeFactory() {\n        return SemanticProcessor.getInstance().factory_;\n    }\n    identifierNode(leaf, font, unit) {\n        if (unit === 'MathML-Unit') {\n            leaf.type = semantic_meaning_js_1.SemanticType.IDENTIFIER;\n            leaf.role = semantic_meaning_js_1.SemanticRole.UNIT;\n        }\n        else if (!font &&\n            leaf.textContent.length === 1 &&\n            (leaf.role === semantic_meaning_js_1.SemanticRole.INTEGER ||\n                leaf.role === semantic_meaning_js_1.SemanticRole.LATINLETTER ||\n                leaf.role === semantic_meaning_js_1.SemanticRole.GREEKLETTER) &&\n            leaf.font === semantic_meaning_js_1.SemanticFont.NORMAL) {\n            leaf.font = semantic_meaning_js_1.SemanticFont.ITALIC;\n            return semantic_heuristic_factory_js_1.SemanticHeuristics.run('simpleNamedFunction', leaf);\n        }\n        if (leaf.type === semantic_meaning_js_1.SemanticType.UNKNOWN) {\n            leaf.type = semantic_meaning_js_1.SemanticType.IDENTIFIER;\n        }\n        SemanticProcessor.exprFont_(leaf);\n        return semantic_heuristic_factory_js_1.SemanticHeuristics.run('simpleNamedFunction', leaf);\n    }\n    implicitNode(nodes) {\n        nodes = SemanticProcessor.getInstance().getMixedNumbers_(nodes);\n        nodes = SemanticProcessor.getInstance().combineUnits_(nodes);\n        if (nodes.length === 1) {\n            return nodes[0];\n        }\n        const node = SemanticProcessor.getInstance().implicitNode_(nodes);\n        return semantic_heuristic_factory_js_1.SemanticHeuristics.run('combine_juxtaposition', node);\n    }\n    text(leaf, type) {\n        SemanticProcessor.exprFont_(leaf);\n        leaf.type = semantic_meaning_js_1.SemanticType.TEXT;\n        if (type === semantic_util_js_1.MMLTAGS.ANNOTATIONXML) {\n            leaf.role = semantic_meaning_js_1.SemanticRole.ANNOTATION;\n            return leaf;\n        }\n        if (type === semantic_util_js_1.MMLTAGS.MS) {\n            leaf.role = semantic_meaning_js_1.SemanticRole.STRING;\n            return leaf;\n        }\n        if (type === semantic_util_js_1.MMLTAGS.MSPACE || leaf.textContent.match(/^\\s*$/)) {\n            leaf.role = semantic_meaning_js_1.SemanticRole.SPACE;\n            return leaf;\n        }\n        if (/\\s/.exec(leaf.textContent)) {\n            leaf.role = semantic_meaning_js_1.SemanticRole.TEXT;\n            return leaf;\n        }\n        leaf.role = semantic_meaning_js_1.SemanticRole.UNKNOWN;\n        return leaf;\n    }\n    row(nodes) {\n        nodes = nodes.filter(function (x) {\n            return !SemanticPred.isType(x, semantic_meaning_js_1.SemanticType.EMPTY);\n        });\n        if (nodes.length === 0) {\n            return SemanticProcessor.getInstance().factory_.makeEmptyNode();\n        }\n        nodes = SemanticProcessor.getInstance().getFencesInRow_(nodes);\n        nodes = SemanticProcessor.getInstance().tablesInRow(nodes);\n        nodes = SemanticProcessor.getInstance().getPunctuationInRow_(nodes);\n        nodes = SemanticProcessor.getInstance().getTextInRow_(nodes);\n        nodes = SemanticProcessor.getInstance().getFunctionsInRow_(nodes);\n        return SemanticProcessor.getInstance().relationsInRow_(nodes);\n    }\n    limitNode(mmlTag, children) {\n        if (!children.length) {\n            return SemanticProcessor.getInstance().factory_.makeEmptyNode();\n        }\n        let center = children[0];\n        let type = semantic_meaning_js_1.SemanticType.UNKNOWN;\n        if (!children[1]) {\n            return center;\n        }\n        let result;\n        semantic_heuristic_factory_js_1.SemanticHeuristics.run('op_with_limits', children);\n        if (SemanticPred.isLimitBase(center)) {\n            result = SemanticProcessor.MML_TO_LIMIT_[mmlTag];\n            const length = result.length;\n            type = result.type;\n            children = children.slice(0, result.length + 1);\n            if ((length === 1 && SemanticPred.isAccent(children[1])) ||\n                (length === 2 &&\n                    SemanticPred.isAccent(children[1]) &&\n                    SemanticPred.isAccent(children[2]))) {\n                result = SemanticProcessor.MML_TO_BOUNDS_[mmlTag];\n                return SemanticProcessor.getInstance().accentNode_(center, children, result.type, result.length, result.accent);\n            }\n            if (length === 2) {\n                if (SemanticPred.isAccent(children[1])) {\n                    center = SemanticProcessor.getInstance().accentNode_(center, [center, children[1]], {\n                        MSUBSUP: semantic_meaning_js_1.SemanticType.SUBSCRIPT,\n                        MUNDEROVER: semantic_meaning_js_1.SemanticType.UNDERSCORE\n                    }[mmlTag], 1, true);\n                    return !children[2]\n                        ? center\n                        : SemanticProcessor.getInstance().makeLimitNode_(center, [center, children[2]], null, semantic_meaning_js_1.SemanticType.LIMUPPER);\n                }\n                if (children[2] && SemanticPred.isAccent(children[2])) {\n                    center = SemanticProcessor.getInstance().accentNode_(center, [center, children[2]], {\n                        MSUBSUP: semantic_meaning_js_1.SemanticType.SUPERSCRIPT,\n                        MUNDEROVER: semantic_meaning_js_1.SemanticType.OVERSCORE\n                    }[mmlTag], 1, true);\n                    return SemanticProcessor.getInstance().makeLimitNode_(center, [center, children[1]], null, semantic_meaning_js_1.SemanticType.LIMLOWER);\n                }\n                if (!children[length]) {\n                    type = semantic_meaning_js_1.SemanticType.LIMLOWER;\n                }\n            }\n            return SemanticProcessor.getInstance().makeLimitNode_(center, children, null, type);\n        }\n        result = SemanticProcessor.MML_TO_BOUNDS_[mmlTag];\n        return SemanticProcessor.getInstance().accentNode_(center, children, result.type, result.length, result.accent);\n    }\n    tablesInRow(nodes) {\n        let partition = SemanticUtil.partitionNodes(nodes, SemanticPred.tableIsMatrixOrVector);\n        let result = [];\n        for (let i = 0, matrix; (matrix = partition.rel[i]); i++) {\n            result = result.concat(partition.comp.shift());\n            result.push(SemanticProcessor.tableToMatrixOrVector_(matrix));\n        }\n        result = result.concat(partition.comp.shift());\n        partition = SemanticUtil.partitionNodes(result, SemanticPred.isTableOrMultiline);\n        result = [];\n        for (let i = 0, table; (table = partition.rel[i]); i++) {\n            const prevNodes = partition.comp.shift();\n            if (SemanticPred.tableIsCases(table, prevNodes)) {\n                SemanticProcessor.tableToCases_(table, prevNodes.pop());\n            }\n            result = result.concat(prevNodes);\n            result.push(table);\n        }\n        return result.concat(partition.comp.shift());\n    }\n    mfenced(open, close, sepValue, children) {\n        if (sepValue && children.length > 0) {\n            const separators = SemanticProcessor.nextSeparatorFunction_(sepValue);\n            const newChildren = [children.shift()];\n            children.forEach((child) => {\n                newChildren.push(SemanticProcessor.getInstance().factory_.makeContentNode(separators()));\n                newChildren.push(child);\n            });\n            children = newChildren;\n        }\n        if (open && close) {\n            return SemanticProcessor.getInstance().horizontalFencedNode_(SemanticProcessor.getInstance().factory_.makeContentNode(open), SemanticProcessor.getInstance().factory_.makeContentNode(close), children);\n        }\n        if (open) {\n            children.unshift(SemanticProcessor.getInstance().factory_.makeContentNode(open));\n        }\n        if (close) {\n            children.push(SemanticProcessor.getInstance().factory_.makeContentNode(close));\n        }\n        return SemanticProcessor.getInstance().row(children);\n    }\n    fractionLikeNode(denom, enume, linethickness, bevelled) {\n        let node;\n        if (!bevelled && SemanticUtil.isZeroLength(linethickness)) {\n            const child0 = SemanticProcessor.getInstance().factory_.makeBranchNode(semantic_meaning_js_1.SemanticType.LINE, [denom], []);\n            const child1 = SemanticProcessor.getInstance().factory_.makeBranchNode(semantic_meaning_js_1.SemanticType.LINE, [enume], []);\n            node = SemanticProcessor.getInstance().factory_.makeBranchNode(semantic_meaning_js_1.SemanticType.MULTILINE, [child0, child1], []);\n            SemanticProcessor.binomialForm_(node);\n            SemanticProcessor.classifyMultiline(node);\n            return node;\n        }\n        else {\n            node = SemanticProcessor.getInstance().fractionNode_(denom, enume);\n            if (bevelled) {\n                node.addAnnotation('general', 'bevelled');\n            }\n            return node;\n        }\n    }\n    tensor(base, lsub, lsup, rsub, rsup) {\n        const newNode = SemanticProcessor.getInstance().factory_.makeBranchNode(semantic_meaning_js_1.SemanticType.TENSOR, [\n            base,\n            SemanticProcessor.getInstance().scriptNode_(lsub, semantic_meaning_js_1.SemanticRole.LEFTSUB),\n            SemanticProcessor.getInstance().scriptNode_(lsup, semantic_meaning_js_1.SemanticRole.LEFTSUPER),\n            SemanticProcessor.getInstance().scriptNode_(rsub, semantic_meaning_js_1.SemanticRole.RIGHTSUB),\n            SemanticProcessor.getInstance().scriptNode_(rsup, semantic_meaning_js_1.SemanticRole.RIGHTSUPER)\n        ], []);\n        newNode.role = base.role;\n        newNode.embellished = SemanticPred.isEmbellished(base);\n        return newNode;\n    }\n    pseudoTensor(base, sub, sup) {\n        const isEmpty = (x) => !SemanticPred.isType(x, semantic_meaning_js_1.SemanticType.EMPTY);\n        const nonEmptySub = sub.filter(isEmpty).length;\n        const nonEmptySup = sup.filter(isEmpty).length;\n        if (!nonEmptySub && !nonEmptySup) {\n            return base;\n        }\n        const mmlTag = nonEmptySub\n            ? nonEmptySup\n                ? semantic_util_js_1.MMLTAGS.MSUBSUP\n                : semantic_util_js_1.MMLTAGS.MSUB\n            : semantic_util_js_1.MMLTAGS.MSUP;\n        const mmlchild = [base];\n        if (nonEmptySub) {\n            mmlchild.push(SemanticProcessor.getInstance().scriptNode_(sub, semantic_meaning_js_1.SemanticRole.RIGHTSUB, true));\n        }\n        if (nonEmptySup) {\n            mmlchild.push(SemanticProcessor.getInstance().scriptNode_(sup, semantic_meaning_js_1.SemanticRole.RIGHTSUPER, true));\n        }\n        return SemanticProcessor.getInstance().limitNode(mmlTag, mmlchild);\n    }\n    font(font) {\n        const mathjaxFont = SemanticProcessor.MATHJAX_FONTS[font];\n        return mathjaxFont ? mathjaxFont : font;\n    }\n    proof(node, semantics, parse) {\n        if (!semantics['inference'] && !semantics['axiom']) {\n            console.log('Noise');\n        }\n        if (semantics['axiom']) {\n            const cleaned = SemanticProcessor.getInstance().cleanInference(node.childNodes);\n            const axiom = cleaned.length\n                ? SemanticProcessor.getInstance().factory_.makeBranchNode(semantic_meaning_js_1.SemanticType.INFERENCE, parse(cleaned), [])\n                : SemanticProcessor.getInstance().factory_.makeEmptyNode();\n            axiom.role = semantic_meaning_js_1.SemanticRole.AXIOM;\n            axiom.mathmlTree = node;\n            return axiom;\n        }\n        const inference = SemanticProcessor.getInstance().inference(node, semantics, parse);\n        if (semantics['proof']) {\n            inference.role = semantic_meaning_js_1.SemanticRole.PROOF;\n            inference.childNodes[0].role = semantic_meaning_js_1.SemanticRole.FINAL;\n        }\n        return inference;\n    }\n    inference(node, semantics, parse) {\n        if (semantics['inferenceRule']) {\n            const formulas = SemanticProcessor.getInstance().getFormulas(node, [], parse);\n            const inference = SemanticProcessor.getInstance().factory_.makeBranchNode(semantic_meaning_js_1.SemanticType.INFERENCE, [formulas.conclusion, formulas.premises], []);\n            return inference;\n        }\n        const label = semantics['labelledRule'];\n        const children = DomUtil.toArray(node.childNodes);\n        const content = [];\n        if (label === 'left' || label === 'both') {\n            content.push(SemanticProcessor.getInstance().getLabel(node, children, parse, semantic_meaning_js_1.SemanticRole.LEFT));\n        }\n        if (label === 'right' || label === 'both') {\n            content.push(SemanticProcessor.getInstance().getLabel(node, children, parse, semantic_meaning_js_1.SemanticRole.RIGHT));\n        }\n        const formulas = SemanticProcessor.getInstance().getFormulas(node, children, parse);\n        const inference = SemanticProcessor.getInstance().factory_.makeBranchNode(semantic_meaning_js_1.SemanticType.INFERENCE, [formulas.conclusion, formulas.premises], content);\n        inference.mathmlTree = node;\n        return inference;\n    }\n    getLabel(_node, children, parse, side) {\n        const label = SemanticProcessor.getInstance().findNestedRow(children, 'prooflabel', side);\n        const sem = SemanticProcessor.getInstance().factory_.makeBranchNode(semantic_meaning_js_1.SemanticType.RULELABEL, parse(DomUtil.toArray(label.childNodes)), []);\n        sem.role = side;\n        sem.mathmlTree = label;\n        return sem;\n    }\n    getFormulas(node, children, parse) {\n        const inf = children.length\n            ? SemanticProcessor.getInstance().findNestedRow(children, 'inferenceRule')\n            : node;\n        const up = SemanticProcessor.getSemantics(inf)['inferenceRule'] === 'up';\n        const premRow = up ? inf.childNodes[1] : inf.childNodes[0];\n        const concRow = up ? inf.childNodes[0] : inf.childNodes[1];\n        const premTable = premRow.childNodes[0].childNodes[0];\n        const topRow = DomUtil.toArray(premTable.childNodes[0].childNodes);\n        const premNodes = [];\n        let i = 1;\n        for (const cell of topRow) {\n            if (i % 2) {\n                premNodes.push(cell.childNodes[0]);\n            }\n            i++;\n        }\n        const premises = parse(premNodes);\n        const conclusion = parse(DomUtil.toArray(concRow.childNodes[0].childNodes))[0];\n        const prem = SemanticProcessor.getInstance().factory_.makeBranchNode(semantic_meaning_js_1.SemanticType.PREMISES, premises, []);\n        prem.mathmlTree = premTable;\n        const conc = SemanticProcessor.getInstance().factory_.makeBranchNode(semantic_meaning_js_1.SemanticType.CONCLUSION, [conclusion], []);\n        conc.mathmlTree = concRow.childNodes[0].childNodes[0];\n        return { conclusion: conc, premises: prem };\n    }\n    findNestedRow(nodes, semantic, opt_value) {\n        return SemanticProcessor.getInstance().findNestedRow_(nodes, semantic, 0, opt_value);\n    }\n    cleanInference(nodes) {\n        return DomUtil.toArray(nodes).filter(function (x) {\n            return DomUtil.tagName(x) !== 'MSPACE';\n        });\n    }\n    operatorNode(node) {\n        if (node.type === semantic_meaning_js_1.SemanticType.UNKNOWN) {\n            node.type = semantic_meaning_js_1.SemanticType.OPERATOR;\n        }\n        return semantic_heuristic_factory_js_1.SemanticHeuristics.run('multioperator', node);\n    }\n    constructor() {\n        this.funcAppls = {};\n        this.splitRoles = new Map([\n            [semantic_meaning_js_1.SemanticRole.SUBTRACTION, semantic_meaning_js_1.SemanticRole.NEGATIVE],\n            [semantic_meaning_js_1.SemanticRole.ADDITION, semantic_meaning_js_1.SemanticRole.POSITIVE]\n        ]);\n        this.splitOps = ['−', '-', '‐', '‑', '+'];\n        this.factory_ = new semantic_node_factory_js_1.SemanticNodeFactory();\n        semantic_heuristic_factory_js_1.SemanticHeuristics.updateFactory(this.factory_);\n    }\n    implicitNode_(nodes) {\n        const operators = SemanticProcessor.getInstance().factory_.makeMultipleContentNodes(nodes.length - 1, semantic_attr_js_1.NamedSymbol.invisibleTimes);\n        SemanticProcessor.matchSpaces_(nodes, operators);\n        const newNode = SemanticProcessor.getInstance().infixNode_(nodes, operators[0]);\n        newNode.role = semantic_meaning_js_1.SemanticRole.IMPLICIT;\n        operators.forEach(function (op) {\n            op.parent = newNode;\n        });\n        newNode.contentNodes = operators;\n        return newNode;\n    }\n    infixNode_(children, opNode) {\n        const node = SemanticProcessor.getInstance().factory_.makeBranchNode(semantic_meaning_js_1.SemanticType.INFIXOP, children, [opNode], SemanticUtil.getEmbellishedInner(opNode).textContent);\n        node.role = opNode.role;\n        return semantic_heuristic_factory_js_1.SemanticHeuristics.run('propagateSimpleFunction', node);\n    }\n    explicitMixed_(nodes) {\n        const partition = SemanticUtil.partitionNodes(nodes, function (x) {\n            return x.textContent === semantic_attr_js_1.NamedSymbol.invisiblePlus;\n        });\n        if (!partition.rel.length) {\n            return nodes;\n        }\n        let result = [];\n        for (let i = 0, rel; (rel = partition.rel[i]); i++) {\n            const prev = partition.comp[i];\n            const next = partition.comp[i + 1];\n            const last = prev.length - 1;\n            if (prev[last] &&\n                next[0] &&\n                SemanticPred.isType(prev[last], semantic_meaning_js_1.SemanticType.NUMBER) &&\n                !SemanticPred.isRole(prev[last], semantic_meaning_js_1.SemanticRole.MIXED) &&\n                SemanticPred.isType(next[0], semantic_meaning_js_1.SemanticType.FRACTION)) {\n                const newNode = SemanticProcessor.getInstance().factory_.makeBranchNode(semantic_meaning_js_1.SemanticType.NUMBER, [prev[last], next[0]], []);\n                newNode.role = semantic_meaning_js_1.SemanticRole.MIXED;\n                result = result.concat(prev.slice(0, last));\n                result.push(newNode);\n                next.shift();\n            }\n            else {\n                result = result.concat(prev);\n                result.push(rel);\n            }\n        }\n        return result.concat(partition.comp[partition.comp.length - 1]);\n    }\n    concatNode_(inner, nodeList, type) {\n        if (nodeList.length === 0) {\n            return inner;\n        }\n        const content = nodeList\n            .map(function (x) {\n            return SemanticUtil.getEmbellishedInner(x).textContent;\n        })\n            .join(' ');\n        const newNode = SemanticProcessor.getInstance().factory_.makeBranchNode(type, [inner], nodeList, content);\n        if (nodeList.length > 1) {\n            newNode.role = semantic_meaning_js_1.SemanticRole.MULTIOP;\n        }\n        return newNode;\n    }\n    prefixNode_(node, prefixes) {\n        const newPrefixes = this.splitSingles(prefixes);\n        let newNode = node;\n        while (newPrefixes.length > 0) {\n            const op = newPrefixes.pop();\n            newNode = SemanticProcessor.getInstance().concatNode_(newNode, op, semantic_meaning_js_1.SemanticType.PREFIXOP);\n            if (op.length === 1 && this.splitOps.indexOf(op[0].textContent) !== -1) {\n                newNode.role = this.splitRoles.get(op[0].role);\n            }\n        }\n        return newNode;\n    }\n    splitSingles(prefixes) {\n        let lastOp = 0;\n        const result = [];\n        let i = 0;\n        while (i < prefixes.length) {\n            const op = prefixes[i];\n            if (this.splitRoles.has(op.role) &&\n                (!prefixes[i - 1] || prefixes[i - 1].role !== op.role) &&\n                (!prefixes[i + 1] || prefixes[i + 1].role !== op.role) &&\n                this.splitOps.indexOf(op.textContent) !== -1) {\n                result.push(prefixes.slice(lastOp, i));\n                result.push(prefixes.slice(i, i + 1));\n                lastOp = i + 1;\n            }\n            i++;\n        }\n        if (lastOp < i) {\n            result.push(prefixes.slice(lastOp, i));\n        }\n        return result;\n    }\n    postfixNode_(node, postfixes) {\n        if (!postfixes.length) {\n            return node;\n        }\n        return SemanticProcessor.getInstance().concatNode_(node, postfixes, semantic_meaning_js_1.SemanticType.POSTFIXOP);\n    }\n    combineUnits_(nodes) {\n        const partition = SemanticUtil.partitionNodes(nodes, function (x) {\n            return !SemanticPred.isRole(x, semantic_meaning_js_1.SemanticRole.UNIT);\n        });\n        if (nodes.length === partition.rel.length) {\n            return partition.rel;\n        }\n        const result = [];\n        let rel;\n        let last;\n        do {\n            const comp = partition.comp.shift();\n            rel = partition.rel.shift();\n            let unitNode = null;\n            last = result.pop();\n            if (last) {\n                if (!comp.length || !SemanticPred.isUnitCounter(last)) {\n                    result.push(last);\n                }\n                else {\n                    comp.unshift(last);\n                }\n            }\n            if (comp.length === 1) {\n                unitNode = comp.pop();\n            }\n            if (comp.length > 1) {\n                unitNode = SemanticProcessor.getInstance().implicitNode_(comp);\n                unitNode.role = semantic_meaning_js_1.SemanticRole.UNIT;\n            }\n            if (unitNode) {\n                result.push(unitNode);\n            }\n            if (rel) {\n                result.push(rel);\n            }\n        } while (rel);\n        return result;\n    }\n    getMixedNumbers_(nodes) {\n        const partition = SemanticUtil.partitionNodes(nodes, function (x) {\n            return (SemanticPred.isType(x, semantic_meaning_js_1.SemanticType.FRACTION) &&\n                SemanticPred.isRole(x, semantic_meaning_js_1.SemanticRole.VULGAR));\n        });\n        if (!partition.rel.length) {\n            return nodes;\n        }\n        let result = [];\n        for (let i = 0, rel; (rel = partition.rel[i]); i++) {\n            const comp = partition.comp[i];\n            const last = comp.length - 1;\n            if (comp[last] &&\n                SemanticPred.isType(comp[last], semantic_meaning_js_1.SemanticType.NUMBER) &&\n                (SemanticPred.isRole(comp[last], semantic_meaning_js_1.SemanticRole.INTEGER) ||\n                    SemanticPred.isRole(comp[last], semantic_meaning_js_1.SemanticRole.FLOAT))) {\n                const newNode = SemanticProcessor.getInstance().factory_.makeBranchNode(semantic_meaning_js_1.SemanticType.NUMBER, [comp[last], rel], []);\n                newNode.role = semantic_meaning_js_1.SemanticRole.MIXED;\n                result = result.concat(comp.slice(0, last));\n                result.push(newNode);\n            }\n            else {\n                result = result.concat(comp);\n                result.push(rel);\n            }\n        }\n        return result.concat(partition.comp[partition.comp.length - 1]);\n    }\n    getTextInRow_(nodes) {\n        if (nodes.length === 0) {\n            return nodes;\n        }\n        if (nodes.length === 1) {\n            if (nodes[0].type === semantic_meaning_js_1.SemanticType.TEXT &&\n                nodes[0].role === semantic_meaning_js_1.SemanticRole.UNKNOWN) {\n                nodes[0].role = semantic_meaning_js_1.SemanticRole.ANNOTATION;\n            }\n            return nodes;\n        }\n        const { rel: rel, comp: comp } = SemanticUtil.partitionNodes(nodes, (x) => SemanticPred.isType(x, semantic_meaning_js_1.SemanticType.TEXT));\n        if (rel.length === 0) {\n            return nodes;\n        }\n        const result = [];\n        let prevComp = comp.shift();\n        while (rel.length > 0) {\n            let currentRel = rel.shift();\n            let nextComp = comp.shift();\n            const text = [];\n            while (!nextComp.length &&\n                rel.length &&\n                currentRel.role !== semantic_meaning_js_1.SemanticRole.SPACE &&\n                rel[0].role !== semantic_meaning_js_1.SemanticRole.SPACE) {\n                text.push(currentRel);\n                currentRel = rel.shift();\n                nextComp = comp.shift();\n            }\n            if (text.length) {\n                if (prevComp.length) {\n                    result.push(SemanticProcessor.getInstance().row(prevComp));\n                }\n                text.push(currentRel);\n                const dummy = SemanticProcessor.getInstance().dummyNode_(text);\n                result.push(dummy);\n                prevComp = nextComp;\n                continue;\n            }\n            if (currentRel.role !== semantic_meaning_js_1.SemanticRole.UNKNOWN) {\n                if (prevComp.length) {\n                    result.push(SemanticProcessor.getInstance().row(prevComp));\n                }\n                result.push(currentRel);\n                prevComp = nextComp;\n                continue;\n            }\n            const meaning = semantic_attr_js_1.SemanticMap.Meaning.get(currentRel.textContent);\n            if (meaning.type === semantic_meaning_js_1.SemanticType.PUNCTUATION) {\n                currentRel.role = meaning.role;\n                currentRel.font = meaning.font;\n                if (prevComp.length) {\n                    result.push(SemanticProcessor.getInstance().row(prevComp));\n                }\n                result.push(currentRel);\n                prevComp = nextComp;\n                continue;\n            }\n            if (meaning.type !== semantic_meaning_js_1.SemanticType.UNKNOWN) {\n                currentRel.type = meaning.type;\n                currentRel.role = meaning.role;\n                currentRel.font = meaning.font;\n                currentRel.addAnnotation('general', 'text');\n                prevComp.push(currentRel);\n                prevComp = prevComp.concat(nextComp);\n                continue;\n            }\n            SemanticProcessor.meaningFromContent(currentRel, (n, c, m) => {\n                if (n.role !== semantic_meaning_js_1.SemanticRole.UNKNOWN) {\n                    return;\n                }\n                SemanticProcessor.numberRole_(n, c, m);\n                if (n.role !== semantic_meaning_js_1.SemanticRole.OTHERNUMBER) {\n                    n.type = semantic_meaning_js_1.SemanticType.NUMBER;\n                    return;\n                }\n                if (m.some((x) => x.type !== semantic_meaning_js_1.SemanticType.NUMBER &&\n                    x.type !== semantic_meaning_js_1.SemanticType.IDENTIFIER)) {\n                    n.type = semantic_meaning_js_1.SemanticType.TEXT;\n                    n.role = semantic_meaning_js_1.SemanticRole.ANNOTATION;\n                    return;\n                }\n                n.role = semantic_meaning_js_1.SemanticRole.UNKNOWN;\n            });\n            if (currentRel.type === semantic_meaning_js_1.SemanticType.TEXT &&\n                currentRel.role !== semantic_meaning_js_1.SemanticRole.UNKNOWN) {\n                if (prevComp.length) {\n                    result.push(SemanticProcessor.getInstance().row(prevComp));\n                }\n                result.push(currentRel);\n                prevComp = nextComp;\n                continue;\n            }\n            if (currentRel.role === semantic_meaning_js_1.SemanticRole.UNKNOWN) {\n                if (rel.length || nextComp.length) {\n                    if (nextComp.length && nextComp[0].type === semantic_meaning_js_1.SemanticType.FENCED) {\n                        currentRel.type = semantic_meaning_js_1.SemanticType.FUNCTION;\n                        currentRel.role = semantic_meaning_js_1.SemanticRole.PREFIXFUNC;\n                    }\n                    else {\n                        currentRel.role = semantic_meaning_js_1.SemanticRole.TEXT;\n                    }\n                }\n                else {\n                    currentRel.type = semantic_meaning_js_1.SemanticType.IDENTIFIER;\n                    currentRel.role = semantic_meaning_js_1.SemanticRole.UNIT;\n                }\n            }\n            prevComp.push(currentRel);\n            prevComp = prevComp.concat(nextComp);\n        }\n        if (prevComp.length > 0) {\n            result.push(SemanticProcessor.getInstance().row(prevComp));\n        }\n        return result.length > 1\n            ? [SemanticProcessor.getInstance().dummyNode_(result)]\n            : result;\n    }\n    relationsInRow_(nodes) {\n        const partition = SemanticUtil.partitionNodes(nodes, SemanticPred.isRelation);\n        const firstRel = partition.rel[0];\n        if (!firstRel) {\n            return SemanticProcessor.getInstance().operationsInRow_(nodes);\n        }\n        if (nodes.length === 1) {\n            return nodes[0];\n        }\n        const children = partition.comp.map(SemanticProcessor.getInstance().operationsInRow_);\n        let node;\n        if (partition.rel.some(function (x) {\n            return !x.equals(firstRel);\n        })) {\n            node = SemanticProcessor.getInstance().factory_.makeBranchNode(semantic_meaning_js_1.SemanticType.MULTIREL, children, partition.rel);\n            if (partition.rel.every(function (x) {\n                return x.role === firstRel.role;\n            })) {\n                node.role = firstRel.role;\n            }\n            return node;\n        }\n        node = SemanticProcessor.getInstance().factory_.makeBranchNode(semantic_meaning_js_1.SemanticType.RELSEQ, children, partition.rel, SemanticUtil.getEmbellishedInner(firstRel).textContent);\n        node.role = firstRel.role;\n        return node;\n    }\n    operationsInRow_(nodes) {\n        if (nodes.length === 0) {\n            return SemanticProcessor.getInstance().factory_.makeEmptyNode();\n        }\n        nodes = SemanticProcessor.getInstance().explicitMixed_(nodes);\n        if (nodes.length === 1) {\n            return nodes[0];\n        }\n        const prefix = [];\n        while (nodes.length > 0 && SemanticPred.isOperator(nodes[0])) {\n            prefix.push(nodes.shift());\n        }\n        if (nodes.length === 0) {\n            return SemanticProcessor.getInstance().prefixNode_(prefix.pop(), prefix);\n        }\n        if (nodes.length === 1) {\n            return SemanticProcessor.getInstance().prefixNode_(nodes[0], prefix);\n        }\n        nodes = semantic_heuristic_factory_js_1.SemanticHeuristics.run('convert_juxtaposition', nodes);\n        const split = SemanticUtil.sliceNodes(nodes, SemanticPred.isOperator);\n        const node = SemanticProcessor.getInstance().wrapFactor(prefix, split);\n        return SemanticProcessor.getInstance().addFactor(node, split);\n    }\n    wrapPostfix(split) {\n        var _a;\n        if (((_a = split.div) === null || _a === void 0 ? void 0 : _a.role) === semantic_meaning_js_1.SemanticRole.POSTFIXOP) {\n            if (!split.tail.length || split.tail[0].type === semantic_meaning_js_1.SemanticType.OPERATOR) {\n                split.head = [\n                    SemanticProcessor.getInstance().postfixNode_(SemanticProcessor.getInstance().implicitNode(split.head), [split.div])\n                ];\n                split.div = split.tail.shift();\n                SemanticProcessor.getInstance().wrapPostfix(split);\n            }\n            else {\n                split.div.role = semantic_meaning_js_1.SemanticRole.DIVISION;\n            }\n        }\n    }\n    wrapFactor(prefix, split) {\n        SemanticProcessor.getInstance().wrapPostfix(split);\n        return SemanticProcessor.getInstance().prefixNode_(SemanticProcessor.getInstance().implicitNode(split.head), prefix);\n    }\n    addFactor(node, split) {\n        if (!split.div) {\n            if (SemanticPred.isUnitProduct(node)) {\n                node.role = semantic_meaning_js_1.SemanticRole.UNIT;\n            }\n            return node;\n        }\n        return SemanticProcessor.getInstance().operationsTree_(split.tail, node, split.div);\n    }\n    operationsTree_(nodes, root, lastop, prefix = []) {\n        if (nodes.length === 0) {\n            prefix.unshift(lastop);\n            if (root.type === semantic_meaning_js_1.SemanticType.INFIXOP) {\n                const node = SemanticProcessor.getInstance().postfixNode_(root.childNodes.pop(), prefix);\n                root.appendChild(node);\n                return root;\n            }\n            return SemanticProcessor.getInstance().postfixNode_(root, prefix);\n        }\n        const split = SemanticUtil.sliceNodes(nodes, SemanticPred.isOperator);\n        if (split.head.length === 0) {\n            prefix.push(split.div);\n            return SemanticProcessor.getInstance().operationsTree_(split.tail, root, lastop, prefix);\n        }\n        const node = SemanticProcessor.getInstance().wrapFactor(prefix, split);\n        const newNode = SemanticProcessor.getInstance().appendOperand_(root, lastop, node);\n        return SemanticProcessor.getInstance().addFactor(newNode, split);\n    }\n    appendOperand_(root, op, node) {\n        if (root.type !== semantic_meaning_js_1.SemanticType.INFIXOP) {\n            return SemanticProcessor.getInstance().infixNode_([root, node], op);\n        }\n        const division = SemanticProcessor.getInstance().appendDivisionOp_(root, op, node);\n        if (division) {\n            return division;\n        }\n        if (SemanticProcessor.getInstance().appendExistingOperator_(root, op, node)) {\n            return root;\n        }\n        return op.role === semantic_meaning_js_1.SemanticRole.MULTIPLICATION\n            ? SemanticProcessor.getInstance().appendMultiplicativeOp_(root, op, node)\n            : SemanticProcessor.getInstance().appendAdditiveOp_(root, op, node);\n    }\n    appendDivisionOp_(root, op, node) {\n        if (op.role === semantic_meaning_js_1.SemanticRole.DIVISION) {\n            if (SemanticPred.isImplicit(root)) {\n                return SemanticProcessor.getInstance().infixNode_([root, node], op);\n            }\n            return SemanticProcessor.getInstance().appendLastOperand_(root, op, node);\n        }\n        return root.role === semantic_meaning_js_1.SemanticRole.DIVISION\n            ? SemanticProcessor.getInstance().infixNode_([root, node], op)\n            : null;\n    }\n    appendLastOperand_(root, op, node) {\n        let lastRoot = root;\n        let lastChild = root.childNodes[root.childNodes.length - 1];\n        while (lastChild &&\n            lastChild.type === semantic_meaning_js_1.SemanticType.INFIXOP &&\n            !SemanticPred.isImplicit(lastChild)) {\n            lastRoot = lastChild;\n            lastChild = lastRoot.childNodes[root.childNodes.length - 1];\n        }\n        const newNode = SemanticProcessor.getInstance().infixNode_([lastRoot.childNodes.pop(), node], op);\n        lastRoot.appendChild(newNode);\n        return root;\n    }\n    appendMultiplicativeOp_(root, op, node) {\n        if (SemanticPred.isImplicit(root)) {\n            return SemanticProcessor.getInstance().infixNode_([root, node], op);\n        }\n        let lastRoot = root;\n        let lastChild = root.childNodes[root.childNodes.length - 1];\n        while (lastChild &&\n            lastChild.type === semantic_meaning_js_1.SemanticType.INFIXOP &&\n            !SemanticPred.isImplicit(lastChild)) {\n            lastRoot = lastChild;\n            lastChild = lastRoot.childNodes[root.childNodes.length - 1];\n        }\n        const newNode = SemanticProcessor.getInstance().infixNode_([lastRoot.childNodes.pop(), node], op);\n        lastRoot.appendChild(newNode);\n        return root;\n    }\n    appendAdditiveOp_(root, op, node) {\n        return SemanticProcessor.getInstance().infixNode_([root, node], op);\n    }\n    appendExistingOperator_(root, op, node) {\n        if (!root ||\n            root.type !== semantic_meaning_js_1.SemanticType.INFIXOP ||\n            SemanticPred.isImplicit(root)) {\n            return false;\n        }\n        if (root.contentNodes[0].equals(op)) {\n            root.appendContentNode(op);\n            root.appendChild(node);\n            return true;\n        }\n        return SemanticProcessor.getInstance().appendExistingOperator_(root.childNodes[root.childNodes.length - 1], op, node);\n    }\n    getFencesInRow_(nodes) {\n        let partition = SemanticUtil.partitionNodes(nodes, SemanticPred.isFence);\n        partition = SemanticProcessor.purgeFences_(partition);\n        const felem = partition.comp.shift();\n        return SemanticProcessor.getInstance().fences_(partition.rel, partition.comp, [], [felem]);\n    }\n    fences_(fences, content, openStack, contentStack) {\n        if (fences.length === 0 && openStack.length === 0) {\n            return contentStack[0];\n        }\n        const interval = semantic_heuristic_factory_js_1.SemanticHeuristics.run('bracketed_interval', [fences[0], fences[1], ...(content[0] || [])], () => null);\n        if (interval) {\n            fences.shift();\n            fences.shift();\n            content.shift();\n            const stack = contentStack.pop() || [];\n            contentStack.push([...stack, interval, ...content.shift()]);\n            return SemanticProcessor.getInstance().fences_(fences, content, openStack, contentStack);\n        }\n        const openPred = (x) => SemanticPred.isRole(x, semantic_meaning_js_1.SemanticRole.OPEN);\n        if (fences.length === 0) {\n            const result = contentStack.shift();\n            while (openStack.length > 0) {\n                if (openPred(openStack[0])) {\n                    const firstOpen = openStack.shift();\n                    SemanticProcessor.fenceToPunct_(firstOpen);\n                    result.push(firstOpen);\n                }\n                else {\n                    const split = SemanticUtil.sliceNodes(openStack, openPred);\n                    const cutLength = split.head.length - 1;\n                    const innerNodes = SemanticProcessor.getInstance().neutralFences_(split.head, contentStack.slice(0, cutLength));\n                    contentStack = contentStack.slice(cutLength);\n                    result.push(...innerNodes);\n                    if (split.div) {\n                        split.tail.unshift(split.div);\n                    }\n                    openStack = split.tail;\n                }\n                result.push(...contentStack.shift());\n            }\n            return result;\n        }\n        const lastOpen = openStack[openStack.length - 1];\n        const firstRole = fences[0].role;\n        if (firstRole === semantic_meaning_js_1.SemanticRole.OPEN ||\n            (SemanticPred.isNeutralFence(fences[0]) &&\n                !(lastOpen && SemanticPred.compareNeutralFences(fences[0], lastOpen)))) {\n            openStack.push(fences.shift());\n            const cont = content.shift();\n            if (cont) {\n                contentStack.push(cont);\n            }\n            return SemanticProcessor.getInstance().fences_(fences, content, openStack, contentStack);\n        }\n        if (lastOpen &&\n            firstRole === semantic_meaning_js_1.SemanticRole.CLOSE &&\n            lastOpen.role === semantic_meaning_js_1.SemanticRole.OPEN) {\n            const fenced = SemanticProcessor.getInstance().horizontalFencedNode_(openStack.pop(), fences.shift(), contentStack.pop());\n            contentStack.push(contentStack.pop().concat([fenced], content.shift()));\n            return SemanticProcessor.getInstance().fences_(fences, content, openStack, contentStack);\n        }\n        if (lastOpen &&\n            SemanticPred.compareNeutralFences(fences[0], lastOpen)) {\n            if (!SemanticPred.elligibleLeftNeutral(lastOpen) ||\n                !SemanticPred.elligibleRightNeutral(fences[0])) {\n                openStack.push(fences.shift());\n                const cont = content.shift();\n                if (cont) {\n                    contentStack.push(cont);\n                }\n                return SemanticProcessor.getInstance().fences_(fences, content, openStack, contentStack);\n            }\n            const fenced = SemanticProcessor.getInstance().horizontalFencedNode_(openStack.pop(), fences.shift(), contentStack.pop());\n            contentStack.push(contentStack.pop().concat([fenced], content.shift()));\n            return SemanticProcessor.getInstance().fences_(fences, content, openStack, contentStack);\n        }\n        if (lastOpen &&\n            firstRole === semantic_meaning_js_1.SemanticRole.CLOSE &&\n            SemanticPred.isNeutralFence(lastOpen) &&\n            openStack.some(openPred)) {\n            const split = SemanticUtil.sliceNodes(openStack, openPred, true);\n            const rightContent = contentStack.pop();\n            const cutLength = contentStack.length - split.tail.length + 1;\n            const innerNodes = SemanticProcessor.getInstance().neutralFences_(split.tail, contentStack.slice(cutLength));\n            contentStack = contentStack.slice(0, cutLength);\n            const fenced = SemanticProcessor.getInstance().horizontalFencedNode_(split.div, fences.shift(), contentStack.pop().concat(innerNodes, rightContent));\n            contentStack.push(contentStack.pop().concat([fenced], content.shift()));\n            return SemanticProcessor.getInstance().fences_(fences, content, split.head, contentStack);\n        }\n        const fenced = fences.shift();\n        SemanticProcessor.fenceToPunct_(fenced);\n        contentStack.push(contentStack.pop().concat([fenced], content.shift()));\n        return SemanticProcessor.getInstance().fences_(fences, content, openStack, contentStack);\n    }\n    neutralFences_(fences, content) {\n        if (fences.length === 0) {\n            return fences;\n        }\n        if (fences.length === 1) {\n            SemanticProcessor.fenceToPunct_(fences[0]);\n            return fences;\n        }\n        const firstFence = fences.shift();\n        if (!SemanticPred.elligibleLeftNeutral(firstFence)) {\n            SemanticProcessor.fenceToPunct_(firstFence);\n            const restContent = content.shift();\n            restContent.unshift(firstFence);\n            return restContent.concat(SemanticProcessor.getInstance().neutralFences_(fences, content));\n        }\n        const split = SemanticUtil.sliceNodes(fences, function (x) {\n            return SemanticPred.compareNeutralFences(x, firstFence);\n        });\n        if (!split.div) {\n            SemanticProcessor.fenceToPunct_(firstFence);\n            const restContent = content.shift();\n            restContent.unshift(firstFence);\n            return restContent.concat(SemanticProcessor.getInstance().neutralFences_(fences, content));\n        }\n        if (!SemanticPred.elligibleRightNeutral(split.div)) {\n            SemanticProcessor.fenceToPunct_(split.div);\n            fences.unshift(firstFence);\n            return SemanticProcessor.getInstance().neutralFences_(fences, content);\n        }\n        const newContent = SemanticProcessor.getInstance().combineFencedContent_(firstFence, split.div, split.head, content);\n        if (split.tail.length > 0) {\n            const leftContent = newContent.shift();\n            const result = SemanticProcessor.getInstance().neutralFences_(split.tail, newContent);\n            return leftContent.concat(result);\n        }\n        return newContent[0];\n    }\n    combineFencedContent_(leftFence, rightFence, midFences, content) {\n        if (midFences.length === 0) {\n            const fenced = SemanticProcessor.getInstance().horizontalFencedNode_(leftFence, rightFence, content.shift());\n            if (content.length > 0) {\n                content[0].unshift(fenced);\n            }\n            else {\n                content = [[fenced]];\n            }\n            return content;\n        }\n        const leftContent = content.shift();\n        const cutLength = midFences.length - 1;\n        const midContent = content.slice(0, cutLength);\n        content = content.slice(cutLength);\n        const rightContent = content.shift();\n        const innerNodes = SemanticProcessor.getInstance().neutralFences_(midFences, midContent);\n        leftContent.push(...innerNodes);\n        leftContent.push(...rightContent);\n        const fenced = SemanticProcessor.getInstance().horizontalFencedNode_(leftFence, rightFence, leftContent);\n        if (content.length > 0) {\n            content[0].unshift(fenced);\n        }\n        else {\n            content = [[fenced]];\n        }\n        return content;\n    }\n    horizontalFencedNode_(ofence, cfence, content) {\n        const childNode = SemanticProcessor.getInstance().row(content);\n        let newNode = SemanticProcessor.getInstance().factory_.makeBranchNode(semantic_meaning_js_1.SemanticType.FENCED, [childNode], [ofence, cfence]);\n        if (ofence.role === semantic_meaning_js_1.SemanticRole.OPEN) {\n            SemanticProcessor.getInstance().classifyHorizontalFence_(newNode);\n            newNode = semantic_heuristic_factory_js_1.SemanticHeuristics.run('propagateComposedFunction', newNode);\n        }\n        else {\n            newNode.role = ofence.role;\n        }\n        newNode = semantic_heuristic_factory_js_1.SemanticHeuristics.run('detect_cycle', newNode);\n        return SemanticProcessor.rewriteFencedNode_(newNode);\n    }\n    classifyHorizontalFence_(node) {\n        node.role = semantic_meaning_js_1.SemanticRole.LEFTRIGHT;\n        const children = node.childNodes;\n        if (!SemanticPred.isSetNode(node) || children.length > 1) {\n            return;\n        }\n        if (children.length === 0 || children[0].type === semantic_meaning_js_1.SemanticType.EMPTY) {\n            node.role = semantic_meaning_js_1.SemanticRole.SETEMPTY;\n            return;\n        }\n        const type = children[0].type;\n        if (children.length === 1 &&\n            SemanticPred.isSingletonSetContent(children[0])) {\n            node.role = semantic_meaning_js_1.SemanticRole.SETSINGLE;\n            return;\n        }\n        const role = children[0].role;\n        if (type !== semantic_meaning_js_1.SemanticType.PUNCTUATED || role !== semantic_meaning_js_1.SemanticRole.SEQUENCE) {\n            return;\n        }\n        if (children[0].contentNodes[0].role === semantic_meaning_js_1.SemanticRole.COMMA) {\n            node.role = semantic_meaning_js_1.SemanticRole.SETCOLLECT;\n            return;\n        }\n        if (children[0].contentNodes.length === 1 &&\n            (children[0].contentNodes[0].role === semantic_meaning_js_1.SemanticRole.VBAR ||\n                children[0].contentNodes[0].role === semantic_meaning_js_1.SemanticRole.COLON)) {\n            node.role = semantic_meaning_js_1.SemanticRole.SETEXT;\n            SemanticProcessor.getInstance().setExtension_(node);\n            return;\n        }\n    }\n    setExtension_(set) {\n        const extender = set.childNodes[0].childNodes[0];\n        if (extender &&\n            extender.type === semantic_meaning_js_1.SemanticType.INFIXOP &&\n            extender.contentNodes.length === 1 &&\n            SemanticPred.isMembership(extender.contentNodes[0])) {\n            extender.addAnnotation('set', 'intensional');\n            extender.contentNodes[0].addAnnotation('set', 'intensional');\n        }\n    }\n    getPunctuationInRow_(nodes) {\n        if (nodes.length <= 1) {\n            return nodes;\n        }\n        const allowedType = (x) => {\n            const type = x.type;\n            return (type === 'punctuation' ||\n                type === 'text' ||\n                type === 'operator' ||\n                type === 'relation');\n        };\n        const partition = SemanticUtil.partitionNodes(nodes, function (x) {\n            if (!SemanticPred.isPunctuation(x)) {\n                return false;\n            }\n            if (SemanticPred.isPunctuation(x) &&\n                !SemanticPred.isRole(x, semantic_meaning_js_1.SemanticRole.ELLIPSIS)) {\n                return true;\n            }\n            const index = nodes.indexOf(x);\n            if (index === 0) {\n                if (nodes[1] && allowedType(nodes[1])) {\n                    return false;\n                }\n                return true;\n            }\n            const prev = nodes[index - 1];\n            if (index === nodes.length - 1) {\n                if (allowedType(prev)) {\n                    return false;\n                }\n                return true;\n            }\n            const next = nodes[index + 1];\n            if (allowedType(prev) && allowedType(next)) {\n                return false;\n            }\n            return true;\n        });\n        if (partition.rel.length === 0) {\n            return nodes;\n        }\n        let newNodes = [];\n        let firstComp = partition.comp.shift();\n        if (firstComp.length > 0) {\n            newNodes.push(SemanticProcessor.getInstance().row(firstComp));\n        }\n        let relCounter = 0;\n        while (partition.comp.length > 0) {\n            let puncts = [];\n            const saveCount = relCounter;\n            do {\n                puncts.push(partition.rel[relCounter++]);\n                firstComp = partition.comp.shift();\n            } while (partition.rel[relCounter] &&\n                firstComp &&\n                firstComp.length === 0);\n            puncts = semantic_heuristic_factory_js_1.SemanticHeuristics.run('ellipses', puncts);\n            partition.rel.splice(saveCount, relCounter - saveCount, ...puncts);\n            relCounter = saveCount + puncts.length;\n            newNodes = newNodes.concat(puncts);\n            if (firstComp && firstComp.length > 0) {\n                newNodes.push(SemanticProcessor.getInstance().row(firstComp));\n            }\n        }\n        return newNodes.length === 1 && partition.rel.length === 1\n            ? newNodes\n            : [\n                SemanticProcessor.getInstance().punctuatedNode_(newNodes, partition.rel)\n            ];\n    }\n    punctuatedNode_(nodes, punctuations) {\n        const newNode = SemanticProcessor.getInstance().factory_.makeBranchNode(semantic_meaning_js_1.SemanticType.PUNCTUATED, nodes, punctuations);\n        if (punctuations.length === nodes.length) {\n            const firstRole = punctuations[0].role;\n            if (firstRole !== semantic_meaning_js_1.SemanticRole.UNKNOWN &&\n                punctuations.every(function (punct) {\n                    return punct.role === firstRole;\n                })) {\n                newNode.role = firstRole;\n                return newNode;\n            }\n        }\n        const fpunct = punctuations[0];\n        if (SemanticPred.singlePunctAtPosition(nodes, punctuations, 0)) {\n            newNode.role =\n                fpunct.childNodes.length && !fpunct.embellished\n                    ? fpunct.role\n                    : semantic_meaning_js_1.SemanticRole.STARTPUNCT;\n        }\n        else if (SemanticPred.singlePunctAtPosition(nodes, punctuations, nodes.length - 1)) {\n            newNode.role =\n                fpunct.childNodes.length && !fpunct.embellished\n                    ? fpunct.role\n                    : semantic_meaning_js_1.SemanticRole.ENDPUNCT;\n        }\n        else if (punctuations.every((x) => SemanticPred.isRole(x, semantic_meaning_js_1.SemanticRole.DUMMY))) {\n            newNode.role = semantic_meaning_js_1.SemanticRole.TEXT;\n        }\n        else if (punctuations.every((x) => SemanticPred.isRole(x, semantic_meaning_js_1.SemanticRole.SPACE))) {\n            newNode.role = semantic_meaning_js_1.SemanticRole.SPACE;\n        }\n        else {\n            newNode.role = semantic_meaning_js_1.SemanticRole.SEQUENCE;\n        }\n        return newNode;\n    }\n    dummyNode_(children) {\n        const commata = SemanticProcessor.getInstance().factory_.makeMultipleContentNodes(children.length - 1, semantic_attr_js_1.NamedSymbol.invisibleComma);\n        commata.forEach(function (comma) {\n            comma.role = semantic_meaning_js_1.SemanticRole.DUMMY;\n        });\n        return SemanticProcessor.getInstance().punctuatedNode_(children, commata);\n    }\n    accentRole_(node, type) {\n        if (!SemanticPred.isAccent(node)) {\n            return false;\n        }\n        const content = node.textContent;\n        const role = semantic_attr_js_1.SemanticMap.Secondary.get(content, semantic_meaning_js_1.SemanticSecondary.BAR) ||\n            semantic_attr_js_1.SemanticMap.Secondary.get(content, semantic_meaning_js_1.SemanticSecondary.TILDE) ||\n            node.role;\n        node.role =\n            type === semantic_meaning_js_1.SemanticType.UNDERSCORE\n                ? semantic_meaning_js_1.SemanticRole.UNDERACCENT\n                : semantic_meaning_js_1.SemanticRole.OVERACCENT;\n        node.addAnnotation('accent', role);\n        return true;\n    }\n    accentNode_(center, children, type, length, accent) {\n        children = children.slice(0, length + 1);\n        const child1 = children[1];\n        const child2 = children[2];\n        let innerNode;\n        if (!accent && child2) {\n            innerNode = SemanticProcessor.getInstance().factory_.makeBranchNode(semantic_meaning_js_1.SemanticType.SUBSCRIPT, [center, child1], []);\n            innerNode.role = semantic_meaning_js_1.SemanticRole.SUBSUP;\n            children = [innerNode, child2];\n            type = semantic_meaning_js_1.SemanticType.SUPERSCRIPT;\n        }\n        if (accent) {\n            const underAccent = SemanticProcessor.getInstance().accentRole_(child1, type);\n            if (child2) {\n                const overAccent = SemanticProcessor.getInstance().accentRole_(child2, semantic_meaning_js_1.SemanticType.OVERSCORE);\n                if (overAccent && !underAccent) {\n                    innerNode = SemanticProcessor.getInstance().factory_.makeBranchNode(semantic_meaning_js_1.SemanticType.OVERSCORE, [center, child2], []);\n                    children = [innerNode, child1];\n                    type = semantic_meaning_js_1.SemanticType.UNDERSCORE;\n                }\n                else {\n                    innerNode = SemanticProcessor.getInstance().factory_.makeBranchNode(semantic_meaning_js_1.SemanticType.UNDERSCORE, [center, child1], []);\n                    children = [innerNode, child2];\n                    type = semantic_meaning_js_1.SemanticType.OVERSCORE;\n                }\n                innerNode.role = semantic_meaning_js_1.SemanticRole.UNDEROVER;\n            }\n        }\n        return SemanticProcessor.getInstance().makeLimitNode_(center, children, innerNode, type);\n    }\n    makeLimitNode_(center, children, innerNode, type) {\n        if (type === semantic_meaning_js_1.SemanticType.LIMUPPER &&\n            center.type === semantic_meaning_js_1.SemanticType.LIMLOWER) {\n            center.childNodes.push(children[1]);\n            children[1].parent = center;\n            center.type = semantic_meaning_js_1.SemanticType.LIMBOTH;\n            return center;\n        }\n        if (type === semantic_meaning_js_1.SemanticType.LIMLOWER &&\n            center.type === semantic_meaning_js_1.SemanticType.LIMUPPER) {\n            center.childNodes.splice(1, -1, children[1]);\n            children[1].parent = center;\n            center.type = semantic_meaning_js_1.SemanticType.LIMBOTH;\n            return center;\n        }\n        const newNode = SemanticProcessor.getInstance().factory_.makeBranchNode(type, children, []);\n        const embellished = SemanticPred.isEmbellished(center);\n        if (innerNode) {\n            innerNode.embellished = embellished;\n        }\n        newNode.embellished = embellished;\n        newNode.role = center.role;\n        return newNode;\n    }\n    getFunctionsInRow_(restNodes, opt_result) {\n        const result = opt_result || [];\n        if (restNodes.length === 0) {\n            return result;\n        }\n        const firstNode = restNodes.shift();\n        const heuristic = SemanticProcessor.classifyFunction_(firstNode, restNodes);\n        if (!heuristic) {\n            result.push(firstNode);\n            return SemanticProcessor.getInstance().getFunctionsInRow_(restNodes, result);\n        }\n        const processedRest = SemanticProcessor.getInstance().getFunctionsInRow_(restNodes, []);\n        const newRest = SemanticProcessor.getInstance().getFunctionArgs_(firstNode, processedRest, heuristic);\n        return result.concat(newRest);\n    }\n    getFunctionArgs_(func, rest, heuristic) {\n        let partition, arg, funcNode;\n        switch (heuristic) {\n            case 'integral': {\n                const components = SemanticProcessor.getInstance().getIntegralArgs_(rest);\n                if (!components.intvar && !components.integrand.length) {\n                    components.rest.unshift(func);\n                    return components.rest;\n                }\n                const integrand = SemanticProcessor.getInstance().row(components.integrand);\n                funcNode = SemanticProcessor.getInstance().integralNode_(func, integrand, components.intvar);\n                semantic_heuristic_factory_js_1.SemanticHeuristics.run('intvar_from_fraction', funcNode);\n                components.rest.unshift(funcNode);\n                return components.rest;\n            }\n            case 'prefix': {\n                if (rest[0] && rest[0].type === semantic_meaning_js_1.SemanticType.FENCED) {\n                    const arg = rest.shift();\n                    if (!SemanticPred.isNeutralFence(arg)) {\n                        arg.role = semantic_meaning_js_1.SemanticRole.LEFTRIGHT;\n                    }\n                    funcNode = SemanticProcessor.getInstance().functionNode_(func, arg);\n                    rest.unshift(funcNode);\n                    return rest;\n                }\n                partition = SemanticUtil.sliceNodes(rest, SemanticPred.isPrefixFunctionBoundary);\n                if (!partition.head.length) {\n                    if (!partition.div ||\n                        !SemanticPred.isType(partition.div, semantic_meaning_js_1.SemanticType.APPL)) {\n                        rest.unshift(func);\n                        return rest;\n                    }\n                    arg = partition.div;\n                }\n                else {\n                    arg = SemanticProcessor.getInstance().row(partition.head);\n                    if (partition.div) {\n                        partition.tail.unshift(partition.div);\n                    }\n                }\n                funcNode = SemanticProcessor.getInstance().functionNode_(func, arg);\n                partition.tail.unshift(funcNode);\n                return partition.tail;\n            }\n            case 'bigop': {\n                partition = SemanticUtil.sliceNodes(rest, SemanticPred.isBigOpBoundary);\n                if (!partition.head.length) {\n                    rest.unshift(func);\n                    return rest;\n                }\n                arg = SemanticProcessor.getInstance().row(partition.head);\n                funcNode = SemanticProcessor.getInstance().bigOpNode_(func, arg);\n                if (partition.div) {\n                    partition.tail.unshift(partition.div);\n                }\n                partition.tail.unshift(funcNode);\n                return partition.tail;\n            }\n            case 'simple':\n            default: {\n                if (rest.length === 0) {\n                    return [func];\n                }\n                const firstArg = rest[0];\n                if (firstArg.type === semantic_meaning_js_1.SemanticType.FENCED &&\n                    !SemanticPred.isNeutralFence(firstArg) &&\n                    SemanticPred.isSimpleFunctionScope(firstArg)) {\n                    firstArg.role = semantic_meaning_js_1.SemanticRole.LEFTRIGHT;\n                    SemanticProcessor.propagateFunctionRole_(func, semantic_meaning_js_1.SemanticRole.SIMPLEFUNC);\n                    funcNode = SemanticProcessor.getInstance().functionNode_(func, rest.shift());\n                    rest.unshift(funcNode);\n                    return rest;\n                }\n                rest.unshift(func);\n                return rest;\n            }\n        }\n    }\n    getIntegralArgs_(nodes, args = []) {\n        if (nodes.length === 0) {\n            const partition = SemanticUtil.sliceNodes(args, SemanticPred.isBigOpBoundary);\n            if (partition.div) {\n                partition.tail.unshift(partition.div);\n            }\n            return { integrand: partition.head, intvar: null, rest: partition.tail };\n        }\n        semantic_heuristic_factory_js_1.SemanticHeuristics.run('intvar_from_implicit', nodes);\n        const firstNode = nodes[0];\n        if (SemanticPred.isGeneralFunctionBoundary(firstNode)) {\n            const { integrand: args2, rest: rest2 } = SemanticProcessor.getInstance().getIntegralArgs_(args);\n            return { integrand: args2, intvar: null, rest: rest2.concat(nodes) };\n        }\n        if (SemanticPred.isIntegralDxBoundarySingle(firstNode)) {\n            firstNode.role = semantic_meaning_js_1.SemanticRole.INTEGRAL;\n            return { integrand: args, intvar: firstNode, rest: nodes.slice(1) };\n        }\n        if (nodes[1] && SemanticPred.isIntegralDxBoundary(firstNode, nodes[1])) {\n            const intvar = SemanticProcessor.getInstance().prefixNode_(nodes[1], [firstNode]);\n            intvar.role = semantic_meaning_js_1.SemanticRole.INTEGRAL;\n            return { integrand: args, intvar: intvar, rest: nodes.slice(2) };\n        }\n        args.push(nodes.shift());\n        return SemanticProcessor.getInstance().getIntegralArgs_(nodes, args);\n    }\n    functionNode_(func, arg) {\n        const applNode = SemanticProcessor.getInstance().factory_.makeContentNode(semantic_attr_js_1.NamedSymbol.functionApplication);\n        const appl = SemanticProcessor.getInstance().funcAppls[func.id];\n        if (appl) {\n            applNode.mathmlTree = appl.mathmlTree;\n            applNode.mathml = appl.mathml;\n            applNode.annotation = appl.annotation;\n            applNode.attributes = appl.attributes;\n            delete SemanticProcessor.getInstance().funcAppls[func.id];\n        }\n        applNode.type = semantic_meaning_js_1.SemanticType.PUNCTUATION;\n        applNode.role = semantic_meaning_js_1.SemanticRole.APPLICATION;\n        const funcop = SemanticProcessor.getFunctionOp_(func, function (node) {\n            return (SemanticPred.isType(node, semantic_meaning_js_1.SemanticType.FUNCTION) ||\n                (SemanticPred.isType(node, semantic_meaning_js_1.SemanticType.IDENTIFIER) &&\n                    SemanticPred.isRole(node, semantic_meaning_js_1.SemanticRole.SIMPLEFUNC)));\n        });\n        return SemanticProcessor.getInstance().functionalNode_(semantic_meaning_js_1.SemanticType.APPL, [func, arg], funcop, [applNode]);\n    }\n    bigOpNode_(bigOp, arg) {\n        const largeop = SemanticProcessor.getFunctionOp_(bigOp, (x) => SemanticPred.isType(x, semantic_meaning_js_1.SemanticType.LARGEOP));\n        return SemanticProcessor.getInstance().functionalNode_(semantic_meaning_js_1.SemanticType.BIGOP, [bigOp, arg], largeop, []);\n    }\n    integralNode_(integral, integrand, intvar) {\n        integrand =\n            integrand || SemanticProcessor.getInstance().factory_.makeEmptyNode();\n        intvar = intvar || SemanticProcessor.getInstance().factory_.makeEmptyNode();\n        const largeop = SemanticProcessor.getFunctionOp_(integral, (x) => SemanticPred.isType(x, semantic_meaning_js_1.SemanticType.LARGEOP));\n        return SemanticProcessor.getInstance().functionalNode_(semantic_meaning_js_1.SemanticType.INTEGRAL, [integral, integrand, intvar], largeop, []);\n    }\n    functionalNode_(type, children, operator, content) {\n        const funcop = children[0];\n        let oldParent;\n        if (operator) {\n            oldParent = operator.parent;\n            content.push(operator);\n        }\n        const newNode = SemanticProcessor.getInstance().factory_.makeBranchNode(type, children, content);\n        newNode.role = funcop.role;\n        if (oldParent) {\n            operator.parent = oldParent;\n        }\n        return newNode;\n    }\n    fractionNode_(denom, enume) {\n        const newNode = SemanticProcessor.getInstance().factory_.makeBranchNode(semantic_meaning_js_1.SemanticType.FRACTION, [denom, enume], []);\n        newNode.role = newNode.childNodes.every(function (x) {\n            return (SemanticPred.isType(x, semantic_meaning_js_1.SemanticType.NUMBER) &&\n                SemanticPred.isRole(x, semantic_meaning_js_1.SemanticRole.INTEGER));\n        })\n            ? semantic_meaning_js_1.SemanticRole.VULGAR\n            : newNode.childNodes.every(SemanticPred.isPureUnit)\n                ? semantic_meaning_js_1.SemanticRole.UNIT\n                : semantic_meaning_js_1.SemanticRole.DIVISION;\n        return semantic_heuristic_factory_js_1.SemanticHeuristics.run('propagateSimpleFunction', newNode);\n    }\n    scriptNode_(nodes, role, opt_noSingle) {\n        let newNode;\n        switch (nodes.length) {\n            case 0:\n                newNode = SemanticProcessor.getInstance().factory_.makeEmptyNode();\n                break;\n            case 1:\n                newNode = nodes[0];\n                if (opt_noSingle) {\n                    return newNode;\n                }\n                break;\n            default:\n                newNode = SemanticProcessor.getInstance().dummyNode_(nodes);\n        }\n        newNode.role = role;\n        return newNode;\n    }\n    findNestedRow_(nodes, semantic, level, value) {\n        if (level > 3) {\n            return null;\n        }\n        for (let i = 0, node; (node = nodes[i]); i++) {\n            const tag = DomUtil.tagName(node);\n            if (tag !== semantic_util_js_1.MMLTAGS.MSPACE) {\n                if (tag === semantic_util_js_1.MMLTAGS.MROW) {\n                    return SemanticProcessor.getInstance().findNestedRow_(DomUtil.toArray(node.childNodes), semantic, level + 1, value);\n                }\n                if (SemanticProcessor.findSemantics(node, semantic, value)) {\n                    return node;\n                }\n            }\n        }\n        return null;\n    }\n}\nexports.SemanticProcessor = SemanticProcessor;\nSemanticProcessor.FENCE_TO_PUNCT_ = {\n    [semantic_meaning_js_1.SemanticRole.METRIC]: semantic_meaning_js_1.SemanticRole.METRIC,\n    [semantic_meaning_js_1.SemanticRole.NEUTRAL]: semantic_meaning_js_1.SemanticRole.VBAR,\n    [semantic_meaning_js_1.SemanticRole.OPEN]: semantic_meaning_js_1.SemanticRole.OPENFENCE,\n    [semantic_meaning_js_1.SemanticRole.CLOSE]: semantic_meaning_js_1.SemanticRole.CLOSEFENCE\n};\nSemanticProcessor.MML_TO_LIMIT_ = {\n    [semantic_util_js_1.MMLTAGS.MSUB]: { type: semantic_meaning_js_1.SemanticType.LIMLOWER, length: 1 },\n    [semantic_util_js_1.MMLTAGS.MUNDER]: { type: semantic_meaning_js_1.SemanticType.LIMLOWER, length: 1 },\n    [semantic_util_js_1.MMLTAGS.MSUP]: { type: semantic_meaning_js_1.SemanticType.LIMUPPER, length: 1 },\n    [semantic_util_js_1.MMLTAGS.MOVER]: { type: semantic_meaning_js_1.SemanticType.LIMUPPER, length: 1 },\n    [semantic_util_js_1.MMLTAGS.MSUBSUP]: { type: semantic_meaning_js_1.SemanticType.LIMBOTH, length: 2 },\n    [semantic_util_js_1.MMLTAGS.MUNDEROVER]: { type: semantic_meaning_js_1.SemanticType.LIMBOTH, length: 2 }\n};\nSemanticProcessor.MML_TO_BOUNDS_ = {\n    [semantic_util_js_1.MMLTAGS.MSUB]: { type: semantic_meaning_js_1.SemanticType.SUBSCRIPT, length: 1, accent: false },\n    [semantic_util_js_1.MMLTAGS.MSUP]: {\n        type: semantic_meaning_js_1.SemanticType.SUPERSCRIPT,\n        length: 1,\n        accent: false\n    },\n    [semantic_util_js_1.MMLTAGS.MSUBSUP]: {\n        type: semantic_meaning_js_1.SemanticType.SUBSCRIPT,\n        length: 2,\n        accent: false\n    },\n    [semantic_util_js_1.MMLTAGS.MUNDER]: {\n        type: semantic_meaning_js_1.SemanticType.UNDERSCORE,\n        length: 1,\n        accent: true\n    },\n    [semantic_util_js_1.MMLTAGS.MOVER]: { type: semantic_meaning_js_1.SemanticType.OVERSCORE, length: 1, accent: true },\n    [semantic_util_js_1.MMLTAGS.MUNDEROVER]: {\n        type: semantic_meaning_js_1.SemanticType.UNDERSCORE,\n        length: 2,\n        accent: true\n    }\n};\nSemanticProcessor.CLASSIFY_FUNCTION_ = {\n    [semantic_meaning_js_1.SemanticRole.INTEGRAL]: 'integral',\n    [semantic_meaning_js_1.SemanticRole.SUM]: 'bigop',\n    [semantic_meaning_js_1.SemanticRole.PREFIXFUNC]: 'prefix',\n    [semantic_meaning_js_1.SemanticRole.LIMFUNC]: 'prefix',\n    [semantic_meaning_js_1.SemanticRole.SIMPLEFUNC]: 'prefix',\n    [semantic_meaning_js_1.SemanticRole.COMPFUNC]: 'prefix'\n};\nSemanticProcessor.MATHJAX_FONTS = {\n    '-tex-caligraphic': semantic_meaning_js_1.SemanticFont.CALIGRAPHIC,\n    '-tex-caligraphic-bold': semantic_meaning_js_1.SemanticFont.CALIGRAPHICBOLD,\n    '-tex-calligraphic': semantic_meaning_js_1.SemanticFont.CALIGRAPHIC,\n    '-tex-calligraphic-bold': semantic_meaning_js_1.SemanticFont.CALIGRAPHICBOLD,\n    '-tex-oldstyle': semantic_meaning_js_1.SemanticFont.OLDSTYLE,\n    '-tex-oldstyle-bold': semantic_meaning_js_1.SemanticFont.OLDSTYLEBOLD,\n    '-tex-mathit': semantic_meaning_js_1.SemanticFont.ITALIC\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.spaceoutText = spaceoutText;\nexports.spaceoutNumber = spaceoutNumber;\nexports.spaceoutIdentifier = spaceoutIdentifier;\nexports.resetNestingDepth = resetNestingDepth;\nexports.fractionNestingDepth = fractionNestingDepth;\nexports.openingFractionVerbose = openingFractionVerbose;\nexports.closingFractionVerbose = closingFractionVerbose;\nexports.overFractionVerbose = overFractionVerbose;\nexports.openingFractionBrief = openingFractionBrief;\nexports.closingFractionBrief = closingFractionBrief;\nexports.openingFractionSbrief = openingFractionSbrief;\nexports.closingFractionSbrief = closingFractionSbrief;\nexports.overFractionSbrief = overFractionSbrief;\nexports.isSmallVulgarFraction = isSmallVulgarFraction;\nexports.nestedSubSuper = nestedSubSuper;\nexports.subscriptVerbose = subscriptVerbose;\nexports.subscriptBrief = subscriptBrief;\nexports.superscriptVerbose = superscriptVerbose;\nexports.superscriptBrief = superscriptBrief;\nexports.baselineVerbose = baselineVerbose;\nexports.baselineBrief = baselineBrief;\nexports.radicalNestingDepth = radicalNestingDepth;\nexports.openingRadicalVerbose = openingRadicalVerbose;\nexports.closingRadicalVerbose = closingRadicalVerbose;\nexports.indexRadicalVerbose = indexRadicalVerbose;\nexports.openingRadicalBrief = openingRadicalBrief;\nexports.closingRadicalBrief = closingRadicalBrief;\nexports.indexRadicalBrief = indexRadicalBrief;\nexports.openingRadicalSbrief = openingRadicalSbrief;\nexports.indexRadicalSbrief = indexRadicalSbrief;\nexports.nestedUnderscript = nestedUnderscript;\nexports.endscripts = endscripts;\nexports.nestedOverscript = nestedOverscript;\nexports.determinantIsSimple = determinantIsSimple;\nexports.generateBaselineConstraint = generateBaselineConstraint;\nexports.removeParens = removeParens;\nexports.generateTensorRules = generateTensorRules;\nexports.smallRoot = smallRoot;\nconst span_js_1 = require(\"../audio/span.js\");\nconst BaseUtil = require(\"../common/base_util.js\");\nconst DomUtil = require(\"../common/dom_util.js\");\nconst XpathUtil = require(\"../common/xpath_util.js\");\nconst locale_js_1 = require(\"../l10n/locale.js\");\nconst semantic_meaning_js_1 = require(\"../semantic_tree/semantic_meaning.js\");\nconst semantic_processor_js_1 = require(\"../semantic_tree/semantic_processor.js\");\nlet nestingDepth = {};\nfunction spaceoutText(node) {\n    return Array.from(node.textContent).map(span_js_1.Span.stringEmpty);\n}\nfunction spaceoutNodes(node, correction) {\n    const content = Array.from(node.textContent);\n    const result = [];\n    const processor = semantic_processor_js_1.SemanticProcessor.getInstance();\n    const doc = node.ownerDocument;\n    for (let i = 0, chr; (chr = content[i]); i++) {\n        const leaf = processor\n            .getNodeFactory()\n            .makeLeafNode(chr, semantic_meaning_js_1.SemanticFont.UNKNOWN);\n        const sn = processor.identifierNode(leaf, semantic_meaning_js_1.SemanticFont.UNKNOWN, '');\n        correction(sn);\n        result.push(sn.xml(doc));\n    }\n    return result;\n}\nfunction spaceoutNumber(node) {\n    return spaceoutNodes(node, function (sn) {\n        if (!sn.textContent.match(/\\W/)) {\n            sn.type = semantic_meaning_js_1.SemanticType.NUMBER;\n        }\n    });\n}\nfunction spaceoutIdentifier(node) {\n    return spaceoutNodes(node, function (sn) {\n        sn.font = semantic_meaning_js_1.SemanticFont.UNKNOWN;\n        sn.type = semantic_meaning_js_1.SemanticType.IDENTIFIER;\n    });\n}\nconst nestingBarriers = [\n    semantic_meaning_js_1.SemanticType.CASES,\n    semantic_meaning_js_1.SemanticType.CELL,\n    semantic_meaning_js_1.SemanticType.INTEGRAL,\n    semantic_meaning_js_1.SemanticType.LINE,\n    semantic_meaning_js_1.SemanticType.MATRIX,\n    semantic_meaning_js_1.SemanticType.MULTILINE,\n    semantic_meaning_js_1.SemanticType.OVERSCORE,\n    semantic_meaning_js_1.SemanticType.ROOT,\n    semantic_meaning_js_1.SemanticType.ROW,\n    semantic_meaning_js_1.SemanticType.SQRT,\n    semantic_meaning_js_1.SemanticType.SUBSCRIPT,\n    semantic_meaning_js_1.SemanticType.SUPERSCRIPT,\n    semantic_meaning_js_1.SemanticType.TABLE,\n    semantic_meaning_js_1.SemanticType.UNDERSCORE,\n    semantic_meaning_js_1.SemanticType.VECTOR\n];\nfunction resetNestingDepth(node) {\n    nestingDepth = {};\n    return [node];\n}\nfunction getNestingDepth(type, node, tags, opt_barrierTags, opt_barrierAttrs, opt_func) {\n    opt_barrierTags = opt_barrierTags || nestingBarriers;\n    opt_barrierAttrs = opt_barrierAttrs || {};\n    opt_func =\n        opt_func ||\n            function (_node) {\n                return false;\n            };\n    const xmlText = DomUtil.serializeXml(node);\n    if (!nestingDepth[type]) {\n        nestingDepth[type] = {};\n    }\n    if (nestingDepth[type][xmlText]) {\n        return nestingDepth[type][xmlText];\n    }\n    if (opt_func(node) || tags.indexOf(node.tagName) < 0) {\n        return 0;\n    }\n    const depth = computeNestingDepth_(node, tags, BaseUtil.setdifference(opt_barrierTags, tags), opt_barrierAttrs, opt_func, 0);\n    nestingDepth[type][xmlText] = depth;\n    return depth;\n}\nfunction containsAttr(node, attrs) {\n    if (!node.attributes) {\n        return false;\n    }\n    const attributes = DomUtil.toArray(node.attributes);\n    for (let i = 0, attr; (attr = attributes[i]); i++) {\n        if (attrs[attr.nodeName] === attr.nodeValue) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction computeNestingDepth_(node, tags, barriers, attrs, func, depth) {\n    if (func(node) ||\n        barriers.indexOf(node.tagName) > -1 ||\n        containsAttr(node, attrs)) {\n        return depth;\n    }\n    if (tags.indexOf(node.tagName) > -1) {\n        depth++;\n    }\n    if (!node.childNodes || node.childNodes.length === 0) {\n        return depth;\n    }\n    const children = DomUtil.toArray(node.childNodes);\n    return Math.max.apply(null, children.map(function (subNode) {\n        return computeNestingDepth_(subNode, tags, barriers, attrs, func, depth);\n    }));\n}\nfunction fractionNestingDepth(node) {\n    return getNestingDepth('fraction', node, ['fraction'], nestingBarriers, {}, locale_js_1.LOCALE.FUNCTIONS.fracNestDepth);\n}\nfunction nestedFraction(node, expr, opt_end) {\n    const depth = fractionNestingDepth(node);\n    const annotation = Array(depth).fill(expr);\n    if (opt_end) {\n        annotation.push(opt_end);\n    }\n    return annotation.join(locale_js_1.LOCALE.MESSAGES.regexp.JOINER_FRAC);\n}\nfunction openingFractionVerbose(node) {\n    return span_js_1.Span.singleton(nestedFraction(node, locale_js_1.LOCALE.MESSAGES.MS.START, locale_js_1.LOCALE.MESSAGES.MS.FRAC_V));\n}\nfunction closingFractionVerbose(node) {\n    return span_js_1.Span.singleton(nestedFraction(node, locale_js_1.LOCALE.MESSAGES.MS.END, locale_js_1.LOCALE.MESSAGES.MS.FRAC_V), { kind: 'LAST' });\n}\nfunction overFractionVerbose(node) {\n    return span_js_1.Span.singleton(nestedFraction(node, locale_js_1.LOCALE.MESSAGES.MS.FRAC_OVER), {});\n}\nfunction openingFractionBrief(node) {\n    return span_js_1.Span.singleton(nestedFraction(node, locale_js_1.LOCALE.MESSAGES.MS.START, locale_js_1.LOCALE.MESSAGES.MS.FRAC_B));\n}\nfunction closingFractionBrief(node) {\n    return span_js_1.Span.singleton(nestedFraction(node, locale_js_1.LOCALE.MESSAGES.MS.END, locale_js_1.LOCALE.MESSAGES.MS.FRAC_B), { kind: 'LAST' });\n}\nfunction openingFractionSbrief(node) {\n    const depth = fractionNestingDepth(node);\n    return span_js_1.Span.singleton(depth === 1\n        ? locale_js_1.LOCALE.MESSAGES.MS.FRAC_S\n        : locale_js_1.LOCALE.FUNCTIONS.combineNestedFraction(locale_js_1.LOCALE.MESSAGES.MS.NEST_FRAC, locale_js_1.LOCALE.FUNCTIONS.radicalNestDepth(depth - 1), locale_js_1.LOCALE.MESSAGES.MS.FRAC_S));\n}\nfunction closingFractionSbrief(node) {\n    const depth = fractionNestingDepth(node);\n    return span_js_1.Span.singleton(depth === 1\n        ? locale_js_1.LOCALE.MESSAGES.MS.ENDFRAC\n        : locale_js_1.LOCALE.FUNCTIONS.combineNestedFraction(locale_js_1.LOCALE.MESSAGES.MS.NEST_FRAC, locale_js_1.LOCALE.FUNCTIONS.radicalNestDepth(depth - 1), locale_js_1.LOCALE.MESSAGES.MS.ENDFRAC), { kind: 'LAST' });\n}\nfunction overFractionSbrief(node) {\n    const depth = fractionNestingDepth(node);\n    return span_js_1.Span.singleton(depth === 1\n        ? locale_js_1.LOCALE.MESSAGES.MS.FRAC_OVER\n        : locale_js_1.LOCALE.FUNCTIONS.combineNestedFraction(locale_js_1.LOCALE.MESSAGES.MS.NEST_FRAC, locale_js_1.LOCALE.FUNCTIONS.radicalNestDepth(depth - 1), locale_js_1.LOCALE.MESSAGES.MS.FRAC_OVER));\n}\nfunction isSmallVulgarFraction(node) {\n    return locale_js_1.LOCALE.FUNCTIONS.fracNestDepth(node) ? [node] : [];\n}\nfunction nestedSubSuper(node, init, replace) {\n    while (node.parentNode) {\n        const children = node.parentNode;\n        const parent = children.parentNode;\n        if (!parent) {\n            break;\n        }\n        const nodeRole = node.getAttribute && node.getAttribute('role');\n        if ((parent.tagName === semantic_meaning_js_1.SemanticType.SUBSCRIPT &&\n            node === children.childNodes[1]) ||\n            (parent.tagName === semantic_meaning_js_1.SemanticType.TENSOR &&\n                nodeRole &&\n                (nodeRole === semantic_meaning_js_1.SemanticRole.LEFTSUB ||\n                    nodeRole === semantic_meaning_js_1.SemanticRole.RIGHTSUB))) {\n            init = replace.sub + locale_js_1.LOCALE.MESSAGES.regexp.JOINER_SUBSUPER + init;\n        }\n        if ((parent.tagName === semantic_meaning_js_1.SemanticType.SUPERSCRIPT &&\n            node === children.childNodes[1]) ||\n            (parent.tagName === semantic_meaning_js_1.SemanticType.TENSOR &&\n                nodeRole &&\n                (nodeRole === semantic_meaning_js_1.SemanticRole.LEFTSUPER ||\n                    nodeRole === semantic_meaning_js_1.SemanticRole.RIGHTSUPER))) {\n            init = replace.sup + locale_js_1.LOCALE.MESSAGES.regexp.JOINER_SUBSUPER + init;\n        }\n        node = parent;\n    }\n    return init.trim();\n}\nfunction subscriptVerbose(node) {\n    return span_js_1.Span.singleton(nestedSubSuper(node, locale_js_1.LOCALE.MESSAGES.MS.SUBSCRIPT, {\n        sup: locale_js_1.LOCALE.MESSAGES.MS.SUPER,\n        sub: locale_js_1.LOCALE.MESSAGES.MS.SUB\n    }));\n}\nfunction subscriptBrief(node) {\n    return span_js_1.Span.singleton(nestedSubSuper(node, locale_js_1.LOCALE.MESSAGES.MS.SUB, {\n        sup: locale_js_1.LOCALE.MESSAGES.MS.SUP,\n        sub: locale_js_1.LOCALE.MESSAGES.MS.SUB\n    }));\n}\nfunction superscriptVerbose(node) {\n    return span_js_1.Span.singleton(nestedSubSuper(node, locale_js_1.LOCALE.MESSAGES.MS.SUPERSCRIPT, {\n        sup: locale_js_1.LOCALE.MESSAGES.MS.SUPER,\n        sub: locale_js_1.LOCALE.MESSAGES.MS.SUB\n    }));\n}\nfunction superscriptBrief(node) {\n    return span_js_1.Span.singleton(nestedSubSuper(node, locale_js_1.LOCALE.MESSAGES.MS.SUP, {\n        sup: locale_js_1.LOCALE.MESSAGES.MS.SUP,\n        sub: locale_js_1.LOCALE.MESSAGES.MS.SUB\n    }));\n}\nfunction baselineVerbose(node) {\n    const baseline = nestedSubSuper(node, '', {\n        sup: locale_js_1.LOCALE.MESSAGES.MS.SUPER,\n        sub: locale_js_1.LOCALE.MESSAGES.MS.SUB\n    });\n    return span_js_1.Span.singleton(!baseline\n        ? locale_js_1.LOCALE.MESSAGES.MS.BASELINE\n        : baseline\n            .replace(new RegExp(locale_js_1.LOCALE.MESSAGES.MS.SUB + '$'), locale_js_1.LOCALE.MESSAGES.MS.SUBSCRIPT)\n            .replace(new RegExp(locale_js_1.LOCALE.MESSAGES.MS.SUPER + '$'), locale_js_1.LOCALE.MESSAGES.MS.SUPERSCRIPT));\n}\nfunction baselineBrief(node) {\n    const baseline = nestedSubSuper(node, '', {\n        sup: locale_js_1.LOCALE.MESSAGES.MS.SUP,\n        sub: locale_js_1.LOCALE.MESSAGES.MS.SUB\n    });\n    return span_js_1.Span.singleton(baseline || locale_js_1.LOCALE.MESSAGES.MS.BASE);\n}\nfunction radicalNestingDepth(node) {\n    return getNestingDepth('radical', node, ['sqrt', 'root'], nestingBarriers, {});\n}\nfunction nestedRadical(node, prefix, postfix) {\n    const depth = radicalNestingDepth(node);\n    const index = getRootIndex(node);\n    postfix = index ? locale_js_1.LOCALE.FUNCTIONS.combineRootIndex(postfix, index) : postfix;\n    return depth === 1\n        ? postfix\n        : locale_js_1.LOCALE.FUNCTIONS.combineNestedRadical(prefix, locale_js_1.LOCALE.FUNCTIONS.radicalNestDepth(depth - 1), postfix);\n}\nfunction getRootIndex(node) {\n    const content = node.tagName === 'sqrt'\n        ? '2'\n        :\n            XpathUtil.evalXPath('children/*[1]', node)[0].textContent.trim();\n    return locale_js_1.LOCALE.MESSAGES.MSroots[content] || '';\n}\nfunction openingRadicalVerbose(node) {\n    return span_js_1.Span.singleton(nestedRadical(node, locale_js_1.LOCALE.MESSAGES.MS.NESTED, locale_js_1.LOCALE.MESSAGES.MS.STARTROOT));\n}\nfunction closingRadicalVerbose(node) {\n    return span_js_1.Span.singleton(nestedRadical(node, locale_js_1.LOCALE.MESSAGES.MS.NESTED, locale_js_1.LOCALE.MESSAGES.MS.ENDROOT));\n}\nfunction indexRadicalVerbose(node) {\n    return span_js_1.Span.singleton(nestedRadical(node, locale_js_1.LOCALE.MESSAGES.MS.NESTED, locale_js_1.LOCALE.MESSAGES.MS.ROOTINDEX));\n}\nfunction openingRadicalBrief(node) {\n    return span_js_1.Span.singleton(nestedRadical(node, locale_js_1.LOCALE.MESSAGES.MS.NEST_ROOT, locale_js_1.LOCALE.MESSAGES.MS.STARTROOT));\n}\nfunction closingRadicalBrief(node) {\n    return span_js_1.Span.singleton(nestedRadical(node, locale_js_1.LOCALE.MESSAGES.MS.NEST_ROOT, locale_js_1.LOCALE.MESSAGES.MS.ENDROOT));\n}\nfunction indexRadicalBrief(node) {\n    return span_js_1.Span.singleton(nestedRadical(node, locale_js_1.LOCALE.MESSAGES.MS.NEST_ROOT, locale_js_1.LOCALE.MESSAGES.MS.ROOTINDEX));\n}\nfunction openingRadicalSbrief(node) {\n    return span_js_1.Span.singleton(nestedRadical(node, locale_js_1.LOCALE.MESSAGES.MS.NEST_ROOT, locale_js_1.LOCALE.MESSAGES.MS.ROOT));\n}\nfunction indexRadicalSbrief(node) {\n    return span_js_1.Span.singleton(nestedRadical(node, locale_js_1.LOCALE.MESSAGES.MS.NEST_ROOT, locale_js_1.LOCALE.MESSAGES.MS.INDEX));\n}\nfunction underscoreNestingDepth(node) {\n    return getNestingDepth('underscore', node, ['underscore'], nestingBarriers, {}, function (node) {\n        return (node.tagName &&\n            node.tagName === semantic_meaning_js_1.SemanticType.UNDERSCORE &&\n            node.childNodes[0].childNodes[1].getAttribute('role') ===\n                semantic_meaning_js_1.SemanticRole.UNDERACCENT);\n    });\n}\nfunction nestedUnderscript(node) {\n    const depth = underscoreNestingDepth(node);\n    return span_js_1.Span.singleton(Array(depth).join(locale_js_1.LOCALE.MESSAGES.MS.UNDER) + locale_js_1.LOCALE.MESSAGES.MS.UNDERSCRIPT);\n}\nfunction overscoreNestingDepth(node) {\n    return getNestingDepth('overscore', node, ['overscore'], nestingBarriers, {}, function (node) {\n        return (node.tagName &&\n            node.tagName === semantic_meaning_js_1.SemanticType.OVERSCORE &&\n            node.childNodes[0].childNodes[1].getAttribute('role') ===\n                semantic_meaning_js_1.SemanticRole.OVERACCENT);\n    });\n}\nfunction endscripts(_node) {\n    return span_js_1.Span.singleton(locale_js_1.LOCALE.MESSAGES.MS.ENDSCRIPTS);\n}\nfunction nestedOverscript(node) {\n    const depth = overscoreNestingDepth(node);\n    return span_js_1.Span.singleton(Array(depth).join(locale_js_1.LOCALE.MESSAGES.MS.OVER) + locale_js_1.LOCALE.MESSAGES.MS.OVERSCRIPT);\n}\nfunction determinantIsSimple(node) {\n    if (node.tagName !== semantic_meaning_js_1.SemanticType.MATRIX ||\n        node.getAttribute('role') !== semantic_meaning_js_1.SemanticRole.DETERMINANT) {\n        return [];\n    }\n    const cells = XpathUtil.evalXPath('children/row/children/cell/children/*', node);\n    for (let i = 0, cell; (cell = cells[i]); i++) {\n        if (cell.tagName === semantic_meaning_js_1.SemanticType.NUMBER) {\n            continue;\n        }\n        if (cell.tagName === semantic_meaning_js_1.SemanticType.IDENTIFIER) {\n            const role = cell.getAttribute('role');\n            if (role === semantic_meaning_js_1.SemanticRole.LATINLETTER ||\n                role === semantic_meaning_js_1.SemanticRole.GREEKLETTER ||\n                role === semantic_meaning_js_1.SemanticRole.OTHERLETTER) {\n                continue;\n            }\n        }\n        return [];\n    }\n    return [node];\n}\nfunction generateBaselineConstraint() {\n    const ignoreElems = ['subscript', 'superscript', 'tensor'];\n    const mainElems = ['relseq', 'multrel'];\n    const breakElems = ['fraction', 'punctuation', 'fenced', 'sqrt', 'root'];\n    const ancestrify = (elemList) => elemList.map((elem) => 'ancestor::' + elem);\n    const notify = (elem) => 'not(' + elem + ')';\n    const prefix = 'ancestor::*/following-sibling::*';\n    const middle = notify(ancestrify(ignoreElems).join(' or '));\n    const mainList = ancestrify(mainElems);\n    const breakList = ancestrify(breakElems);\n    let breakCstrs = [];\n    for (let i = 0, brk; (brk = breakList[i]); i++) {\n        breakCstrs = breakCstrs.concat(mainList.map(function (elem) {\n            return brk + '/' + elem;\n        }));\n    }\n    const postfix = notify(breakCstrs.join(' | '));\n    return [[prefix, middle, postfix].join(' and ')];\n}\nfunction removeParens(node) {\n    if (!node.childNodes.length ||\n        !node.childNodes[0].childNodes.length ||\n        !node.childNodes[0].childNodes[0].childNodes.length) {\n        return span_js_1.Span.singleton('');\n    }\n    const content = node.childNodes[0].childNodes[0].childNodes[0].textContent;\n    return span_js_1.Span.singleton(content.match(/^\\(.+\\)$/) ? content.slice(1, -1) : content);\n}\nconst componentString = new Map([\n    [3, 'CSFleftsuperscript'],\n    [4, 'CSFleftsubscript'],\n    [2, 'CSFbaseline'],\n    [1, 'CSFrightsubscript'],\n    [0, 'CSFrightsuperscript']\n]);\nconst childNumber = new Map([\n    [4, 2],\n    [3, 3],\n    [2, 1],\n    [1, 4],\n    [0, 5]\n]);\nfunction generateTensorRuleStrings_(constellation) {\n    const constraints = [];\n    let verbString = '';\n    let briefString = '';\n    let constel = parseInt(constellation, 2);\n    for (let i = 0; i < 5; i++) {\n        const childString = 'children/*[' + childNumber.get(i) + ']';\n        if (constel & 1) {\n            const compString = componentString.get(i % 5);\n            verbString =\n                '[t] ' + compString + 'Verbose; [n] ' + childString + ';' + verbString;\n            briefString =\n                '[t] ' + compString + 'Brief; [n] ' + childString + ';' + briefString;\n        }\n        else {\n            constraints.unshift('name(' + childString + ')=\"empty\"');\n        }\n        constel >>= 1;\n    }\n    return [constraints, verbString, briefString];\n}\nfunction generateTensorRules(store, brief = true) {\n    const constellations = [\n        '11111',\n        '11110',\n        '11101',\n        '11100',\n        '10111',\n        '10110',\n        '10101',\n        '10100',\n        '01111',\n        '01110',\n        '01101',\n        '01100'\n    ];\n    for (const constel of constellations) {\n        let name = 'tensor' + constel;\n        let [components, verbStr, briefStr] = generateTensorRuleStrings_(constel);\n        store.defineRule(name, 'default', verbStr, 'self::tensor', ...components);\n        if (brief) {\n            store.defineRule(name, 'brief', briefStr, 'self::tensor', ...components);\n            store.defineRule(name, 'sbrief', briefStr, 'self::tensor', ...components);\n        }\n        if (!(parseInt(constel, 2) & 3)) {\n            continue;\n        }\n        const baselineStr = componentString.get(2);\n        verbStr += '; [t]' + baselineStr + 'Verbose';\n        briefStr += '; [t]' + baselineStr + 'Brief';\n        name = name + '-baseline';\n        const cstr = '((.//*[not(*)])[last()]/@id)!=(((.//ancestor::fraction|' +\n            'ancestor::root|ancestor::sqrt|ancestor::cell|ancestor::line|' +\n            'ancestor::stree)[1]//*[not(*)])[last()]/@id)';\n        store.defineRule(name, 'default', verbStr, 'self::tensor', cstr, ...components);\n        if (brief) {\n            store.defineRule(name, 'brief', briefStr, 'self::tensor', cstr, ...components);\n            store.defineRule(name, 'sbrief', briefStr, 'self::tensor', cstr, ...components);\n        }\n    }\n}\nfunction smallRoot(node) {\n    let max = Object.keys(locale_js_1.LOCALE.MESSAGES.MSroots).length;\n    if (!max) {\n        return [];\n    }\n    else {\n        max++;\n    }\n    if (!node.childNodes ||\n        node.childNodes.length === 0 ||\n        !node.childNodes[0].childNodes) {\n        return [];\n    }\n    const index = node.childNodes[0].childNodes[0].textContent;\n    if (!/^\\d+$/.test(index)) {\n        return [];\n    }\n    const num = parseInt(index, 10);\n    return num > 1 && num <= max ? [node] : [];\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ordinalCounter = ordinalCounter;\nexports.wordCounter = wordCounter;\nexports.vulgarFraction = vulgarFraction;\nexports.ordinalPosition = ordinalPosition;\nconst span_js_1 = require(\"../audio/span.js\");\nconst DomUtil = require(\"../common/dom_util.js\");\nconst locale_js_1 = require(\"../l10n/locale.js\");\nconst transformers_js_1 = require(\"../l10n/transformers.js\");\nfunction ordinalCounter(_node, context) {\n    let counter = 0;\n    return function () {\n        return locale_js_1.LOCALE.NUMBERS.numericOrdinal(++counter) + ' ' + context;\n    };\n}\nfunction wordCounter(_node, context) {\n    let counter = 0;\n    return function () {\n        return locale_js_1.LOCALE.NUMBERS.numberToOrdinal(++counter, false) + ' ' + context;\n    };\n}\nfunction vulgarFraction(node) {\n    const conversion = (0, transformers_js_1.convertVulgarFraction)(node, locale_js_1.LOCALE.MESSAGES.MS.FRAC_OVER);\n    if (conversion.convertible &&\n        conversion.enumerator &&\n        conversion.denominator) {\n        return [\n            span_js_1.Span.node(locale_js_1.LOCALE.NUMBERS.numberToWords(conversion.enumerator), node.childNodes[0].childNodes[0], { separator: '' }),\n            span_js_1.Span.stringAttr(locale_js_1.LOCALE.NUMBERS.vulgarSep, { separator: '' }),\n            span_js_1.Span.node(locale_js_1.LOCALE.NUMBERS.numberToOrdinal(conversion.denominator, conversion.enumerator !== 1), node.childNodes[0].childNodes[1])\n        ];\n    }\n    return [span_js_1.Span.node(conversion.content || '', node)];\n}\nfunction ordinalPosition(node) {\n    const children = DomUtil.toArray(node.parentNode.childNodes);\n    return span_js_1.Span.singleton(locale_js_1.LOCALE.NUMBERS.numericOrdinal(children.indexOf(node) + 1).toString());\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ClearspeakRules = ClearspeakRules;\nconst dynamic_cstr_js_1 = require(\"../rule_engine/dynamic_cstr.js\");\nconst StoreUtil = require(\"../rule_engine/store_util.js\");\nconst ClearspeakUtil = require(\"./clearspeak_util.js\");\nconst MathspeakUtil = require(\"./mathspeak_util.js\");\nconst NumbersUtil = require(\"./numbers_util.js\");\nconst SpeechRules = require(\"./speech_rules.js\");\nfunction ClearspeakRules() {\n    SpeechRules.addStore(dynamic_cstr_js_1.DynamicCstr.BASE_LOCALE + '.speech.clearspeak', '', {\n        CTFpauseSeparator: StoreUtil.pauseSeparator,\n        CTFnodeCounter: ClearspeakUtil.nodeCounter,\n        CTFcontentIterator: StoreUtil.contentIterator,\n        CSFvulgarFraction: NumbersUtil.vulgarFraction,\n        CQFvulgarFractionSmall: ClearspeakUtil.isSmallVulgarFraction,\n        CQFcellsSimple: ClearspeakUtil.allCellsSimple,\n        CSFordinalExponent: ClearspeakUtil.ordinalExponent,\n        CSFwordOrdinal: ClearspeakUtil.wordOrdinal,\n        CQFmatchingFences: ClearspeakUtil.matchingFences,\n        CSFnestingDepth: ClearspeakUtil.nestingDepth,\n        CQFfencedArguments: ClearspeakUtil.fencedArguments,\n        CQFsimpleArguments: ClearspeakUtil.simpleArguments,\n        CQFspaceoutNumber: MathspeakUtil.spaceoutNumber\n    });\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.baselineVerbose = baselineVerbose;\nexports.baselineBrief = baselineBrief;\nexports.leftSuperscriptVerbose = leftSuperscriptVerbose;\nexports.leftSubscriptVerbose = leftSubscriptVerbose;\nexports.leftSuperscriptBrief = leftSuperscriptBrief;\nexports.leftSubscriptBrief = leftSubscriptBrief;\nconst MathspeakUtil = require(\"./mathspeak_util.js\");\nfunction baselineVerbose(node) {\n    const baseline = MathspeakUtil.baselineVerbose(node);\n    baseline[0].speech = baseline[0].speech.replace(/-$/, '');\n    return baseline;\n}\nfunction baselineBrief(node) {\n    const baseline = MathspeakUtil.baselineBrief(node);\n    baseline[0].speech = baseline[0].speech.replace(/-$/, '');\n    return baseline;\n}\nfunction leftSuperscriptVerbose(node) {\n    const leftIndex = MathspeakUtil.superscriptVerbose(node);\n    leftIndex[0].speech = leftIndex[0].speech.replace(/^exposant/, 'exposant gauche');\n    return leftIndex;\n}\nfunction leftSubscriptVerbose(node) {\n    const leftIndex = MathspeakUtil.subscriptVerbose(node);\n    leftIndex[0].speech = leftIndex[0].speech.replace(/^indice/, 'indice gauche');\n    return leftIndex;\n}\nfunction leftSuperscriptBrief(node) {\n    const leftIndex = MathspeakUtil.superscriptBrief(node);\n    leftIndex[0].speech = leftIndex[0].speech.replace(/^sup/, 'sup gauche');\n    return leftIndex;\n}\nfunction leftSubscriptBrief(node) {\n    const leftIndex = MathspeakUtil.subscriptBrief(node);\n    leftIndex[0].speech = leftIndex[0].speech.replace(/^sub/, 'sub gauche');\n    return leftIndex;\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.nestedFraction = nestedFraction;\nexports.openingFractionVerbose = openingFractionVerbose;\nexports.closingFractionVerbose = closingFractionVerbose;\nexports.openingFractionBrief = openingFractionBrief;\nexports.closingFractionBrief = closingFractionBrief;\nexports.openingFractionSbrief = openingFractionSbrief;\nexports.closingFractionSbrief = closingFractionSbrief;\nexports.overFractionSbrief = overFractionSbrief;\nexports.isSimpleIndex = isSimpleIndex;\nexports.nestedRadical = nestedRadical;\nexports.openingRadicalVerbose = openingRadicalVerbose;\nexports.closingRadicalVerbose = closingRadicalVerbose;\nexports.openingRadicalBrief = openingRadicalBrief;\nexports.closingRadicalBrief = closingRadicalBrief;\nexports.openingRadicalSbrief = openingRadicalSbrief;\nexports.getRootIndex = getRootIndex;\nexports.indexRadical = indexRadical;\nexports.indexRadicalVerbose = indexRadicalVerbose;\nexports.indexRadicalBrief = indexRadicalBrief;\nexports.indexRadicalSbrief = indexRadicalSbrief;\nexports.ordinalConversion = ordinalConversion;\nexports.decreasedOrdinalConversion = decreasedOrdinalConversion;\nexports.listOrdinalConversion = listOrdinalConversion;\nexports.checkDepth = checkDepth;\nexports.getDepthValue = getDepthValue;\nconst span_js_1 = require(\"../audio/span.js\");\nconst MathspeakUtil = require(\"./mathspeak_util.js\");\nconst locale_js_1 = require(\"../l10n/locale.js\");\nconst XpathUtil = require(\"../common/xpath_util.js\");\nfunction nestedFraction(node, expr, opt_end) {\n    const depth = MathspeakUtil.fractionNestingDepth(node);\n    const annotation = [...Array(depth)].map((_x) => expr);\n    if (opt_end) {\n        annotation.unshift(opt_end);\n    }\n    return annotation.join(locale_js_1.LOCALE.MESSAGES.regexp.JOINER_FRAC);\n}\nfunction openingFractionVerbose(node) {\n    return span_js_1.Span.singleton(nestedFraction(node, locale_js_1.LOCALE.MESSAGES.MS.START, locale_js_1.LOCALE.MESSAGES.MS.FRAC_V));\n}\nfunction closingFractionVerbose(node) {\n    return span_js_1.Span.singleton(nestedFraction(node, locale_js_1.LOCALE.MESSAGES.MS.END, locale_js_1.LOCALE.MESSAGES.MS.FRAC_V));\n}\nfunction openingFractionBrief(node) {\n    return span_js_1.Span.singleton(nestedFraction(node, locale_js_1.LOCALE.MESSAGES.MS.START, locale_js_1.LOCALE.MESSAGES.MS.FRAC_B));\n}\nfunction closingFractionBrief(node) {\n    return span_js_1.Span.singleton(nestedFraction(node, locale_js_1.LOCALE.MESSAGES.MS.END, locale_js_1.LOCALE.MESSAGES.MS.FRAC_B));\n}\nfunction openingFractionSbrief(node) {\n    const depth = MathspeakUtil.fractionNestingDepth(node);\n    if (depth === 1) {\n        return span_js_1.Span.singleton(locale_js_1.LOCALE.MESSAGES.MS.FRAC_S);\n    }\n    return span_js_1.Span.singleton(locale_js_1.LOCALE.FUNCTIONS.combineNestedFraction(locale_js_1.LOCALE.FUNCTIONS.radicalNestDepth(depth - 1), locale_js_1.LOCALE.MESSAGES.MS.NEST_FRAC, locale_js_1.LOCALE.MESSAGES.MS.FRAC_S));\n}\nfunction closingFractionSbrief(node) {\n    const depth = MathspeakUtil.fractionNestingDepth(node);\n    if (depth === 1) {\n        return span_js_1.Span.singleton(locale_js_1.LOCALE.MESSAGES.MS.ENDFRAC);\n    }\n    return span_js_1.Span.singleton(locale_js_1.LOCALE.FUNCTIONS.combineNestedFraction(locale_js_1.LOCALE.FUNCTIONS.radicalNestDepth(depth - 1), locale_js_1.LOCALE.MESSAGES.MS.NEST_FRAC, locale_js_1.LOCALE.MESSAGES.MS.ENDFRAC));\n}\nfunction overFractionSbrief(node) {\n    const depth = MathspeakUtil.fractionNestingDepth(node);\n    if (depth === 1) {\n        return span_js_1.Span.singleton(locale_js_1.LOCALE.MESSAGES.MS.FRAC_OVER);\n    }\n    return span_js_1.Span.singleton(locale_js_1.LOCALE.FUNCTIONS.combineNestedFraction(locale_js_1.LOCALE.FUNCTIONS.radicalNestDepth(depth - 1), locale_js_1.LOCALE.MESSAGES.MS.NEST_FRAC, locale_js_1.LOCALE.MESSAGES.MS.FRAC_OVER));\n}\nfunction isSimpleIndex(node) {\n    const index = XpathUtil.evalXPath('children/*[1]', node)[0]\n        .toString()\n        .match(/[^>⁢>]+<\\/[^>]*>/g);\n    return index.length === 1 ? [node] : [];\n}\nfunction nestedRadical(node, prefix, postfix) {\n    const depth = MathspeakUtil.radicalNestingDepth(node);\n    if (depth === 1)\n        return postfix;\n    return locale_js_1.LOCALE.FUNCTIONS.combineNestedRadical(locale_js_1.LOCALE.FUNCTIONS.radicalNestDepth(depth - 1), prefix, postfix);\n}\nfunction openingRadicalVerbose(node) {\n    return span_js_1.Span.singleton(nestedRadical(node, locale_js_1.LOCALE.MESSAGES.MS.NESTED, locale_js_1.LOCALE.MESSAGES.MS.STARTROOT));\n}\nfunction closingRadicalVerbose(node) {\n    return span_js_1.Span.singleton(nestedRadical(node, locale_js_1.LOCALE.MESSAGES.MS.NESTED, locale_js_1.LOCALE.MESSAGES.MS.ENDROOT));\n}\nfunction openingRadicalBrief(node) {\n    return span_js_1.Span.singleton(nestedRadical(node, locale_js_1.LOCALE.MESSAGES.MS.NEST_ROOT, locale_js_1.LOCALE.MESSAGES.MS.STARTROOT));\n}\nfunction closingRadicalBrief(node) {\n    return span_js_1.Span.singleton(nestedRadical(node, locale_js_1.LOCALE.MESSAGES.MS.NEST_ROOT, locale_js_1.LOCALE.MESSAGES.MS.ENDROOT));\n}\nfunction openingRadicalSbrief(node) {\n    return span_js_1.Span.singleton(nestedRadical(node, locale_js_1.LOCALE.MESSAGES.MS.NEST_ROOT, locale_js_1.LOCALE.MESSAGES.MS.ROOT));\n}\nfunction getRootIndex(node) {\n    const content = XpathUtil.evalXPath('children/*[1]', node)[0].textContent.trim();\n    return locale_js_1.LOCALE.MESSAGES.MSroots[content] || content + '제곱근';\n}\nfunction indexRadical(node, postfix) {\n    const index = getRootIndex(node);\n    return index ? index : postfix;\n}\nfunction indexRadicalVerbose(node) {\n    return span_js_1.Span.singleton(indexRadical(node, locale_js_1.LOCALE.MESSAGES.MS.ROOTINDEX));\n}\nfunction indexRadicalBrief(node) {\n    return span_js_1.Span.singleton(indexRadical(node, locale_js_1.LOCALE.MESSAGES.MS.ROOTINDEX));\n}\nfunction indexRadicalSbrief(node) {\n    return span_js_1.Span.singleton(indexRadical(node, locale_js_1.LOCALE.MESSAGES.MS.INDEX));\n}\nfunction ordinalConversion(node) {\n    const children = XpathUtil.evalXPath('children/*', node);\n    return span_js_1.Span.singleton(locale_js_1.LOCALE.NUMBERS.wordOrdinal(children.length));\n}\nfunction decreasedOrdinalConversion(node) {\n    const children = XpathUtil.evalXPath('children/*', node);\n    return span_js_1.Span.singleton(locale_js_1.LOCALE.NUMBERS.wordOrdinal(children.length - 1));\n}\nfunction listOrdinalConversion(node) {\n    const children = XpathUtil.evalXPath('children/*', node);\n    const content = XpathUtil.evalXPath('content/*', node);\n    return span_js_1.Span.singleton(locale_js_1.LOCALE.NUMBERS.wordOrdinal(children.length - content.length));\n}\nfunction checkDepth(node) {\n    const roleList = [];\n    const depth = getDepthValue(node, roleList);\n    return depth > 3 ? [] : [node];\n}\nfunction getDepthValue(node, roleList) {\n    const role = node.getAttribute('role');\n    const index = roleList.indexOf(role) > -1;\n    if (!index) {\n        roleList.push(role);\n    }\n    const children = XpathUtil.evalXPath('children/*', node);\n    let max = 0, cur = 0;\n    if (children.length) {\n        children.forEach((child) => {\n            cur = getDepthValue(child, roleList);\n            max = cur > max ? cur : max;\n        });\n        return max + 1;\n    }\n    return 0;\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.unitMultipliers = unitMultipliers;\nexports.oneLeft = oneLeft;\nconst auditory_description_js_1 = require(\"../audio/auditory_description.js\");\nconst XpathUtil = require(\"../common/xpath_util.js\");\nconst locale_js_1 = require(\"../l10n/locale.js\");\nconst semantic_meaning_js_1 = require(\"../semantic_tree/semantic_meaning.js\");\nfunction unitMultipliers(nodes, _context) {\n    const children = nodes;\n    let counter = 0;\n    return function () {\n        const descr = auditory_description_js_1.AuditoryDescription.create({\n            text: rightMostUnit(children[counter]) &&\n                leftMostUnit(children[counter + 1])\n                ? locale_js_1.LOCALE.MESSAGES.unitTimes\n                : ''\n        }, {});\n        counter++;\n        return [descr];\n    };\n}\nconst SCRIPT_ELEMENTS = [\n    semantic_meaning_js_1.SemanticType.SUPERSCRIPT,\n    semantic_meaning_js_1.SemanticType.SUBSCRIPT,\n    semantic_meaning_js_1.SemanticType.OVERSCORE,\n    semantic_meaning_js_1.SemanticType.UNDERSCORE\n];\nfunction rightMostUnit(node) {\n    while (node) {\n        if (node.getAttribute('role') === 'unit') {\n            return true;\n        }\n        const tag = node.tagName;\n        const children = XpathUtil.evalXPath('children/*', node);\n        node = (SCRIPT_ELEMENTS.indexOf(tag) !== -1\n            ? children[0]\n            : children[children.length - 1]);\n    }\n    return false;\n}\nfunction leftMostUnit(node) {\n    while (node) {\n        if (node.getAttribute('role') === 'unit') {\n            return true;\n        }\n        const children = XpathUtil.evalXPath('children/*', node);\n        node = children[0];\n    }\n    return false;\n}\nfunction oneLeft(node) {\n    while (node) {\n        if (node.tagName === 'number' && node.textContent === '1') {\n            return [node];\n        }\n        if (node.tagName !== 'infixop' ||\n            (node.getAttribute('role') !== 'multiplication' &&\n                node.getAttribute('role') !== 'implicit')) {\n            return [];\n        }\n        node = XpathUtil.evalXPath('children/*', node)[0];\n    }\n    return [];\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MathspeakRules = MathspeakRules;\nconst dynamic_cstr_js_1 = require(\"../rule_engine/dynamic_cstr.js\");\nconst StoreUtil = require(\"../rule_engine/store_util.js\");\nconst MathspeakFrenchUtil = require(\"./mathspeak_french_util.js\");\nconst MathspeakKoreanUtil = require(\"./mathspeak_korean_util.js\");\nconst MathspeakUtil = require(\"./mathspeak_util.js\");\nconst NumbersUtil = require(\"./numbers_util.js\");\nconst SpeechRules = require(\"./speech_rules.js\");\nconst UnitUtil = require(\"./unit_util.js\");\nfunction MathspeakRules() {\n    SpeechRules.addStore(dynamic_cstr_js_1.DynamicCstr.BASE_LOCALE + '.speech.mathspeak', '', {\n        CQFspaceoutNumber: MathspeakUtil.spaceoutNumber,\n        CQFspaceoutIdentifier: MathspeakUtil.spaceoutIdentifier,\n        CSFspaceoutText: MathspeakUtil.spaceoutText,\n        CSFopenFracVerbose: MathspeakUtil.openingFractionVerbose,\n        CSFcloseFracVerbose: MathspeakUtil.closingFractionVerbose,\n        CSFoverFracVerbose: MathspeakUtil.overFractionVerbose,\n        CSFopenFracBrief: MathspeakUtil.openingFractionBrief,\n        CSFcloseFracBrief: MathspeakUtil.closingFractionBrief,\n        CSFopenFracSbrief: MathspeakUtil.openingFractionSbrief,\n        CSFcloseFracSbrief: MathspeakUtil.closingFractionSbrief,\n        CSFoverFracSbrief: MathspeakUtil.overFractionSbrief,\n        CSFvulgarFraction: NumbersUtil.vulgarFraction,\n        CQFvulgarFractionSmall: MathspeakUtil.isSmallVulgarFraction,\n        CSFopenRadicalVerbose: MathspeakUtil.openingRadicalVerbose,\n        CSFcloseRadicalVerbose: MathspeakUtil.closingRadicalVerbose,\n        CSFindexRadicalVerbose: MathspeakUtil.indexRadicalVerbose,\n        CSFopenRadicalBrief: MathspeakUtil.openingRadicalBrief,\n        CSFcloseRadicalBrief: MathspeakUtil.closingRadicalBrief,\n        CSFindexRadicalBrief: MathspeakUtil.indexRadicalBrief,\n        CSFopenRadicalSbrief: MathspeakUtil.openingRadicalSbrief,\n        CSFindexRadicalSbrief: MathspeakUtil.indexRadicalSbrief,\n        CQFisSmallRoot: MathspeakUtil.smallRoot,\n        CSFsuperscriptVerbose: MathspeakUtil.superscriptVerbose,\n        CSFsuperscriptBrief: MathspeakUtil.superscriptBrief,\n        CSFsubscriptVerbose: MathspeakUtil.subscriptVerbose,\n        CSFsubscriptBrief: MathspeakUtil.subscriptBrief,\n        CSFbaselineVerbose: MathspeakUtil.baselineVerbose,\n        CSFbaselineBrief: MathspeakUtil.baselineBrief,\n        CSFleftsuperscriptVerbose: MathspeakUtil.superscriptVerbose,\n        CSFleftsubscriptVerbose: MathspeakUtil.subscriptVerbose,\n        CSFrightsuperscriptVerbose: MathspeakUtil.superscriptVerbose,\n        CSFrightsubscriptVerbose: MathspeakUtil.subscriptVerbose,\n        CSFleftsuperscriptBrief: MathspeakUtil.superscriptBrief,\n        CSFleftsubscriptBrief: MathspeakUtil.subscriptBrief,\n        CSFrightsuperscriptBrief: MathspeakUtil.superscriptBrief,\n        CSFrightsubscriptBrief: MathspeakUtil.subscriptBrief,\n        CSFunderscript: MathspeakUtil.nestedUnderscript,\n        CSFoverscript: MathspeakUtil.nestedOverscript,\n        CSFendscripts: MathspeakUtil.endscripts,\n        CTFordinalCounter: NumbersUtil.ordinalCounter,\n        CTFwordCounter: NumbersUtil.wordCounter,\n        CTFcontentIterator: StoreUtil.contentIterator,\n        CQFdetIsSimple: MathspeakUtil.determinantIsSimple,\n        CSFRemoveParens: MathspeakUtil.removeParens,\n        CQFresetNesting: MathspeakUtil.resetNestingDepth,\n        CGFbaselineConstraint: MathspeakUtil.generateBaselineConstraint,\n        CGFtensorRules: MathspeakUtil.generateTensorRules\n    });\n    SpeechRules.addStore('es.speech.mathspeak', dynamic_cstr_js_1.DynamicCstr.BASE_LOCALE + '.speech.mathspeak', {\n        CTFunitMultipliers: UnitUtil.unitMultipliers,\n        CQFoneLeft: UnitUtil.oneLeft\n    });\n    SpeechRules.addStore('fr.speech.mathspeak', dynamic_cstr_js_1.DynamicCstr.BASE_LOCALE + '.speech.mathspeak', {\n        CSFbaselineVerbose: MathspeakFrenchUtil.baselineVerbose,\n        CSFbaselineBrief: MathspeakFrenchUtil.baselineBrief,\n        CSFleftsuperscriptVerbose: MathspeakFrenchUtil.leftSuperscriptVerbose,\n        CSFleftsubscriptVerbose: MathspeakFrenchUtil.leftSubscriptVerbose,\n        CSFleftsuperscriptBrief: MathspeakFrenchUtil.leftSuperscriptBrief,\n        CSFleftsubscriptBrief: MathspeakFrenchUtil.leftSubscriptBrief\n    });\n    SpeechRules.addStore('ko.speech.mathspeak', dynamic_cstr_js_1.DynamicCstr.BASE_LOCALE + '.speech.mathspeak', {\n        CSFopenFracVerbose: MathspeakKoreanUtil.openingFractionVerbose,\n        CSFcloseFracVerbose: MathspeakKoreanUtil.closingFractionVerbose,\n        CSFopenFracBrief: MathspeakKoreanUtil.openingFractionBrief,\n        CSFcloseFracBrief: MathspeakKoreanUtil.closingFractionBrief,\n        CSFopenFracSbrief: MathspeakKoreanUtil.openingFractionSbrief,\n        CSFoverFracSbrief: MathspeakKoreanUtil.overFractionSbrief,\n        CSFcloseFracSbrief: MathspeakKoreanUtil.closingFractionSbrief,\n        CQFisSimpleIndex: MathspeakKoreanUtil.isSimpleIndex,\n        CSFindexRadicalVerbose: MathspeakKoreanUtil.indexRadicalVerbose,\n        CSFindexRadicalBrief: MathspeakKoreanUtil.indexRadicalBrief,\n        CSFindexRadicalSbrief: MathspeakKoreanUtil.indexRadicalSbrief,\n        CSFopenRadicalVerbose: MathspeakKoreanUtil.openingRadicalVerbose,\n        CSFcloseRadicalVerbose: MathspeakKoreanUtil.closingRadicalVerbose,\n        CSFopenRadicalBrief: MathspeakKoreanUtil.openingRadicalBrief,\n        CSFcloseRadicalBrief: MathspeakKoreanUtil.closingRadicalBrief,\n        CSFopenRadicalSbrief: MathspeakKoreanUtil.openingRadicalSbrief\n    });\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.openingFraction = openingFraction;\nexports.closingFraction = closingFraction;\nexports.overFraction = overFraction;\nexports.overBevelledFraction = overBevelledFraction;\nexports.hyperFractionBoundary = hyperFractionBoundary;\nexports.openingRadical = openingRadical;\nexports.closingRadical = closingRadical;\nexports.indexRadical = indexRadical;\nexports.relationIterator = relationIterator;\nexports.implicitIterator = implicitIterator;\nexports.contentIterator = contentIterator;\nconst auditory_description_js_1 = require(\"../audio/auditory_description.js\");\nconst span_js_1 = require(\"../audio/span.js\");\nconst DomUtil = require(\"../common/dom_util.js\");\nconst XpathUtil = require(\"../common/xpath_util.js\");\nconst grammar_js_1 = require(\"../rule_engine/grammar.js\");\nconst engine_js_1 = require(\"../common/engine.js\");\nconst semantic_annotations_js_1 = require(\"../semantic_tree/semantic_annotations.js\");\nconst semantic_annotator_js_1 = require(\"../semantic_tree/semantic_annotator.js\");\nconst semantic_meaning_js_1 = require(\"../semantic_tree/semantic_meaning.js\");\nconst locale_js_1 = require(\"../l10n/locale.js\");\nconst MathspeakUtil = require(\"./mathspeak_util.js\");\nconst store_util_js_1 = require(\"../rule_engine/store_util.js\");\nfunction openingFraction(node) {\n    const depth = MathspeakUtil.fractionNestingDepth(node);\n    return span_js_1.Span.singleton(new Array(depth).join(locale_js_1.LOCALE.MESSAGES.MS.FRACTION_REPEAT) +\n        locale_js_1.LOCALE.MESSAGES.MS.FRACTION_START);\n}\nfunction closingFraction(node) {\n    const depth = MathspeakUtil.fractionNestingDepth(node);\n    return span_js_1.Span.singleton(new Array(depth).join(locale_js_1.LOCALE.MESSAGES.MS.FRACTION_REPEAT) +\n        locale_js_1.LOCALE.MESSAGES.MS.FRACTION_END);\n}\nfunction overFraction(node) {\n    const depth = MathspeakUtil.fractionNestingDepth(node);\n    return span_js_1.Span.singleton(new Array(depth).join(locale_js_1.LOCALE.MESSAGES.MS.FRACTION_REPEAT) +\n        locale_js_1.LOCALE.MESSAGES.MS.FRACTION_OVER);\n}\nfunction overBevelledFraction(node) {\n    const depth = MathspeakUtil.fractionNestingDepth(node);\n    return span_js_1.Span.singleton(new Array(depth).join(locale_js_1.LOCALE.MESSAGES.MS.FRACTION_REPEAT) +\n        '⠸' +\n        locale_js_1.LOCALE.MESSAGES.MS.FRACTION_OVER);\n}\nfunction hyperFractionBoundary(node) {\n    return locale_js_1.LOCALE.MESSAGES.regexp.HYPER ===\n        MathspeakUtil.fractionNestingDepth(node).toString()\n        ? [node]\n        : [];\n}\nfunction nestedRadical(node, postfix) {\n    const depth = radicalNestingDepth(node);\n    return span_js_1.Span.singleton(depth === 1\n        ? postfix\n        : new Array(depth).join(locale_js_1.LOCALE.MESSAGES.MS.NESTED) + postfix);\n}\nfunction radicalNestingDepth(node, opt_depth) {\n    const depth = opt_depth || 0;\n    if (!node.parentNode) {\n        return depth;\n    }\n    return radicalNestingDepth(node.parentNode, node.tagName === 'root' || node.tagName === 'sqrt' ? depth + 1 : depth);\n}\nfunction openingRadical(node) {\n    return nestedRadical(node, locale_js_1.LOCALE.MESSAGES.MS.STARTROOT);\n}\nfunction closingRadical(node) {\n    return nestedRadical(node, locale_js_1.LOCALE.MESSAGES.MS.ENDROOT);\n}\nfunction indexRadical(node) {\n    return nestedRadical(node, locale_js_1.LOCALE.MESSAGES.MS.ROOTINDEX);\n}\nfunction enlargeFence(text) {\n    const start = '⠠';\n    if (text.length === 1) {\n        return start + text;\n    }\n    const neut = '⠳';\n    const split = text.split('');\n    if (split.every(function (x) {\n        return x === neut;\n    })) {\n        return start + split.join(start);\n    }\n    return text.slice(0, -1) + start + text.slice(-1);\n}\ngrammar_js_1.Grammar.getInstance().setCorrection('enlargeFence', enlargeFence);\nconst NUMBER_PROPAGATORS = [\n    semantic_meaning_js_1.SemanticType.MULTIREL,\n    semantic_meaning_js_1.SemanticType.RELSEQ,\n    semantic_meaning_js_1.SemanticType.APPL,\n    semantic_meaning_js_1.SemanticType.ROW,\n    semantic_meaning_js_1.SemanticType.LINE\n];\nconst NUMBER_INHIBITORS = [\n    semantic_meaning_js_1.SemanticType.SUBSCRIPT,\n    semantic_meaning_js_1.SemanticType.SUPERSCRIPT,\n    semantic_meaning_js_1.SemanticType.OVERSCORE,\n    semantic_meaning_js_1.SemanticType.UNDERSCORE\n];\nfunction checkParent(node, info) {\n    const parent = node.parent;\n    if (!parent) {\n        return false;\n    }\n    const type = parent.type;\n    if (NUMBER_PROPAGATORS.indexOf(type) !== -1 ||\n        (type === semantic_meaning_js_1.SemanticType.PREFIXOP &&\n            parent.role === semantic_meaning_js_1.SemanticRole.NEGATIVE &&\n            !info.script &&\n            !info.enclosed) ||\n        (type === semantic_meaning_js_1.SemanticType.PREFIXOP &&\n            parent.role === semantic_meaning_js_1.SemanticRole.GEOMETRY)) {\n        return true;\n    }\n    if (type === semantic_meaning_js_1.SemanticType.PUNCTUATED) {\n        if (!info.enclosed || parent.role === semantic_meaning_js_1.SemanticRole.TEXT) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction propagateNumber(node, info) {\n    if (!node.childNodes.length) {\n        if (checkParent(node, info)) {\n            info.number = true;\n            info.script = false;\n            info.enclosed = false;\n        }\n        return [\n            info['number'] ? 'number' : '',\n            { number: false, enclosed: info.enclosed, script: info.script }\n        ];\n    }\n    if (NUMBER_INHIBITORS.indexOf(node.type) !== -1) {\n        info.script = true;\n    }\n    if (node.type === semantic_meaning_js_1.SemanticType.FENCED) {\n        info.number = false;\n        info.enclosed = true;\n        return ['', info];\n    }\n    if (node.type === semantic_meaning_js_1.SemanticType.PREFIXOP &&\n        node.role !== semantic_meaning_js_1.SemanticRole.GEOMETRY &&\n        node.role !== semantic_meaning_js_1.SemanticRole.NEGATIVE) {\n        info.number = false;\n        return ['', info];\n    }\n    if (checkParent(node, info)) {\n        info.number = true;\n        info.enclosed = false;\n    }\n    return ['', info];\n}\n(0, semantic_annotations_js_1.register)(new semantic_annotator_js_1.SemanticVisitor('nemeth', 'number', propagateNumber, { number: true }));\nfunction annotateDepth(node) {\n    if (!node.parent) {\n        return [1];\n    }\n    const depth = parseInt(node.parent.annotation['depth'][0]);\n    return [depth + 1];\n}\n(0, semantic_annotations_js_1.register)(new semantic_annotator_js_1.SemanticVisitor('depth', 'depth', annotateDepth));\n(0, semantic_annotations_js_1.activate)('depth', 'depth');\nfunction relationIterator(nodes, context) {\n    var _a;\n    const childNodes = nodes.slice(0);\n    let first = true;\n    const parentNode = nodes[0].parentNode.parentNode;\n    const match = (_a = parentNode.getAttribute('annotation')) === null || _a === void 0 ? void 0 : _a.match(/depth:(\\d+)/);\n    const depth = match ? match[1] : '';\n    let contentNodes;\n    if (nodes.length > 0) {\n        contentNodes = XpathUtil.evalXPath('./content/*', parentNode);\n    }\n    else {\n        contentNodes = [];\n    }\n    return function () {\n        const content = contentNodes.shift();\n        const leftChild = childNodes.shift();\n        const rightChild = childNodes[0];\n        const contextDescr = context\n            ? [auditory_description_js_1.AuditoryDescription.create({ text: context }, { translate: true })]\n            : [];\n        if (!content) {\n            return contextDescr;\n        }\n        const base = leftChild\n            ? MathspeakUtil.nestedSubSuper(leftChild, '', {\n                sup: locale_js_1.LOCALE.MESSAGES.MS.SUPER,\n                sub: locale_js_1.LOCALE.MESSAGES.MS.SUB\n            })\n            : '';\n        const left = (leftChild && DomUtil.tagName(leftChild) !== 'EMPTY') ||\n            (first && parentNode && parentNode.previousSibling)\n            ? [\n                auditory_description_js_1.AuditoryDescription.create({ text: locale_js_1.LOCALE.MESSAGES.regexp.SPACE + base }, {})\n            ]\n            : [];\n        const right = (rightChild && DomUtil.tagName(rightChild) !== 'EMPTY') ||\n            (!contentNodes.length && parentNode && parentNode.nextSibling)\n            ? [\n                auditory_description_js_1.AuditoryDescription.create({ text: locale_js_1.LOCALE.MESSAGES.regexp.SPACE }, {})\n            ]\n            : [];\n        const descrs = engine_js_1.Engine.evaluateNode(content);\n        descrs.unshift(new auditory_description_js_1.AuditoryDescription({ text: '', layout: `beginrel${depth}` }));\n        descrs.push(new auditory_description_js_1.AuditoryDescription({ text: '', layout: `endrel${depth}` }));\n        first = false;\n        return contextDescr.concat(left, descrs, right);\n    };\n}\nfunction implicitIterator(nodes, context) {\n    const childNodes = nodes.slice(0);\n    let contentNodes;\n    if (nodes.length > 0) {\n        contentNodes = XpathUtil.evalXPath('../../content/*', nodes[0]);\n    }\n    else {\n        contentNodes = [];\n    }\n    return function () {\n        const leftChild = childNodes.shift();\n        const rightChild = childNodes[0];\n        const content = contentNodes.shift();\n        const contextDescr = context\n            ? [auditory_description_js_1.AuditoryDescription.create({ text: context }, { translate: true })]\n            : [];\n        if (!content) {\n            return contextDescr;\n        }\n        const left = leftChild && DomUtil.tagName(leftChild) === 'NUMBER';\n        const right = rightChild && DomUtil.tagName(rightChild) === 'NUMBER';\n        return contextDescr.concat(left && right && content.getAttribute('role') === semantic_meaning_js_1.SemanticRole.SPACE\n            ? [\n                auditory_description_js_1.AuditoryDescription.create({ text: locale_js_1.LOCALE.MESSAGES.regexp.SPACE }, {})\n            ]\n            : []);\n    };\n}\nfunction ignoreEnglish(text) {\n    return (0, grammar_js_1.correctFont)(text, locale_js_1.LOCALE.ALPHABETS.languagePrefix.english);\n}\ngrammar_js_1.Grammar.getInstance().setCorrection('ignoreEnglish', ignoreEnglish);\nfunction contentIterator(nodes, context) {\n    var _a;\n    const func = (0, store_util_js_1.contentIterator)(nodes, context);\n    const parentNode = nodes[0].parentNode.parentNode;\n    const match = (_a = parentNode.getAttribute('annotation')) === null || _a === void 0 ? void 0 : _a.match(/depth:(\\d+)/);\n    const depth = match ? match[1] : '';\n    return function () {\n        const descrs = func();\n        descrs.unshift(new auditory_description_js_1.AuditoryDescription({ text: '', layout: `beginrel${depth}` }));\n        descrs.push(new auditory_description_js_1.AuditoryDescription({ text: '', layout: `endrel${depth}` }));\n        return descrs;\n    };\n}\nfunction literal(text) {\n    const evalStr = (e) => engine_js_1.Engine.getInstance().evaluator(e, engine_js_1.Engine.getInstance().dynamicCstr);\n    return Array.from(text).map(evalStr).join('');\n}\ngrammar_js_1.Grammar.getInstance().setCorrection('literal', literal);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PrefixRules = PrefixRules;\nexports.OtherRules = OtherRules;\nexports.BrailleRules = BrailleRules;\nconst dynamic_cstr_js_1 = require(\"../rule_engine/dynamic_cstr.js\");\nconst StoreUtil = require(\"../rule_engine/store_util.js\");\nconst MathspeakKoreanUtil = require(\"./mathspeak_korean_util.js\");\nconst MathspeakUtil = require(\"./mathspeak_util.js\");\nconst NemethUtil = require(\"./nemeth_util.js\");\nconst NumbersUtil = require(\"./numbers_util.js\");\nconst SpeechRules = require(\"./speech_rules.js\");\nfunction PrefixRules() {\n    SpeechRules.addStore('en.prefix.default', '', {\n        CSFordinalPosition: NumbersUtil.ordinalPosition\n    });\n}\nfunction OtherRules() {\n    SpeechRules.addStore('en.speech.chromevox', '', {\n        CTFnodeCounter: StoreUtil.nodeCounter,\n        CTFcontentIterator: StoreUtil.contentIterator\n    });\n    SpeechRules.addStore('en.speech.emacspeak', 'en.speech.chromevox', {\n        CQFvulgarFractionSmall: MathspeakUtil.isSmallVulgarFraction,\n        CSFvulgarFraction: NumbersUtil.vulgarFraction\n    });\n    SpeechRules.addStore('ko.summary.', 'ko.speech.mathspeak', {\n        CSFordinalConversion: MathspeakKoreanUtil.ordinalConversion,\n        CSFdecreasedOrdinalConversion: MathspeakKoreanUtil.decreasedOrdinalConversion,\n        CSFlistOrdinalConversion: MathspeakKoreanUtil.listOrdinalConversion\n    });\n}\nfunction BrailleRules() {\n    SpeechRules.addStore('nemeth.braille.default', dynamic_cstr_js_1.DynamicCstr.BASE_LOCALE + '.speech.mathspeak', {\n        CSFopenFraction: NemethUtil.openingFraction,\n        CSFcloseFraction: NemethUtil.closingFraction,\n        CSFoverFraction: NemethUtil.overFraction,\n        CSFoverBevFraction: NemethUtil.overBevelledFraction,\n        CQFhyperFraction: NemethUtil.hyperFractionBoundary,\n        CSFopenRadical: NemethUtil.openingRadical,\n        CSFcloseRadical: NemethUtil.closingRadical,\n        CSFindexRadical: NemethUtil.indexRadical,\n        CSFsubscript: MathspeakUtil.subscriptVerbose,\n        CSFsuperscript: MathspeakUtil.superscriptVerbose,\n        CSFbaseline: MathspeakUtil.baselineVerbose,\n        CGFtensorRules: (st) => MathspeakUtil.generateTensorRules(st, false),\n        CTFcontentIterator: NemethUtil.contentIterator,\n        CTFrelationIterator: NemethUtil.relationIterator,\n        CTFimplicitIterator: NemethUtil.implicitIterator\n    });\n    SpeechRules.addStore('euro.braille.default', 'nemeth.braille.default', {});\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.init = init;\nconst clearspeak_rules_js_1 = require(\"./clearspeak_rules.js\");\nconst mathspeak_rules_js_1 = require(\"./mathspeak_rules.js\");\nconst other_rules_js_1 = require(\"./other_rules.js\");\nlet INIT = false;\nfunction init() {\n    if (INIT) {\n        return;\n    }\n    (0, mathspeak_rules_js_1.MathspeakRules)();\n    (0, clearspeak_rules_js_1.ClearspeakRules)();\n    (0, other_rules_js_1.PrefixRules)();\n    (0, other_rules_js_1.OtherRules)();\n    (0, other_rules_js_1.BrailleRules)();\n    INIT = true;\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OutputError = exports.Precondition = exports.Action = exports.Component = exports.ActionType = exports.SpeechRule = void 0;\nconst engine_js_1 = require(\"../common/engine.js\");\nconst Grammar = require(\"./grammar.js\");\nclass SpeechRule {\n    constructor(name, dynamicCstr, precondition, action) {\n        this.name = name;\n        this.dynamicCstr = dynamicCstr;\n        this.precondition = precondition;\n        this.action = action;\n        this.context = null;\n    }\n    toString() {\n        return (this.name +\n            ' | ' +\n            this.dynamicCstr.toString() +\n            ' | ' +\n            this.precondition.toString() +\n            ' ==> ' +\n            this.action.toString());\n    }\n}\nexports.SpeechRule = SpeechRule;\nvar ActionType;\n(function (ActionType) {\n    ActionType[\"NODE\"] = \"NODE\";\n    ActionType[\"MULTI\"] = \"MULTI\";\n    ActionType[\"TEXT\"] = \"TEXT\";\n    ActionType[\"PERSONALITY\"] = \"PERSONALITY\";\n})(ActionType || (exports.ActionType = ActionType = {}));\nfunction actionFromString(str) {\n    switch (str) {\n        case '[n]':\n            return ActionType.NODE;\n        case '[m]':\n            return ActionType.MULTI;\n        case '[t]':\n            return ActionType.TEXT;\n        case '[p]':\n            return ActionType.PERSONALITY;\n        default:\n            throw 'Parse error: ' + str;\n    }\n}\nfunction actionToString(speechType) {\n    switch (speechType) {\n        case ActionType.NODE:\n            return '[n]';\n        case ActionType.MULTI:\n            return '[m]';\n        case ActionType.TEXT:\n            return '[t]';\n        case ActionType.PERSONALITY:\n            return '[p]';\n        default:\n            throw 'Unknown type error: ' + speechType;\n    }\n}\nclass Component {\n    static grammarFromString(grammar) {\n        return Grammar.Grammar.parseInput(grammar);\n    }\n    static fromString(input) {\n        const output = {\n            type: actionFromString(input.substring(0, 3))\n        };\n        let rest = input.slice(3).trim();\n        if (!rest) {\n            throw new OutputError('Missing content.');\n        }\n        switch (output.type) {\n            case ActionType.TEXT:\n                if (rest[0] === '\"') {\n                    const quotedString = splitString(rest, '\\\\(')[0].trim();\n                    if (quotedString.slice(-1) !== '\"') {\n                        throw new OutputError('Invalid string syntax.');\n                    }\n                    output.content = quotedString;\n                    rest = rest.slice(quotedString.length).trim();\n                    if (rest.indexOf('(') === -1) {\n                        rest = '';\n                    }\n                    break;\n                }\n            case ActionType.NODE:\n            case ActionType.MULTI:\n                {\n                    const bracket = rest.indexOf(' (');\n                    if (bracket === -1) {\n                        output.content = rest.trim();\n                        rest = '';\n                        break;\n                    }\n                    output.content = rest.substring(0, bracket).trim();\n                    rest = rest.slice(bracket).trim();\n                }\n                break;\n        }\n        if (rest) {\n            const attributes = Component.attributesFromString(rest);\n            if (attributes.grammar) {\n                output.grammar = attributes.grammar;\n                delete attributes.grammar;\n            }\n            if (Object.keys(attributes).length) {\n                output.attributes = attributes;\n            }\n        }\n        return new Component(output);\n    }\n    static attributesFromString(attrs) {\n        if (attrs[0] !== '(' || attrs.slice(-1) !== ')') {\n            throw new OutputError('Invalid attribute expression: ' + attrs);\n        }\n        const attributes = {};\n        const attribs = splitString(attrs.slice(1, -1), ',');\n        for (const attr of attribs) {\n            const colon = attr.indexOf(':');\n            if (colon === -1) {\n                attributes[attr.trim()] = 'true';\n            }\n            else {\n                const key = attr.substring(0, colon).trim();\n                const value = attr.slice(colon + 1).trim();\n                attributes[key] =\n                    key === Grammar.ATTRIBUTE\n                        ? Component.grammarFromString(value)\n                        : value;\n            }\n        }\n        return attributes;\n    }\n    constructor({ type, content, attributes, grammar }) {\n        this.type = type;\n        this.content = content;\n        this.attributes = attributes;\n        this.grammar = grammar;\n    }\n    toString() {\n        let strs = '';\n        strs += actionToString(this.type);\n        strs += this.content ? ' ' + this.content : '';\n        const attrs = this.attributesToString();\n        strs += attrs ? ' ' + attrs : '';\n        return strs;\n    }\n    grammarToString() {\n        return this.getGrammar().join(':');\n    }\n    getGrammar() {\n        if (!this.grammar) {\n            return [];\n        }\n        const attribs = [];\n        for (const [key, val] of Object.entries(this.grammar)) {\n            attribs.push(val === true ? key : val === false ? `!${key}` : `${key}=${val}`);\n        }\n        return attribs;\n    }\n    attributesToString() {\n        const attribs = this.getAttributes();\n        const grammar = this.grammarToString();\n        if (grammar) {\n            attribs.push('grammar:' + grammar);\n        }\n        return attribs.length > 0 ? '(' + attribs.join(', ') + ')' : '';\n    }\n    getAttributes() {\n        if (!this.attributes) {\n            return [];\n        }\n        const attribs = [];\n        for (const [key, val] of Object.entries(this.attributes)) {\n            attribs.push(val === 'true' ? key : `${key}:${val}`);\n        }\n        return attribs;\n    }\n}\nexports.Component = Component;\nclass Action {\n    static fromString(input) {\n        const comps = splitString(input, ';')\n            .filter(function (x) {\n            return x.match(/\\S/);\n        })\n            .map(function (x) {\n            return x.trim();\n        });\n        const newComps = [];\n        for (let i = 0, m = comps.length; i < m; i++) {\n            const comp = Component.fromString(comps[i]);\n            if (comp) {\n                newComps.push(comp);\n            }\n        }\n        Action.naiveSpan(newComps);\n        return new Action(newComps);\n    }\n    static naiveSpan(comps) {\n        var _a;\n        let first = false;\n        for (let i = 0, comp; (comp = comps[i]); i++) {\n            if (first &&\n                (comp.type !== ActionType.TEXT ||\n                    (comp.content[0] !== '\"' && !comp.content.match(/^CSF/))))\n                continue;\n            if (!first && comp.type === ActionType.PERSONALITY)\n                continue;\n            if (!first) {\n                first = true;\n                continue;\n            }\n            if ((_a = comp.attributes) === null || _a === void 0 ? void 0 : _a.span)\n                continue;\n            const next = comps[i + 1];\n            if (next && next.type !== ActionType.NODE)\n                continue;\n            Action.addNaiveSpan(comp, next ? next.content : 'LAST');\n        }\n    }\n    static addNaiveSpan(comp, span) {\n        if (!comp.attributes) {\n            comp.attributes = {};\n        }\n        comp.attributes['span'] = span;\n    }\n    constructor(components) {\n        this.components = components;\n    }\n    toString() {\n        const comps = this.components.map(function (c) {\n            return c.toString();\n        });\n        return comps.join('; ');\n    }\n}\nexports.Action = Action;\nclass Precondition {\n    static constraintValue(constr, priorities) {\n        for (let i = 0, regexp; (regexp = priorities[i]); i++) {\n            if (constr.match(regexp)) {\n                return ++i;\n            }\n        }\n        return 0;\n    }\n    toString() {\n        const constrs = this.constraints.join(', ');\n        return `${this.query}, ${constrs} (${this.priority}, ${this.rank})`;\n    }\n    constructor(query, ...cstr) {\n        this.query = query;\n        this.constraints = cstr;\n        const [exists, user] = this.presetPriority();\n        this.priority = exists ? user : this.calculatePriority();\n    }\n    calculatePriority() {\n        const query = Precondition.constraintValue(this.query, Precondition.queryPriorities);\n        if (!query) {\n            return 0;\n        }\n        const match = this.query.match(/^self::.+\\[(.+)\\]/);\n        let attr = 0;\n        if ((match === null || match === void 0 ? void 0 : match.length) && match[1]) {\n            const inner = match[1];\n            attr = Precondition.constraintValue(inner, Precondition.attributePriorities);\n        }\n        return query * 100 + attr * 10;\n    }\n    presetPriority() {\n        if (!this.constraints.length) {\n            return [false, 0];\n        }\n        const last = this.constraints[this.constraints.length - 1].match(/^priority=(.*$)/);\n        if (!last) {\n            return [false, 0];\n        }\n        this.constraints.pop();\n        const numb = parseFloat(last[1]);\n        return [true, isNaN(numb) ? 0 : numb];\n    }\n}\nexports.Precondition = Precondition;\nPrecondition.queryPriorities = [\n    /^self::\\*$/,\n    /^self::[\\w-]+$/,\n    /^self::\\*\\[.+\\]$/,\n    /^self::[\\w-]+\\[.+\\]$/\n];\nPrecondition.attributePriorities = [\n    /^@[\\w-]+$/,\n    /^@[\\w-]+!=\".+\"$/,\n    /^not\\(contains\\(@[\\w-]+,\\s*\".+\"\\)\\)$/,\n    /^contains\\(@[\\w-]+,\".+\"\\)$/,\n    /^@[\\w-]+=\".+\"$/\n];\nclass OutputError extends engine_js_1.SREError {\n    constructor(msg) {\n        super(msg);\n        this.name = 'RuleError';\n    }\n}\nexports.OutputError = OutputError;\nfunction splitString(str, sep) {\n    const strList = [];\n    let prefix = '';\n    while (str !== '') {\n        const sepPos = str.search(sep);\n        if (sepPos === -1) {\n            if ((str.match(/\"/g) || []).length % 2 !== 0) {\n                throw new OutputError('Invalid string in expression: ' + str);\n            }\n            strList.push(prefix + str);\n            prefix = '';\n            str = '';\n        }\n        else if ((str.substring(0, sepPos).match(/\"/g) || []).length % 2 === 0) {\n            strList.push(prefix + str.substring(0, sepPos));\n            prefix = '';\n            str = str.substring(sepPos + 1);\n        }\n        else {\n            const nextQuot = str.substring(sepPos).search('\"');\n            if (nextQuot === -1) {\n                throw new OutputError('Invalid string in expression: ' + str);\n            }\n            else {\n                prefix = prefix + str.substring(0, sepPos + nextQuot + 1);\n                str = str.substring(sepPos + nextQuot + 1);\n            }\n        }\n    }\n    if (prefix) {\n        strList.push(prefix);\n    }\n    return strList;\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CustomGenerators = exports.ContextFunctions = exports.CustomStrings = exports.CustomQueries = void 0;\nclass FunctionsStore {\n    constructor(prefix, store) {\n        this.prefix = prefix;\n        this.store = store;\n    }\n    add(name, func) {\n        if (this.checkCustomFunctionSyntax_(name)) {\n            this.store[name] = func;\n        }\n    }\n    addStore(store) {\n        const keys = Object.keys(store.store);\n        for (let i = 0, key; (key = keys[i]); i++) {\n            this.add(key, store.store[key]);\n        }\n    }\n    lookup(name) {\n        return this.store[name];\n    }\n    checkCustomFunctionSyntax_(name) {\n        const reg = new RegExp('^' + this.prefix);\n        if (!name.match(reg)) {\n            console.error('FunctionError: Invalid function name. Expected prefix ' + this.prefix);\n            return false;\n        }\n        return true;\n    }\n}\nclass CustomQueries extends FunctionsStore {\n    constructor() {\n        const store = {};\n        super('CQF', store);\n    }\n}\nexports.CustomQueries = CustomQueries;\nclass CustomStrings extends FunctionsStore {\n    constructor() {\n        const store = {};\n        super('CSF', store);\n    }\n}\nexports.CustomStrings = CustomStrings;\nclass ContextFunctions extends FunctionsStore {\n    constructor() {\n        const store = {};\n        super('CTF', store);\n    }\n}\nexports.ContextFunctions = ContextFunctions;\nclass CustomGenerators extends FunctionsStore {\n    constructor() {\n        const store = {};\n        super('CGF', store);\n    }\n}\nexports.CustomGenerators = CustomGenerators;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeechRuleContext = void 0;\nconst span_js_1 = require(\"../audio/span.js\");\nconst XpathUtil = require(\"../common/xpath_util.js\");\nconst srf = require(\"./speech_rule_functions.js\");\nclass SpeechRuleContext {\n    constructor() {\n        this.customQueries = new srf.CustomQueries();\n        this.customStrings = new srf.CustomStrings();\n        this.contextFunctions = new srf.ContextFunctions();\n        this.customGenerators = new srf.CustomGenerators();\n    }\n    applyCustomQuery(node, funcName) {\n        const func = this.customQueries.lookup(funcName);\n        return func ? func(node) : null;\n    }\n    applySelector(node, expr) {\n        const result = this.applyCustomQuery(node, expr);\n        return result || XpathUtil.evalXPath(expr, node);\n    }\n    applyQuery(node, expr) {\n        const results = this.applySelector(node, expr);\n        if (results.length > 0) {\n            return results[0];\n        }\n        return null;\n    }\n    applyConstraint(node, expr) {\n        const result = this.applyQuery(node, expr);\n        return !!result || XpathUtil.evaluateBoolean(expr, node);\n    }\n    constructString(node, expr) {\n        const result = this.constructString_(node, expr);\n        return Array.isArray(result)\n            ? result.map((x) => x.speech).join('')\n            : result;\n    }\n    constructSpan(node, expr, def) {\n        const result = this.constructString_(node, expr);\n        if (Array.isArray(result)) {\n            const last = result[result.length - 1];\n            last.attributes = Object.assign({}, def, last.attributes);\n            return result;\n        }\n        else {\n            return [span_js_1.Span.node(result, node, def)];\n        }\n    }\n    constructString_(node, expr) {\n        if (!expr) {\n            return '';\n        }\n        if (expr.charAt(0) === '\"') {\n            return expr.slice(1, -1);\n        }\n        const func = this.customStrings.lookup(expr);\n        if (func) {\n            return func(node);\n        }\n        return XpathUtil.evaluateString(expr, node);\n    }\n    parse(functions) {\n        const functs = Array.isArray(functions)\n            ? functions\n            : Object.entries(functions);\n        for (const func of functs) {\n            const kind = func[0].slice(0, 3);\n            switch (kind) {\n                case 'CQF':\n                    this.customQueries.add(func[0], func[1]);\n                    break;\n                case 'CSF':\n                    this.customStrings.add(func[0], func[1]);\n                    break;\n                case 'CTF':\n                    this.contextFunctions.add(func[0], func[1]);\n                    break;\n                case 'CGF':\n                    this.customGenerators.add(func[0], func[1]);\n                    break;\n                default:\n                    console.error('FunctionError: Invalid function name ' + func[0]);\n            }\n        }\n    }\n}\nexports.SpeechRuleContext = SpeechRuleContext;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseRuleStore = void 0;\nconst auditory_description_js_1 = require(\"../audio/auditory_description.js\");\nconst dynamic_cstr_js_1 = require(\"./dynamic_cstr.js\");\nconst speech_rule_js_1 = require(\"./speech_rule.js\");\nconst speech_rule_context_js_1 = require(\"./speech_rule_context.js\");\nclass BaseRuleStore {\n    static compareStaticConstraints_(cstr1, cstr2) {\n        if (cstr1.length !== cstr2.length) {\n            return false;\n        }\n        for (let i = 0, cstr; (cstr = cstr1[i]); i++) {\n            if (cstr2.indexOf(cstr) === -1) {\n                return false;\n            }\n        }\n        return true;\n    }\n    static comparePreconditions_(rule1, rule2) {\n        const prec1 = rule1.precondition;\n        const prec2 = rule2.precondition;\n        if (prec1.query !== prec2.query) {\n            return false;\n        }\n        return BaseRuleStore.compareStaticConstraints_(prec1.constraints, prec2.constraints);\n    }\n    constructor() {\n        this.context = new speech_rule_context_js_1.SpeechRuleContext();\n        this.parseOrder = dynamic_cstr_js_1.DynamicCstr.DEFAULT_ORDER;\n        this.parser = new dynamic_cstr_js_1.DynamicCstrParser(this.parseOrder);\n        this.locale = dynamic_cstr_js_1.DynamicCstr.DEFAULT_VALUES[dynamic_cstr_js_1.Axis.LOCALE];\n        this.modality = dynamic_cstr_js_1.DynamicCstr.DEFAULT_VALUES[dynamic_cstr_js_1.Axis.MODALITY];\n        this.domain = '';\n        this.initialized = false;\n        this.inherits = null;\n        this.kind = 'standard';\n        this.customTranscriptions = {};\n        this.preconditions = new Map();\n        this.speechRules_ = [];\n        this.rank = 0;\n        this.parseMethods = {\n            Rule: this.defineRule,\n            Generator: this.generateRules,\n            Action: this.defineAction,\n            Precondition: this.definePrecondition,\n            Ignore: this.ignoreRules\n        };\n    }\n    defineRule(name, dynamic, action, prec, ...args) {\n        const postc = this.parseAction(action);\n        const fullPrec = this.parsePrecondition(prec, args);\n        const dynamicCstr = this.parseCstr(dynamic);\n        if (!(postc && fullPrec && dynamicCstr)) {\n            console.error(`Rule Error: ${prec}, (${dynamic}): ${action}`);\n            return null;\n        }\n        const rule = new speech_rule_js_1.SpeechRule(name, dynamicCstr, fullPrec, postc);\n        rule.precondition.rank = this.rank++;\n        this.addRule(rule);\n        return rule;\n    }\n    addRule(rule) {\n        rule.context = this.context;\n        this.speechRules_.unshift(rule);\n    }\n    deleteRule(rule) {\n        const index = this.speechRules_.indexOf(rule);\n        if (index !== -1) {\n            this.speechRules_.splice(index, 1);\n        }\n    }\n    findRule(pred) {\n        for (let i = 0, rule; (rule = this.speechRules_[i]); i++) {\n            if (pred(rule)) {\n                return rule;\n            }\n        }\n        return null;\n    }\n    findAllRules(pred) {\n        return this.speechRules_.filter(pred);\n    }\n    evaluateDefault(node) {\n        const rest = node.textContent.slice(0);\n        if (rest.match(/^\\s+$/)) {\n            return this.evaluateWhitespace(rest);\n        }\n        return this.evaluateString(rest);\n    }\n    evaluateWhitespace(_str) {\n        return [];\n    }\n    evaluateCustom(str) {\n        const trans = this.customTranscriptions[str];\n        return trans !== undefined\n            ? auditory_description_js_1.AuditoryDescription.create({ text: trans }, { adjust: true, translate: false })\n            : null;\n    }\n    evaluateCharacter(str) {\n        return (this.evaluateCustom(str) ||\n            auditory_description_js_1.AuditoryDescription.create({ text: str }, { adjust: true, translate: true }));\n    }\n    removeDuplicates(rule) {\n        for (let i = this.speechRules_.length - 1, oldRule; (oldRule = this.speechRules_[i]); i--) {\n            if (oldRule !== rule &&\n                rule.dynamicCstr.equal(oldRule.dynamicCstr) &&\n                BaseRuleStore.comparePreconditions_(oldRule, rule)) {\n                this.speechRules_.splice(i, 1);\n            }\n        }\n    }\n    getSpeechRules() {\n        return this.speechRules_;\n    }\n    setSpeechRules(rules) {\n        this.speechRules_ = rules;\n    }\n    getPreconditions() {\n        return this.preconditions;\n    }\n    parseCstr(cstr) {\n        try {\n            return this.parser.parse(this.locale +\n                '.' +\n                this.modality +\n                (this.domain ? '.' + this.domain : '') +\n                '.' +\n                cstr);\n        }\n        catch (err) {\n            if (err.name === 'RuleError') {\n                console.error('Rule Error ', `Illegal Dynamic Constraint: ${cstr}.`, err.message);\n                return null;\n            }\n            else {\n                throw err;\n            }\n        }\n    }\n    parsePrecondition(query, rest) {\n        try {\n            const queryCstr = this.parsePrecondition_(query);\n            query = queryCstr[0];\n            let restCstr = queryCstr.slice(1);\n            for (const cstr of rest) {\n                restCstr = restCstr.concat(this.parsePrecondition_(cstr));\n            }\n            return new speech_rule_js_1.Precondition(query, ...restCstr);\n        }\n        catch (err) {\n            if (err.name === 'RuleError') {\n                console.error('Rule Error ', `Illegal preconditions: ${query}, ${rest}.`, err.message);\n                return null;\n            }\n            else {\n                throw err;\n            }\n        }\n    }\n    parseAction(action) {\n        try {\n            return speech_rule_js_1.Action.fromString(action);\n        }\n        catch (err) {\n            if (err.name === 'RuleError') {\n                console.error('Rule Error ', `Illegal action: ${action}.`, err.message);\n                return null;\n            }\n            else {\n                throw err;\n            }\n        }\n    }\n    parse(ruleSet) {\n        this.modality = ruleSet.modality || this.modality;\n        this.locale = ruleSet.locale || this.locale;\n        this.domain = ruleSet.domain || this.domain;\n        this.context.parse(ruleSet.functions || []);\n        if (ruleSet.kind !== 'actions') {\n            this.kind = ruleSet.kind || this.kind;\n            this.inheritRules();\n        }\n        this.parseRules(ruleSet.rules || []);\n    }\n    parseRules(rules) {\n        for (let i = 0, rule; (rule = rules[i]); i++) {\n            const type = rule[0];\n            const method = this.parseMethods[type];\n            if (type && method) {\n                method.apply(this, rule.slice(1));\n            }\n        }\n    }\n    generateRules(generator) {\n        const method = this.context.customGenerators.lookup(generator);\n        if (method) {\n            method(this);\n        }\n    }\n    defineAction(name, action) {\n        let postc;\n        try {\n            postc = speech_rule_js_1.Action.fromString(action);\n        }\n        catch (err) {\n            if (err.name === 'RuleError') {\n                console.error('Action Error ', action, err.message);\n                return;\n            }\n            else {\n                throw err;\n            }\n        }\n        const prec = this.getFullPreconditions(name);\n        if (!prec) {\n            console.error(`Action Error: No precondition for action ${name}`);\n            return;\n        }\n        this.ignoreRules(name);\n        const regexp = new RegExp('^\\\\w+\\\\.\\\\w+\\\\.' + (this.domain ? '\\\\w+\\\\.' : ''));\n        prec.conditions.forEach(([dynamic, prec]) => {\n            const newDynamic = this.parseCstr(dynamic.toString().replace(regexp, ''));\n            this.addRule(new speech_rule_js_1.SpeechRule(name, newDynamic, prec, postc));\n        });\n    }\n    getFullPreconditions(name) {\n        const prec = this.preconditions.get(name);\n        if (prec || !this.inherits) {\n            return prec;\n        }\n        return this.inherits.getFullPreconditions(name);\n    }\n    definePrecondition(name, dynamic, prec, ...args) {\n        const fullPrec = this.parsePrecondition(prec, args);\n        const dynamicCstr = this.parseCstr(dynamic);\n        if (!(fullPrec && dynamicCstr)) {\n            console.error(`Precondition Error: ${prec}, (${dynamic})`);\n            return;\n        }\n        fullPrec.rank = this.rank++;\n        this.preconditions.set(name, new Condition(dynamicCstr, fullPrec));\n    }\n    inheritRules() {\n        if (!this.inherits || !this.inherits.getSpeechRules().length) {\n            return;\n        }\n        const regexp = new RegExp('^\\\\w+\\\\.\\\\w+\\\\.' + (this.domain ? '\\\\w+\\\\.' : ''));\n        this.inherits.getSpeechRules().forEach((rule) => {\n            const newDynamic = this.parseCstr(rule.dynamicCstr.toString().replace(regexp, ''));\n            this.addRule(new speech_rule_js_1.SpeechRule(rule.name, newDynamic, rule.precondition, rule.action));\n        });\n    }\n    ignoreRules(name, ...cstrs) {\n        let rules = this.findAllRules((r) => r.name === name);\n        if (!cstrs.length) {\n            rules.forEach(this.deleteRule.bind(this));\n            return;\n        }\n        let rest = [];\n        for (const cstr of cstrs) {\n            const dynamic = this.parseCstr(cstr);\n            for (const rule of rules) {\n                if (dynamic.equal(rule.dynamicCstr)) {\n                    this.deleteRule(rule);\n                }\n                else {\n                    rest.push(rule);\n                }\n            }\n            rules = rest;\n            rest = [];\n        }\n    }\n    parsePrecondition_(cstr) {\n        const generator = this.context.customGenerators.lookup(cstr);\n        return generator ? generator() : [cstr];\n    }\n}\nexports.BaseRuleStore = BaseRuleStore;\nclass Condition {\n    constructor(base, condition) {\n        this.base = base;\n        this._conditions = [];\n        this.constraints = [];\n        this.allCstr = {};\n        this.constraints.push(base);\n        this.addCondition(base, condition);\n    }\n    get conditions() {\n        return this._conditions;\n    }\n    addConstraint(dynamic) {\n        if (this.constraints.filter((cstr) => cstr.equal(dynamic)).length) {\n            return;\n        }\n        this.constraints.push(dynamic);\n        const newConds = [];\n        for (const [dyn, pre] of this.conditions) {\n            if (this.base.equal(dyn)) {\n                newConds.push([dynamic, pre]);\n            }\n        }\n        this._conditions = this._conditions.concat(newConds);\n    }\n    addBaseCondition(cond) {\n        this.addCondition(this.base, cond);\n    }\n    addFullCondition(cond) {\n        this.constraints.forEach((cstr) => this.addCondition(cstr, cond));\n    }\n    addCondition(dynamic, cond) {\n        const condStr = dynamic.toString() + ' ' + cond.toString();\n        if (this.allCstr.condStr) {\n            return;\n        }\n        this.allCstr[condStr] = true;\n        this._conditions.push([dynamic, cond]);\n    }\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MathStore = void 0;\nconst BaseUtil = require(\"../common/base_util.js\");\nconst locale_js_1 = require(\"../l10n/locale.js\");\nconst semantic_annotations_js_1 = require(\"../semantic_tree/semantic_annotations.js\");\nconst base_rule_store_js_1 = require(\"./base_rule_store.js\");\nconst speech_rule_js_1 = require(\"./speech_rule.js\");\nclass MathStore extends base_rule_store_js_1.BaseRuleStore {\n    constructor() {\n        super();\n        this.annotators = [];\n        this.parseMethods['Alias'] = this.defineAlias;\n        this.parseMethods['SpecializedRule'] = this.defineSpecializedRule;\n        this.parseMethods['Specialized'] = this.defineSpecialized;\n    }\n    initialize() {\n        if (this.initialized) {\n            return;\n        }\n        this.annotations();\n        this.initialized = true;\n    }\n    annotations() {\n        for (let i = 0, annotator; (annotator = this.annotators[i]); i++) {\n            (0, semantic_annotations_js_1.activate)(this.domain, annotator);\n        }\n    }\n    defineAlias(name, prec, ...args) {\n        const fullPrec = this.parsePrecondition(prec, args);\n        if (!fullPrec) {\n            console.error(`Precondition Error: ${prec} ${args}`);\n            return;\n        }\n        const condition = this.preconditions.get(name);\n        if (!condition) {\n            console.error(`Alias Error: No precondition by the name of ${name}`);\n            return;\n        }\n        condition.addFullCondition(fullPrec);\n    }\n    defineRulesAlias(name, query, ...args) {\n        const rules = this.findAllRules(function (rule) {\n            return rule.name === name;\n        });\n        if (rules.length === 0) {\n            throw new speech_rule_js_1.OutputError('Rule with name ' + name + ' does not exist.');\n        }\n        const keep = [];\n        const findKeep = (rule) => {\n            const cstr = rule.dynamicCstr.toString();\n            const action = rule.action.toString();\n            for (let i = 0, k; (k = keep[i]); i++) {\n                if (k.action === action && k.cstr === cstr) {\n                    return false;\n                }\n            }\n            keep.push({ cstr: cstr, action: action });\n            return true;\n        };\n        rules.forEach((rule) => {\n            if (findKeep(rule)) {\n                this.addAlias_(rule, query, args);\n            }\n        });\n    }\n    defineSpecializedRule(name, oldDynamic, newDynamic, opt_action) {\n        const dynamicCstr = this.parseCstr(oldDynamic);\n        const rule = this.findRule((rule) => rule.name === name && dynamicCstr.equal(rule.dynamicCstr));\n        const newCstr = this.parseCstr(newDynamic);\n        if (!rule && opt_action) {\n            throw new speech_rule_js_1.OutputError('Rule named ' + name + ' with style ' + oldDynamic + ' does not exist.');\n        }\n        const action = opt_action ? speech_rule_js_1.Action.fromString(opt_action) : rule.action;\n        const newRule = new speech_rule_js_1.SpeechRule(rule.name, newCstr, rule.precondition, action);\n        this.addRule(newRule);\n    }\n    defineSpecialized(name, _old, dynamic) {\n        const cstr = this.parseCstr(dynamic);\n        if (!cstr) {\n            console.error(`Dynamic Constraint Error: ${dynamic}`);\n            return;\n        }\n        const condition = this.preconditions.get(name);\n        if (!condition) {\n            console.error(`Alias Error: No precondition by the name of ${name}`);\n            return;\n        }\n        condition.addConstraint(cstr);\n    }\n    evaluateString(str) {\n        const descs = [];\n        if (str.match(/^\\s+$/)) {\n            return descs;\n        }\n        let num = this.matchNumber(str);\n        if (num && num.length === str.length) {\n            descs.push(this.evaluateCharacter(num.number));\n            return descs;\n        }\n        const split = BaseUtil.removeEmpty(str.replace(/\\s/g, ' ').split(' '));\n        for (let i = 0, s; (s = split[i]); i++) {\n            if (s.length === 1) {\n                descs.push(this.evaluateCharacter(s));\n            }\n            else if (s.match(new RegExp('^[' + locale_js_1.LOCALE.MESSAGES.regexp.TEXT + ']+$'))) {\n                descs.push(this.evaluateCharacter(s));\n            }\n            else {\n                let rest = s;\n                while (rest) {\n                    num = this.matchNumber(rest);\n                    const alpha = rest.match(new RegExp('^[' + locale_js_1.LOCALE.MESSAGES.regexp.TEXT + ']+'));\n                    if (num) {\n                        descs.push(this.evaluateCharacter(num.number));\n                        rest = rest.substring(num.length);\n                    }\n                    else if (alpha) {\n                        descs.push(this.evaluateCharacter(alpha[0]));\n                        rest = rest.substring(alpha[0].length);\n                    }\n                    else {\n                        const chars = Array.from(rest);\n                        const chr = chars[0];\n                        descs.push(this.evaluateCharacter(chr));\n                        rest = chars.slice(1).join('');\n                    }\n                }\n            }\n        }\n        return descs;\n    }\n    parse(ruleSet) {\n        super.parse(ruleSet);\n        this.annotators = ruleSet['annotators'] || [];\n    }\n    addAlias_(rule, query, cstrList) {\n        const prec = this.parsePrecondition(query, cstrList);\n        const newRule = new speech_rule_js_1.SpeechRule(rule.name, rule.dynamicCstr, prec, rule.action);\n        newRule.name = rule.name;\n        this.addRule(newRule);\n    }\n    matchNumber(str) {\n        const locNum = str.match(new RegExp('^' + locale_js_1.LOCALE.MESSAGES.regexp.NUMBER));\n        const enNum = str.match(new RegExp('^' + MathStore.regexp.NUMBER));\n        if (!locNum && !enNum) {\n            return null;\n        }\n        const isEn = enNum && enNum[0] === str;\n        const isLoc = (locNum && locNum[0] === str) || !isEn;\n        if (isLoc) {\n            return locNum ? { number: locNum[0], length: locNum[0].length } : null;\n        }\n        const num = enNum[0]\n            .replace(new RegExp(MathStore.regexp.DIGIT_GROUP, 'g'), 'X')\n            .replace(new RegExp(MathStore.regexp.DECIMAL_MARK, 'g'), locale_js_1.LOCALE.MESSAGES.regexp.DECIMAL_MARK)\n            .replace(/X/g, locale_js_1.LOCALE.MESSAGES.regexp.DIGIT_GROUP.replace(/\\\\/g, ''));\n        return { number: num, length: enNum[0].length };\n    }\n}\nexports.MathStore = MathStore;\nMathStore.regexp = {\n    NUMBER: '((\\\\d{1,3})(?=(,| ))((,| )\\\\d{3})*(\\\\.\\\\d+)?)|^\\\\d*\\\\.\\\\d+|^\\\\d+',\n    DECIMAL_MARK: '\\\\.',\n    DIGIT_GROUP: ','\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EuroStore = exports.BrailleStore = void 0;\nconst math_store_js_1 = require(\"./math_store.js\");\nconst semantic_annotations_js_1 = require(\"../semantic_tree/semantic_annotations.js\");\nconst semantic_attr_js_1 = require(\"../semantic_tree/semantic_attr.js\");\nconst semantic_meaning_js_1 = require(\"../semantic_tree/semantic_meaning.js\");\nclass BrailleStore extends math_store_js_1.MathStore {\n    constructor() {\n        super(...arguments);\n        this.modality = 'braille';\n        this.customTranscriptions = {\n            '\\u22ca': '⠈⠡⠳'\n        };\n    }\n    evaluateString(str) {\n        const descs = [];\n        const text = Array.from(str);\n        for (let i = 0; i < text.length; i++) {\n            descs.push(this.evaluateCharacter(text[i]));\n        }\n        return descs;\n    }\n    annotations() {\n        for (let i = 0, annotator; (annotator = this.annotators[i]); i++) {\n            (0, semantic_annotations_js_1.activate)(this.locale, annotator);\n        }\n    }\n}\nexports.BrailleStore = BrailleStore;\nclass EuroStore extends BrailleStore {\n    constructor() {\n        super(...arguments);\n        this.locale = 'euro';\n        this.customTranscriptions = {};\n        this.customCommands = {\n            '\\\\cdot': '*',\n            '\\\\lt': '<',\n            '\\\\gt': '>'\n        };\n        this.lastSpecial = false;\n        this.specialChars = ['^', '_', '{', '}'];\n    }\n    evaluateString(str) {\n        const regexp = /(\\\\[a-z]+|\\\\{|\\\\}|\\\\\\\\)/i;\n        const split = str.split(regexp);\n        const cleaned = this.cleanup(split);\n        return super.evaluateString(cleaned);\n    }\n    cleanup(commands) {\n        const cleaned = [];\n        let intext = false;\n        let lastcom = null;\n        for (let command of commands) {\n            if (command.match(/^\\\\/)) {\n                if (command === '\\\\text') {\n                    intext = true;\n                }\n                if (this.addSpace(semantic_attr_js_1.SemanticMap.LatexCommands.get(command))) {\n                    cleaned.push(' ');\n                }\n                command = this.customCommands[command] || command;\n                const newcom = command.match(/^\\\\/);\n                if (newcom && command.match(/^\\\\[a-zA-Z]+$/) && lastcom) {\n                    cleaned.push(' ');\n                }\n                lastcom = newcom ? command : null;\n                cleaned.push(command);\n                continue;\n            }\n            const rest = command.split('');\n            for (const char of rest) {\n                if (intext) {\n                    cleaned.push(char);\n                    intext = char !== '}';\n                    lastcom = null;\n                    continue;\n                }\n                if (char.match(/[a-z]/i) && lastcom) {\n                    lastcom = null;\n                    cleaned.push(' ');\n                    cleaned.push(char);\n                    continue;\n                }\n                if (char.match(/\\s/))\n                    continue;\n                if (this.addSpace(char)) {\n                    cleaned.push(' ');\n                }\n                cleaned.push(char);\n                lastcom = null;\n            }\n        }\n        return cleaned.join('');\n    }\n    addSpace(char) {\n        if (!char)\n            return false;\n        if (this.specialChars.indexOf(char) !== -1) {\n            this.lastSpecial = true;\n            return false;\n        }\n        if (this.lastSpecial) {\n            this.lastSpecial = false;\n            return false;\n        }\n        const meaning = semantic_attr_js_1.SemanticMap.Meaning.get(char);\n        return (meaning.type === semantic_meaning_js_1.SemanticType.OPERATOR ||\n            meaning.type === semantic_meaning_js_1.SemanticType.RELATION ||\n            (meaning.type === semantic_meaning_js_1.SemanticType.PUNCTUATION &&\n                meaning.role === semantic_meaning_js_1.SemanticRole.COLON));\n    }\n}\nexports.EuroStore = EuroStore;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TrieNodeKind = void 0;\nvar TrieNodeKind;\n(function (TrieNodeKind) {\n    TrieNodeKind[\"ROOT\"] = \"root\";\n    TrieNodeKind[\"DYNAMIC\"] = \"dynamic\";\n    TrieNodeKind[\"QUERY\"] = \"query\";\n    TrieNodeKind[\"BOOLEAN\"] = \"boolean\";\n    TrieNodeKind[\"STATIC\"] = \"static\";\n})(TrieNodeKind || (exports.TrieNodeKind = TrieNodeKind = {}));\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StaticTrieNode = exports.AbstractTrieNode = void 0;\nconst debugger_js_1 = require(\"../common/debugger.js\");\nconst trie_node_js_1 = require(\"./trie_node.js\");\nclass AbstractTrieNode {\n    constructor(constraint, test) {\n        this.constraint = constraint;\n        this.test = test;\n        this.children_ = {};\n        this.kind = trie_node_js_1.TrieNodeKind.ROOT;\n    }\n    getConstraint() {\n        return this.constraint;\n    }\n    getKind() {\n        return this.kind;\n    }\n    applyTest(object) {\n        return this.test(object);\n    }\n    addChild(node) {\n        const constraint = node.getConstraint();\n        const child = this.children_[constraint];\n        this.children_[constraint] = node;\n        return child;\n    }\n    getChild(constraint) {\n        return this.children_[constraint];\n    }\n    getChildren() {\n        const children = [];\n        for (const val of Object.values(this.children_)) {\n            children.push(val);\n        }\n        return children;\n    }\n    findChildren(object) {\n        const children = [];\n        for (const val of Object.values(this.children_)) {\n            if (val.applyTest(object)) {\n                children.push(val);\n            }\n        }\n        return children;\n    }\n    removeChild(constraint) {\n        delete this.children_[constraint];\n    }\n    toString() {\n        return this.constraint;\n    }\n}\nexports.AbstractTrieNode = AbstractTrieNode;\nclass StaticTrieNode extends AbstractTrieNode {\n    constructor(constraint, test) {\n        super(constraint, test);\n        this.rule_ = null;\n        this.kind = trie_node_js_1.TrieNodeKind.STATIC;\n    }\n    getRule() {\n        return this.rule_;\n    }\n    setRule(rule) {\n        if (this.rule_) {\n            debugger_js_1.Debugger.getInstance().output('Replacing rule ' + this.rule_ + ' with ' + rule);\n        }\n        this.rule_ = rule;\n    }\n    toString() {\n        const rule = this.getRule();\n        return rule\n            ? this.constraint + '\\n' + '==> ' + this.getRule().action\n            : this.constraint;\n    }\n}\nexports.StaticTrieNode = StaticTrieNode;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getNode = getNode;\nconst DomUtil = require(\"../common/dom_util.js\");\nconst XpathUtil = require(\"../common/xpath_util.js\");\nconst grammar_js_1 = require(\"../rule_engine/grammar.js\");\nconst MathCompoundStore = require(\"../rule_engine/math_compound_store.js\");\nconst abstract_trie_node_js_1 = require(\"./abstract_trie_node.js\");\nconst abstract_trie_node_js_2 = require(\"./abstract_trie_node.js\");\nconst trie_node_js_1 = require(\"./trie_node.js\");\nfunction getNode(kind, constraint, context) {\n    switch (kind) {\n        case trie_node_js_1.TrieNodeKind.ROOT:\n            return new RootTrieNode();\n        case trie_node_js_1.TrieNodeKind.DYNAMIC:\n            return new DynamicTrieNode(constraint);\n        case trie_node_js_1.TrieNodeKind.QUERY:\n            return new QueryTrieNode(constraint, context);\n        case trie_node_js_1.TrieNodeKind.BOOLEAN:\n            return new BooleanTrieNode(constraint, context);\n        default:\n            return null;\n    }\n}\nclass RootTrieNode extends abstract_trie_node_js_1.AbstractTrieNode {\n    constructor() {\n        super('', () => true);\n        this.kind = trie_node_js_1.TrieNodeKind.ROOT;\n    }\n}\nclass DynamicTrieNode extends abstract_trie_node_js_1.AbstractTrieNode {\n    constructor(constraint) {\n        super(constraint, (axis) => axis === constraint);\n        this.kind = trie_node_js_1.TrieNodeKind.DYNAMIC;\n    }\n}\nconst comparator = {\n    '=': (x, y) => x === y,\n    '!=': (x, y) => x !== y,\n    '<': (x, y) => x < y,\n    '>': (x, y) => x > y,\n    '<=': (x, y) => x <= y,\n    '>=': (x, y) => x >= y\n};\nfunction constraintTest(constraint) {\n    if (constraint.match(/^self::\\*$/)) {\n        return (_node) => true;\n    }\n    if (constraint.match(/^self::\\w+$/)) {\n        const tag = constraint.slice(6).toUpperCase();\n        return (node) => node.tagName && DomUtil.tagName(node) === tag;\n    }\n    if (constraint.match(/^self::\\w+:\\w+$/)) {\n        const inter = constraint.split(':');\n        const namespace = XpathUtil.resolveNameSpace(inter[2]);\n        if (!namespace) {\n            return null;\n        }\n        const tag = inter[3].toUpperCase();\n        return (node) => node.localName &&\n            node.localName.toUpperCase() === tag &&\n            node.namespaceURI === namespace;\n    }\n    if (constraint.match(/^@\\w+$/)) {\n        const attr = constraint.slice(1);\n        return (node) => node.hasAttribute && node.hasAttribute(attr);\n    }\n    if (constraint.match(/^@\\w+=\"[\\w\\d ]+\"$/)) {\n        const split = constraint.split('=');\n        const attr = split[0].slice(1);\n        const value = split[1].slice(1, -1);\n        return (node) => node.hasAttribute &&\n            node.hasAttribute(attr) &&\n            node.getAttribute(attr) === value;\n    }\n    if (constraint.match(/^@\\w+!=\"[\\w\\d ]+\"$/)) {\n        const split = constraint.split('!=');\n        const attr = split[0].slice(1);\n        const value = split[1].slice(1, -1);\n        return (node) => !node.hasAttribute ||\n            !node.hasAttribute(attr) ||\n            node.getAttribute(attr) !== value;\n    }\n    if (constraint.match(/^contains\\(\\s*@grammar\\s*,\\s*\"[\\w\\d ]+\"\\s*\\)$/)) {\n        const split = constraint.split('\"');\n        const value = split[1];\n        return (_node) => !!grammar_js_1.Grammar.getInstance().getParameter(value);\n    }\n    if (constraint.match(/^not\\(\\s*contains\\(\\s*@grammar\\s*,\\s*\"[\\w\\d ]+\"\\s*\\)\\s*\\)$/)) {\n        const split = constraint.split('\"');\n        const value = split[1];\n        return (_node) => !grammar_js_1.Grammar.getInstance().getParameter(value);\n    }\n    if (constraint.match(/^name\\(\\.\\.\\/\\.\\.\\)=\"\\w+\"$/)) {\n        const split = constraint.split('\"');\n        const tag = split[1].toUpperCase();\n        return (node) => {\n            var _a, _b;\n            return ((_b = (_a = node.parentNode) === null || _a === void 0 ? void 0 : _a.parentNode) === null || _b === void 0 ? void 0 : _b.tagName) &&\n                DomUtil.tagName(node.parentNode.parentNode) === tag;\n        };\n    }\n    if (constraint.match(/^count\\(preceding-sibling::\\*\\)=\\d+$/)) {\n        const split = constraint.split('=');\n        const num = parseInt(split[1], 10);\n        return (node) => { var _a; return ((_a = node.parentNode) === null || _a === void 0 ? void 0 : _a.childNodes[num]) === node; };\n    }\n    if (constraint.match(/^.+\\[@category!?=\".+\"\\]$/)) {\n        let [, query, equality, category] = constraint.match(/^(.+)\\[@category(!?=)\"(.+)\"\\]$/);\n        const unit = category.match(/^unit:(.+)$/);\n        let add = '';\n        if (unit) {\n            category = unit[1];\n            add = ':unit';\n        }\n        return (node) => {\n            const xpath = XpathUtil.evalXPath(query, node)[0];\n            if (xpath) {\n                const result = MathCompoundStore.lookupCategory(xpath.textContent + add);\n                return equality === '=' ? result === category : result !== category;\n            }\n            return false;\n        };\n    }\n    if (constraint.match(/^string-length\\(.+\\)\\W+\\d+/)) {\n        const [, select, comp, count] = constraint.match(/^string-length\\((.+)\\)(\\W+)(\\d+)/);\n        const func = comparator[comp] || comparator['='];\n        const numb = parseInt(count, 10);\n        return (node) => {\n            const xpath = XpathUtil.evalXPath(select, node)[0];\n            if (!xpath) {\n                return false;\n            }\n            return func(Array.from(xpath.textContent).length, numb);\n        };\n    }\n    return null;\n}\nclass QueryTrieNode extends abstract_trie_node_js_2.StaticTrieNode {\n    constructor(constraint, context) {\n        super(constraint, constraintTest(constraint));\n        this.context = context;\n        this.kind = trie_node_js_1.TrieNodeKind.QUERY;\n    }\n    applyTest(object) {\n        return this.test\n            ? this.test(object)\n            : this.context.applyQuery(object, this.constraint) === object;\n    }\n}\nclass BooleanTrieNode extends abstract_trie_node_js_2.StaticTrieNode {\n    constructor(constraint, context) {\n        super(constraint, constraintTest(constraint));\n        this.context = context;\n        this.kind = trie_node_js_1.TrieNodeKind.BOOLEAN;\n    }\n    applyTest(object) {\n        return this.test\n            ? this.test(object)\n            : this.context.applyConstraint(object, this.constraint);\n    }\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Trie = void 0;\nconst trie_node_js_1 = require(\"./trie_node.js\");\nconst trie_node_factory_js_1 = require(\"./trie_node_factory.js\");\nclass Trie {\n    static collectRules_(root) {\n        const rules = [];\n        let explore = [root];\n        while (explore.length) {\n            const node = explore.shift();\n            if (node.getKind() === trie_node_js_1.TrieNodeKind.QUERY ||\n                node.getKind() === trie_node_js_1.TrieNodeKind.BOOLEAN) {\n                const rule = node.getRule();\n                if (rule) {\n                    rules.unshift(rule);\n                }\n            }\n            explore = explore.concat(node.getChildren());\n        }\n        return rules;\n    }\n    static printWithDepth_(node, depth, str) {\n        const prefix = new Array(depth + 2).join(depth.toString()) + ': ';\n        str += prefix + node.toString() + '\\n';\n        const children = node.getChildren();\n        for (let i = 0, child; (child = children[i]); i++) {\n            str = Trie.printWithDepth_(child, depth + 1, str);\n        }\n        return str;\n    }\n    static order_(node) {\n        const children = node.getChildren();\n        if (!children.length) {\n            return 0;\n        }\n        const max = Math.max.apply(null, children.map(Trie.order_));\n        return Math.max(children.length, max);\n    }\n    constructor() {\n        this.root = (0, trie_node_factory_js_1.getNode)(trie_node_js_1.TrieNodeKind.ROOT, '', null);\n    }\n    addRule(rule) {\n        let node = this.root;\n        const context = rule.context;\n        const dynamicCstr = rule.dynamicCstr.getValues();\n        for (let i = 0, l = dynamicCstr.length; i < l; i++) {\n            node = this.addNode_(node, dynamicCstr[i], trie_node_js_1.TrieNodeKind.DYNAMIC, context);\n        }\n        node = this.addNode_(node, rule.precondition.query, trie_node_js_1.TrieNodeKind.QUERY, context);\n        const booleans = rule.precondition.constraints;\n        for (let i = 0, l = booleans.length; i < l; i++) {\n            node = this.addNode_(node, booleans[i], trie_node_js_1.TrieNodeKind.BOOLEAN, context);\n        }\n        node.setRule(rule);\n    }\n    lookupRules(xml, dynamic) {\n        let nodes = [this.root];\n        const rules = [];\n        while (dynamic.length) {\n            const dynamicSet = dynamic.shift();\n            const newNodes = [];\n            while (nodes.length) {\n                const node = nodes.shift();\n                const children = node.getChildren();\n                children.forEach((child) => {\n                    if (child.getKind() !== trie_node_js_1.TrieNodeKind.DYNAMIC ||\n                        dynamicSet.indexOf(child.getConstraint()) !== -1) {\n                        newNodes.push(child);\n                    }\n                });\n            }\n            nodes = newNodes.slice();\n        }\n        while (nodes.length) {\n            const node = nodes.shift();\n            if (node.getRule) {\n                const rule = node.getRule();\n                if (rule) {\n                    rules.push(rule);\n                }\n            }\n            const children = node.findChildren(xml);\n            nodes = nodes.concat(children);\n        }\n        return rules;\n    }\n    hasSubtrie(cstrs) {\n        let subtrie = this.root;\n        for (let i = 0, l = cstrs.length; i < l; i++) {\n            const cstr = cstrs[i];\n            subtrie = subtrie.getChild(cstr);\n            if (!subtrie) {\n                return false;\n            }\n        }\n        return true;\n    }\n    toString() {\n        return Trie.printWithDepth_(this.root, 0, '');\n    }\n    collectRules(root = this.root) {\n        return Trie.collectRules_(root);\n    }\n    order() {\n        return Trie.order_(this.root);\n    }\n    enumerate(opt_info) {\n        return this.enumerate_(this.root, opt_info);\n    }\n    byConstraint(constraint) {\n        let node = this.root;\n        while (constraint.length && node) {\n            const cstr = constraint.shift();\n            node = node.getChild(cstr);\n        }\n        return node || null;\n    }\n    enumerate_(node, info) {\n        info = info || {};\n        const children = node.getChildren();\n        for (let i = 0, child; (child = children[i]); i++) {\n            if (child.kind !== trie_node_js_1.TrieNodeKind.DYNAMIC) {\n                continue;\n            }\n            info[child.getConstraint()] = this.enumerate_(child, info[child.getConstraint()]);\n        }\n        return info;\n    }\n    addNode_(node, constraint, kind, context) {\n        let nextNode = node.getChild(constraint);\n        if (!nextNode) {\n            nextNode = (0, trie_node_factory_js_1.getNode)(kind, constraint, context);\n            node.addChild(nextNode);\n        }\n        return nextNode;\n    }\n}\nexports.Trie = Trie;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeechRuleEngine = void 0;\nconst auditory_description_js_1 = require(\"../audio/auditory_description.js\");\nconst span_js_1 = require(\"../audio/span.js\");\nconst debugger_js_1 = require(\"../common/debugger.js\");\nconst DomUtil = require(\"../common/dom_util.js\");\nconst engine_js_1 = require(\"../common/engine.js\");\nconst EngineConst = require(\"../common/engine_const.js\");\nconst xpath_util_js_1 = require(\"../common/xpath_util.js\");\nconst SpeechRules = require(\"../speech_rules/speech_rules.js\");\nconst SpeechRuleStores = require(\"../speech_rules/speech_rule_stores.js\");\nconst braille_store_js_1 = require(\"./braille_store.js\");\nconst dynamic_cstr_js_1 = require(\"./dynamic_cstr.js\");\nconst grammar_js_1 = require(\"./grammar.js\");\nconst math_store_js_1 = require(\"./math_store.js\");\nconst speech_rule_js_1 = require(\"./speech_rule.js\");\nconst trie_js_1 = require(\"../indexing/trie.js\");\nclass SpeechRuleEngine {\n    static getInstance() {\n        SpeechRuleEngine.instance =\n            SpeechRuleEngine.instance || new SpeechRuleEngine();\n        return SpeechRuleEngine.instance;\n    }\n    static debugSpeechRule(rule, node) {\n        const prec = rule.precondition;\n        const queryResult = rule.context.applyQuery(node, prec.query);\n        debugger_js_1.Debugger.getInstance().output(prec.query, queryResult ? queryResult.toString() : queryResult);\n        prec.constraints.forEach((cstr) => debugger_js_1.Debugger.getInstance().output(cstr, rule.context.applyConstraint(node, cstr)));\n    }\n    static debugNamedSpeechRule(name, node) {\n        const rules = SpeechRuleEngine.getInstance().trie.collectRules();\n        const allRules = rules.filter((rule) => rule.name == name);\n        for (let i = 0, rule; (rule = allRules[i]); i++) {\n            debugger_js_1.Debugger.getInstance().output('Rule', name, 'DynamicCstr:', rule.dynamicCstr.toString(), 'number', i);\n            SpeechRuleEngine.debugSpeechRule(rule, node);\n        }\n    }\n    evaluateNode(node) {\n        (0, xpath_util_js_1.updateEvaluator)(node);\n        const timeIn = new Date().getTime();\n        let result = [];\n        try {\n            result = this.evaluateNode_(node);\n        }\n        catch (err) {\n            console.log(err);\n            console.error('Something went wrong computing speech.');\n            debugger_js_1.Debugger.getInstance().output(err);\n        }\n        const timeOut = new Date().getTime();\n        debugger_js_1.Debugger.getInstance().output('Time:', timeOut - timeIn);\n        return result;\n    }\n    toString() {\n        const allRules = this.trie.collectRules();\n        return allRules.map((rule) => rule.toString()).join('\\n');\n    }\n    runInSetting(settings, callback) {\n        const engine = engine_js_1.Engine.getInstance();\n        const save = {};\n        for (const [key, val] of Object.entries(settings)) {\n            save[key] = engine[key];\n            engine[key] = val;\n        }\n        engine.setDynamicCstr();\n        const result = callback();\n        for (const [key, val] of Object.entries(save)) {\n            engine[key] = val;\n        }\n        engine.setDynamicCstr();\n        return result;\n    }\n    static addStore(set) {\n        const store = storeFactory(set);\n        if (store.kind !== 'abstract') {\n            store\n                .getSpeechRules()\n                .forEach((x) => SpeechRuleEngine.getInstance().trie.addRule(x));\n        }\n        SpeechRuleEngine.getInstance().addEvaluator(store);\n    }\n    processGrammar(context, node, grammar) {\n        const assignment = {};\n        for (const [key, val] of Object.entries(grammar)) {\n            assignment[key] =\n                typeof val === 'string' ? context.constructString(node, val) : val;\n        }\n        grammar_js_1.Grammar.getInstance().pushState(assignment);\n    }\n    addEvaluator(store) {\n        const fun = store.evaluateDefault.bind(store);\n        const loc = this.evaluators_[store.locale];\n        if (loc) {\n            loc[store.modality] = fun;\n            return;\n        }\n        const mod = {};\n        mod[store.modality] = fun;\n        this.evaluators_[store.locale] = mod;\n    }\n    getEvaluator(locale, modality) {\n        const loc = this.evaluators_[locale] ||\n            this.evaluators_[dynamic_cstr_js_1.DynamicCstr.DEFAULT_VALUES[dynamic_cstr_js_1.Axis.LOCALE]];\n        return loc[modality] || loc[dynamic_cstr_js_1.DynamicCstr.DEFAULT_VALUES[dynamic_cstr_js_1.Axis.MODALITY]];\n    }\n    enumerate(opt_info) {\n        return this.trie.enumerate(opt_info);\n    }\n    constructor() {\n        this.trie = null;\n        this.evaluators_ = {};\n        this.trie = new trie_js_1.Trie();\n    }\n    evaluateNode_(node) {\n        if (!node) {\n            return [];\n        }\n        this.updateConstraint_();\n        let result = this.evaluateTree_(node);\n        result = processAnnotations(result);\n        return result;\n    }\n    evaluateTree_(node) {\n        const engine = engine_js_1.Engine.getInstance();\n        let result;\n        debugger_js_1.Debugger.getInstance().output(engine.mode !== EngineConst.Mode.HTTP ? node.toString() : node);\n        grammar_js_1.Grammar.getInstance().setAttribute(node);\n        const rule = this.lookupRule(node, engine.dynamicCstr);\n        if (!rule) {\n            if (engine.strict) {\n                return [];\n            }\n            result = this.getEvaluator(engine.locale, engine.modality)(node);\n            if (node.attributes) {\n                this.addPersonality_(result, {}, false, node);\n            }\n            return result;\n        }\n        debugger_js_1.Debugger.getInstance().generateOutput(() => [\n            'Apply Rule:',\n            rule.name,\n            rule.dynamicCstr.toString(),\n            engine.mode === EngineConst.Mode.HTTP\n                ? DomUtil.serializeXml(node)\n                : node.toString()\n        ]);\n        grammar_js_1.Grammar.getInstance().processSingles();\n        const context = rule.context;\n        const components = rule.action.components;\n        result = [];\n        for (let i = 0, component; (component = components[i]); i++) {\n            let descrs = [];\n            const content = component.content || '';\n            const attributes = component.attributes || {};\n            let multi = false;\n            if (component.grammar) {\n                this.processGrammar(context, node, component.grammar);\n            }\n            let saveEngine = null;\n            if (attributes.engine) {\n                saveEngine = engine_js_1.Engine.getInstance().dynamicCstr.getComponents();\n                const features = Object.assign({}, saveEngine, grammar_js_1.Grammar.parseInput(attributes.engine));\n                engine_js_1.Engine.getInstance().setDynamicCstr(features);\n                this.updateConstraint_();\n            }\n            switch (component.type) {\n                case speech_rule_js_1.ActionType.NODE:\n                    {\n                        const selected = context.applyQuery(node, content);\n                        if (selected) {\n                            descrs = this.evaluateTree_(selected);\n                        }\n                    }\n                    break;\n                case speech_rule_js_1.ActionType.MULTI:\n                    {\n                        multi = true;\n                        const selects = context.applySelector(node, content);\n                        if (selects.length > 0) {\n                            descrs = this.evaluateNodeList_(context, selects, attributes['sepFunc'], context.constructString(node, attributes['separator']), attributes['ctxtFunc'], context.constructString(node, attributes['context']));\n                        }\n                    }\n                    break;\n                case speech_rule_js_1.ActionType.TEXT:\n                    {\n                        const xpath = attributes['span'];\n                        let attrs = {};\n                        if (xpath) {\n                            const nodes = (0, xpath_util_js_1.evalXPath)(xpath, node);\n                            attrs = nodes.length\n                                ? span_js_1.Span.getAttributes(nodes[0])\n                                : { kind: xpath };\n                        }\n                        const str = context.constructSpan(node, content, attrs);\n                        descrs = str.map(function (span) {\n                            return auditory_description_js_1.AuditoryDescription.create({ text: span.speech, attributes: span.attributes }, { adjust: true });\n                        });\n                    }\n                    break;\n                case speech_rule_js_1.ActionType.PERSONALITY:\n                default:\n                    descrs = [auditory_description_js_1.AuditoryDescription.create({ text: content })];\n            }\n            if (descrs[0] && !multi) {\n                if (attributes['context']) {\n                    descrs[0]['context'] =\n                        context.constructString(node, attributes['context']) +\n                            (descrs[0]['context'] || '');\n                }\n                if (attributes['annotation']) {\n                    descrs[0]['annotation'] = attributes['annotation'];\n                }\n            }\n            this.addLayout(descrs, attributes, multi);\n            if (component.grammar) {\n                grammar_js_1.Grammar.getInstance().popState();\n            }\n            result = result.concat(this.addPersonality_(descrs, attributes, multi, node));\n            if (saveEngine) {\n                engine_js_1.Engine.getInstance().setDynamicCstr(saveEngine);\n                this.updateConstraint_();\n            }\n        }\n        grammar_js_1.Grammar.getInstance().popState();\n        return result;\n    }\n    evaluateNodeList_(context, nodes, sepFunc, sepStr, ctxtFunc, ctxtStr) {\n        if (!nodes.length) {\n            return [];\n        }\n        const sep = sepStr || '';\n        const cont = ctxtStr || '';\n        const cFunc = context.contextFunctions.lookup(ctxtFunc);\n        const ctxtClosure = cFunc\n            ? cFunc(nodes, cont)\n            : function () {\n                return cont;\n            };\n        const sFunc = context.contextFunctions.lookup(sepFunc);\n        const sepClosure = sFunc\n            ? sFunc(nodes, sep)\n            : function () {\n                return [\n                    auditory_description_js_1.AuditoryDescription.create({ text: sep }, { translate: true })\n                ];\n            };\n        let result = [];\n        for (let i = 0, node; (node = nodes[i]); i++) {\n            const descrs = this.evaluateTree_(node);\n            if (descrs.length > 0) {\n                descrs[0]['context'] = ctxtClosure() + (descrs[0]['context'] || '');\n                result = result.concat(descrs);\n                if (i < nodes.length - 1) {\n                    const text = sepClosure();\n                    result = result.concat(text);\n                }\n            }\n        }\n        return result;\n    }\n    addLayout(descrs, props, _multi) {\n        const layout = props.layout;\n        if (!layout) {\n            return;\n        }\n        if (layout.match(/^begin/)) {\n            descrs.unshift(new auditory_description_js_1.AuditoryDescription({ text: '', layout: layout }));\n            return;\n        }\n        if (layout.match(/^end/)) {\n            descrs.push(new auditory_description_js_1.AuditoryDescription({ text: '', layout: layout }));\n            return;\n        }\n        descrs.unshift(new auditory_description_js_1.AuditoryDescription({ text: '', layout: `begin${layout}` }));\n        descrs.push(new auditory_description_js_1.AuditoryDescription({ text: '', layout: `end${layout}` }));\n    }\n    addPersonality_(descrs, props, multi, node) {\n        const personality = {};\n        let pause = null;\n        for (const key of EngineConst.personalityPropList) {\n            const value = props[key];\n            if (typeof value === 'undefined') {\n                continue;\n            }\n            const numeral = parseFloat(value);\n            const realValue = isNaN(numeral)\n                ? value.charAt(0) === '\"'\n                    ? value.slice(1, -1)\n                    : value\n                : numeral;\n            if (key === EngineConst.personalityProps.PAUSE) {\n                pause = realValue;\n            }\n            else {\n                personality[key] = realValue;\n            }\n        }\n        for (let i = 0, descr; (descr = descrs[i]); i++) {\n            this.addRelativePersonality_(descr, personality);\n            this.addExternalAttributes_(descr, node);\n        }\n        if (multi && descrs.length) {\n            delete descrs[descrs.length - 1].personality[EngineConst.personalityProps.JOIN];\n        }\n        if (pause && descrs.length) {\n            const last = descrs[descrs.length - 1];\n            if (last.text || Object.keys(last.personality).length) {\n                descrs.push(auditory_description_js_1.AuditoryDescription.create({\n                    text: '',\n                    personality: { pause: pause }\n                }));\n            }\n            else {\n                last.personality[EngineConst.personalityProps.PAUSE] = pause;\n            }\n        }\n        return descrs;\n    }\n    addExternalAttributes_(descr, node) {\n        if (descr.attributes['id'] === undefined) {\n            descr.attributes['id'] = node.getAttribute('id');\n        }\n        if (node.hasAttributes()) {\n            const attrs = node.attributes;\n            for (let i = attrs.length - 1; i >= 0; i--) {\n                const key = attrs[i].name;\n                if (!descr.attributes[key] && key.match(/^ext/)) {\n                    descr.attributes[key] = attrs[i].value;\n                }\n            }\n        }\n    }\n    addRelativePersonality_(descr, personality) {\n        if (!descr['personality']) {\n            descr['personality'] = personality;\n            return descr;\n        }\n        const descrPersonality = descr['personality'];\n        for (const [key, val] of Object.entries(personality)) {\n            if (descrPersonality[key] &&\n                typeof descrPersonality[key] == 'number' &&\n                typeof val == 'number') {\n                descrPersonality[key] = (descrPersonality[key] + val).toString();\n            }\n            else if (!descrPersonality[key]) {\n                descrPersonality[key] = val;\n            }\n        }\n        return descr;\n    }\n    updateConstraint_() {\n        const dynamic = engine_js_1.Engine.getInstance().dynamicCstr;\n        const strict = engine_js_1.Engine.getInstance().strict;\n        const trie = this.trie;\n        const props = {};\n        let locale = dynamic.getValue(dynamic_cstr_js_1.Axis.LOCALE);\n        let modality = dynamic.getValue(dynamic_cstr_js_1.Axis.MODALITY);\n        let domain = dynamic.getValue(dynamic_cstr_js_1.Axis.DOMAIN);\n        if (!trie.hasSubtrie([locale, modality, domain])) {\n            domain = dynamic_cstr_js_1.DynamicCstr.DEFAULT_VALUES[dynamic_cstr_js_1.Axis.DOMAIN];\n            if (!trie.hasSubtrie([locale, modality, domain])) {\n                modality = dynamic_cstr_js_1.DynamicCstr.DEFAULT_VALUES[dynamic_cstr_js_1.Axis.MODALITY];\n                if (!trie.hasSubtrie([locale, modality, domain])) {\n                    locale = dynamic_cstr_js_1.DynamicCstr.DEFAULT_VALUES[dynamic_cstr_js_1.Axis.LOCALE];\n                }\n            }\n        }\n        props[dynamic_cstr_js_1.Axis.LOCALE] = [locale];\n        props[dynamic_cstr_js_1.Axis.MODALITY] = [\n            modality !== 'summary'\n                ? modality\n                : dynamic_cstr_js_1.DynamicCstr.DEFAULT_VALUES[dynamic_cstr_js_1.Axis.MODALITY]\n        ];\n        props[dynamic_cstr_js_1.Axis.DOMAIN] = [\n            modality !== 'speech' ? dynamic_cstr_js_1.DynamicCstr.DEFAULT_VALUES[dynamic_cstr_js_1.Axis.DOMAIN] : domain\n        ];\n        const order = dynamic.getOrder();\n        for (let i = 0, axis; (axis = order[i]); i++) {\n            if (!props[axis]) {\n                const value = dynamic.getValue(axis);\n                const valueSet = this.makeSet_(value, dynamic.preference);\n                const def = dynamic_cstr_js_1.DynamicCstr.DEFAULT_VALUES[axis];\n                if (!strict && value !== def) {\n                    valueSet.push(def);\n                }\n                props[axis] = valueSet;\n            }\n        }\n        dynamic.updateProperties(props);\n    }\n    makeSet_(value, preferences) {\n        if (!preferences || !Object.keys(preferences).length) {\n            return [value];\n        }\n        return value.split(':');\n    }\n    lookupRule(node, dynamic) {\n        if (!node ||\n            (node.nodeType !== DomUtil.NodeType.ELEMENT_NODE &&\n                node.nodeType !== DomUtil.NodeType.TEXT_NODE)) {\n            return null;\n        }\n        const matchingRules = this.lookupRules(node, dynamic);\n        return matchingRules.length > 0\n            ? this.pickMostConstraint_(dynamic, matchingRules)\n            : null;\n    }\n    lookupRules(node, dynamic) {\n        return this.trie.lookupRules(node, dynamic.allProperties());\n    }\n    pickMostConstraint_(_dynamic, rules) {\n        const comparator = engine_js_1.Engine.getInstance().comparator;\n        rules.sort(function (r1, r2) {\n            return (comparator.compare(r1.dynamicCstr, r2.dynamicCstr) ||\n                r2.precondition.priority - r1.precondition.priority ||\n                r2.precondition.constraints.length -\n                    r1.precondition.constraints.length ||\n                r2.precondition.rank - r1.precondition.rank);\n        });\n        debugger_js_1.Debugger.getInstance().generateOutput((() => {\n            return rules.map((x) => x.name + '(' + x.dynamicCstr.toString() + ')');\n        }).bind(this));\n        return rules[0];\n    }\n}\nexports.SpeechRuleEngine = SpeechRuleEngine;\nconst stores = new Map();\nfunction getStore(locale, modality) {\n    if (modality === 'braille' && locale === 'euro') {\n        return new braille_store_js_1.EuroStore();\n    }\n    if (modality === 'braille') {\n        return new braille_store_js_1.BrailleStore();\n    }\n    return new math_store_js_1.MathStore();\n}\nfunction storeFactory(set) {\n    const name = `${set.locale}.${set.modality}.${set.domain}`;\n    if (set.kind === 'actions') {\n        const store = stores.get(name);\n        store.parse(set);\n        return store;\n    }\n    SpeechRuleStores.init();\n    if (set && !set.functions) {\n        set.functions = SpeechRules.getStore(set.locale, set.modality, set.domain);\n    }\n    const store = getStore(set.locale, set.modality);\n    stores.set(name, store);\n    if (set.inherits) {\n        store.inherits = stores.get(`${set.inherits}.${set.modality}.${set.domain}`);\n    }\n    store.parse(set);\n    store.initialize();\n    return store;\n}\nengine_js_1.Engine.nodeEvaluator = SpeechRuleEngine.getInstance().evaluateNode.bind(SpeechRuleEngine.getInstance());\nconst punctuationMarks = ['⠆', '⠒', '⠲', '⠦', '⠴', '⠄'];\nfunction processAnnotations(descrs) {\n    const alist = new auditory_description_js_1.AuditoryList(descrs);\n    for (const item of alist.annotations) {\n        const descr = item.data;\n        if (descr.annotation === 'punctuation') {\n            const prev = alist.prevText(item);\n            if (!prev)\n                continue;\n            const last = prev.data;\n            if (last.annotation !== 'punctuation' &&\n                last.text !== '⠀' &&\n                descr.text.length === 1 &&\n                punctuationMarks.indexOf(descr.text) !== -1) {\n                descr.text = '⠸' + descr.text;\n            }\n        }\n    }\n    return alist.toList();\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.generateBase = generateBase;\nexports.generate = generate;\nconst Alphabet = require(\"./alphabet.js\");\nconst engine_js_1 = require(\"../common/engine.js\");\nconst L10n = require(\"../l10n/l10n.js\");\nconst locale_js_1 = require(\"../l10n/locale.js\");\nconst locale_util_js_1 = require(\"../l10n/locale_util.js\");\nconst MathCompoundStore = require(\"../rule_engine/math_compound_store.js\");\nconst Domains = {\n    small: ['default'],\n    capital: ['default'],\n    digit: ['default']\n};\nfunction makeDomains() {\n    const alph = locale_js_1.LOCALE.ALPHABETS;\n    const combineKeys = (obj1, obj2) => {\n        const result = {};\n        Object.keys(obj1).forEach((k) => (result[k] = true));\n        Object.keys(obj2).forEach((k) => (result[k] = true));\n        return Object.keys(result);\n    };\n    Domains.small = combineKeys(alph.smallPrefix, alph.letterTrans);\n    Domains.capital = combineKeys(alph.capPrefix, alph.letterTrans);\n    Domains.digit = combineKeys(alph.digitPrefix, alph.digitTrans);\n}\nfunction generateBase() {\n    for (const int of Alphabet.INTERVALS.values()) {\n        const letters = int.unicode;\n        for (const letter of letters) {\n            MathCompoundStore.baseStores.set(letter, {\n                key: letter,\n                category: int.category\n            });\n        }\n    }\n}\nfunction generate(locale) {\n    const oldLocale = engine_js_1.Engine.getInstance().locale;\n    engine_js_1.Engine.getInstance().locale = locale;\n    L10n.setLocale();\n    MathCompoundStore.changeLocale({ locale: locale });\n    makeDomains();\n    for (const int of Alphabet.INTERVALS.values()) {\n        const letters = int.unicode;\n        if ('offset' in int) {\n            numberRules(letters, int.font, int.offset || 0);\n        }\n        else {\n            const alphabet = locale_js_1.LOCALE.ALPHABETS[int.base];\n            alphabetRules(letters, alphabet, int.font, !!int.capital);\n        }\n    }\n    engine_js_1.Engine.getInstance().locale = oldLocale;\n    L10n.setLocale();\n}\nfunction getFont(font) {\n    const realFont = font === 'normal' || font === 'fullwidth'\n        ? ''\n        : locale_js_1.LOCALE.MESSAGES.font[font] || locale_js_1.LOCALE.MESSAGES.embellish[font] || '';\n    return (0, locale_util_js_1.localeFontCombiner)(realFont);\n}\nfunction alphabetRules(unicodes, letters, font, cap) {\n    const realFont = getFont(font);\n    for (let i = 0, unicode, letter; (unicode = unicodes[i]), (letter = letters[i]); i++) {\n        const prefixes = cap\n            ? locale_js_1.LOCALE.ALPHABETS.capPrefix\n            : locale_js_1.LOCALE.ALPHABETS.smallPrefix;\n        const domains = cap ? Domains.capital : Domains.small;\n        makeLetter(realFont.combiner, unicode, letter, realFont.font, prefixes, locale_js_1.LOCALE.ALPHABETS.letterTrans, domains);\n    }\n}\nfunction numberRules(unicodes, font, offset) {\n    const realFont = getFont(font);\n    for (let i = 0, unicode; (unicode = unicodes[i]); i++) {\n        const prefixes = locale_js_1.LOCALE.ALPHABETS.digitPrefix;\n        const num = i + offset;\n        makeLetter(realFont.combiner, unicode, num, realFont.font, prefixes, locale_js_1.LOCALE.ALPHABETS.digitTrans, Domains.digit);\n    }\n}\nfunction makeLetter(combiner, unicode, letter, font, prefixes, transformers, domains) {\n    for (let i = 0, domain; (domain = domains[i]); i++) {\n        const transformer = domain in transformers ? transformers[domain] : transformers['default'];\n        const prefix = domain in prefixes ? prefixes[domain] : prefixes['default'];\n        MathCompoundStore.defineRule(domain, 'default', unicode, combiner(transformer(letter), font, prefix));\n    }\n}\n", "\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.loadLocale = loadLocale;\nexports.standardLoader = standardLoader;\nconst BrowserUtil = require(\"../common/browser_util.js\");\nconst engine_js_1 = require(\"../common/engine.js\");\nconst EngineConst = require(\"../common/engine_const.js\");\nconst FileUtil = require(\"../common/file_util.js\");\nconst system_external_js_1 = require(\"../common/system_external.js\");\nconst dynamic_cstr_js_1 = require(\"../rule_engine/dynamic_cstr.js\");\nconst MathCompoundStore = require(\"../rule_engine/math_compound_store.js\");\nconst speech_rule_engine_js_1 = require(\"../rule_engine/speech_rule_engine.js\");\nconst l10n_js_1 = require(\"../l10n/l10n.js\");\nconst AlphabetGenerator = require(\"./alphabet_generator.js\");\nconst addSymbols = {\n    functions: MathCompoundStore.addFunctionRules,\n    symbols: MathCompoundStore.addSymbolRules,\n    units: MathCompoundStore.addUnitRules,\n    si: (x) => x.forEach(MathCompoundStore.setSiPrefixes),\n    messages: l10n_js_1.completeLocale,\n    rules: speech_rule_engine_js_1.SpeechRuleEngine.addStore,\n    characters: MathCompoundStore.addCharacterRules\n};\nlet _init = false;\nfunction loadLocale() {\n    return __awaiter(this, arguments, void 0, function* (locale = engine_js_1.Engine.getInstance().locale) {\n        if (!_init) {\n            AlphabetGenerator.generateBase();\n            _loadLocale(dynamic_cstr_js_1.DynamicCstr.BASE_LOCALE);\n            _init = true;\n        }\n        return engine_js_1.EnginePromise.promises[dynamic_cstr_js_1.DynamicCstr.BASE_LOCALE].then(() => __awaiter(this, void 0, void 0, function* () {\n            const defLoc = engine_js_1.Engine.getInstance().defaultLocale;\n            if (defLoc) {\n                _loadLocale(defLoc);\n                return engine_js_1.EnginePromise.promises[defLoc].then(() => __awaiter(this, void 0, void 0, function* () {\n                    _loadLocale(locale);\n                    return engine_js_1.EnginePromise.promises[locale];\n                }));\n            }\n            _loadLocale(locale);\n            return engine_js_1.EnginePromise.promises[locale];\n        }));\n    });\n}\nfunction _loadLocale(locale = engine_js_1.Engine.getInstance().locale) {\n    if (!engine_js_1.EnginePromise.loaded[locale]) {\n        engine_js_1.EnginePromise.loaded[locale] = [false, false];\n        MathCompoundStore.reset();\n        retrieveMaps(locale);\n    }\n}\nfunction loadMethod() {\n    if (engine_js_1.Engine.getInstance().customLoader) {\n        return engine_js_1.Engine.getInstance().customLoader;\n    }\n    return standardLoader();\n}\nfunction standardLoader() {\n    switch (engine_js_1.Engine.getInstance().mode) {\n        case EngineConst.Mode.ASYNC:\n            return loadFile;\n        case EngineConst.Mode.HTTP:\n            return loadAjax;\n        case EngineConst.Mode.SYNC:\n        default:\n            return loadFileSync;\n    }\n}\nfunction retrieveFiles(locale) {\n    const loader = loadMethod();\n    const promise = new Promise((res) => {\n        const inner = loader(locale);\n        inner.then((str) => {\n            parseMaps(str);\n            engine_js_1.EnginePromise.loaded[locale] = [true, true];\n            res(locale);\n        }, (_err) => {\n            engine_js_1.EnginePromise.loaded[locale] = [true, false];\n            console.error(`Unable to load locale: ${locale}`);\n            engine_js_1.Engine.getInstance().locale = engine_js_1.Engine.getInstance().defaultLocale;\n            res(locale);\n        });\n    });\n    engine_js_1.EnginePromise.promises[locale] = promise;\n}\nfunction parseMaps(json) {\n    const js = typeof json === 'string'\n        ? JSON.parse(json)\n        : json;\n    addMaps(js);\n}\nfunction addMaps(json, opt_locale) {\n    let generate = true;\n    for (let i = 0, key; (key = Object.keys(json)[i]); i++) {\n        const info = key.split('/');\n        if (opt_locale && opt_locale !== info[0]) {\n            continue;\n        }\n        if (generate && info[1] === 'symbols' && info[0] !== 'base') {\n            AlphabetGenerator.generate(info[0]);\n            generate = false;\n        }\n        addSymbols[info[1]](json[key]);\n    }\n}\nfunction retrieveMaps(locale) {\n    if (engine_js_1.Engine.getInstance().isIE &&\n        engine_js_1.Engine.getInstance().mode === EngineConst.Mode.HTTP) {\n        getJsonIE_(locale);\n        return;\n    }\n    retrieveFiles(locale);\n}\nfunction getJsonIE_(locale, opt_count) {\n    let count = opt_count || 1;\n    if (!BrowserUtil.mapsForIE) {\n        if (count <= 5) {\n            setTimeout((() => getJsonIE_(locale, count++)).bind(this), 300);\n        }\n        return;\n    }\n    addMaps(BrowserUtil.mapsForIE, locale);\n}\nfunction loadFile(locale) {\n    const file = FileUtil.localePath(locale);\n    return new Promise((res, rej) => {\n        system_external_js_1.SystemExternal.fs.readFile(file, 'utf8', (err, json) => {\n            if (err) {\n                return rej(err);\n            }\n            res(json);\n        });\n    });\n}\nfunction loadFileSync(locale) {\n    const file = FileUtil.localePath(locale);\n    return new Promise((res, rej) => {\n        let str = '{}';\n        try {\n            str = system_external_js_1.SystemExternal.fs.readFileSync(file, 'utf8');\n        }\n        catch (err) {\n            return rej(err);\n        }\n        res(str);\n    });\n}\nfunction loadAjax(locale) {\n    const file = FileUtil.localePath(locale);\n    const httpRequest = new XMLHttpRequest();\n    return new Promise((res, rej) => {\n        httpRequest.onreadystatechange = function () {\n            if (httpRequest.readyState === 4) {\n                const status = httpRequest.status;\n                if (status === 0 || (status >= 200 && status < 400)) {\n                    res(httpRequest.responseText);\n                }\n                else {\n                    rej(status);\n                }\n            }\n        };\n        httpRequest.open('GET', file, true);\n        httpRequest.send();\n    });\n}\n", "\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setup = setup;\nconst L10n = require(\"../l10n/l10n.js\");\nconst MathMap = require(\"../speech_rules/math_map.js\");\nconst BrowserUtil = require(\"./browser_util.js\");\nconst debugger_js_1 = require(\"./debugger.js\");\nconst engine_js_1 = require(\"./engine.js\");\nconst FileUtil = require(\"./file_util.js\");\nconst system_external_js_1 = require(\"./system_external.js\");\nconst MATHSPEAK_ONLY = ['ca', 'da', 'es'];\nconst EN_RULES = [\n    'chromevox',\n    'clearspeak',\n    'mathspeak',\n    'emacspeak',\n    'html'\n];\nfunction ensureDomain(feature) {\n    if ((feature.modality && feature.modality !== 'speech') ||\n        (!feature.modality && engine_js_1.Engine.getInstance().modality !== 'speech')) {\n        return;\n    }\n    if (!feature.domain) {\n        return;\n    }\n    if (feature.domain === 'default') {\n        feature.domain = 'mathspeak';\n        return;\n    }\n    const locale = (feature.locale || engine_js_1.Engine.getInstance().locale);\n    const domain = feature.domain;\n    if (MATHSPEAK_ONLY.indexOf(locale) !== -1) {\n        if (domain !== 'mathspeak') {\n            feature.domain = 'mathspeak';\n        }\n        return;\n    }\n    if (locale === 'en') {\n        if (EN_RULES.indexOf(domain) === -1) {\n            feature.domain = 'mathspeak';\n        }\n        return;\n    }\n    if (domain !== 'mathspeak' && domain !== 'clearspeak') {\n        feature.domain = 'mathspeak';\n    }\n}\nfunction setup(feature) {\n    return __awaiter(this, void 0, void 0, function* () {\n        ensureDomain(feature);\n        const engine = engine_js_1.Engine.getInstance();\n        const setIf = (feat) => {\n            if (typeof feature[feat] !== 'undefined') {\n                engine[feat] = !!feature[feat];\n            }\n        };\n        const setMulti = (feat) => {\n            if (typeof feature[feat] !== 'undefined') {\n                engine[feat] = feature[feat];\n            }\n        };\n        setMulti('mode');\n        engine.configurate(feature);\n        engine_js_1.Engine.BINARY_FEATURES.forEach(setIf);\n        engine_js_1.Engine.STRING_FEATURES.forEach(setMulti);\n        if (feature.debug) {\n            debugger_js_1.Debugger.getInstance().init();\n        }\n        if (feature.json) {\n            system_external_js_1.SystemExternal.jsonPath = FileUtil.makePath(feature.json);\n        }\n        if (feature.xpath) {\n            system_external_js_1.SystemExternal.WGXpath = feature.xpath;\n        }\n        engine.setCustomLoader(feature.custom);\n        setupBrowsers(engine);\n        L10n.setLocale();\n        engine.setDynamicCstr();\n        if (engine.init) {\n            engine_js_1.EnginePromise.promises['init'] = new Promise((res, _rej) => {\n                setTimeout(() => {\n                    res('init');\n                }, 10);\n            });\n            engine.init = false;\n            return engine_js_1.EnginePromise.get();\n        }\n        if (engine.delay) {\n            engine.delay = false;\n            return engine_js_1.EnginePromise.get();\n        }\n        return MathMap.loadLocale();\n    });\n}\nfunction setupBrowsers(engine) {\n    engine.isIE = BrowserUtil.detectIE();\n    engine.isEdge = BrowserUtil.detectEdge();\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Event = exports.Move = exports.KeyCode = void 0;\nvar KeyCode;\n(function (KeyCode) {\n    KeyCode[KeyCode[\"ENTER\"] = 13] = \"ENTER\";\n    KeyCode[KeyCode[\"ESC\"] = 27] = \"ESC\";\n    KeyCode[KeyCode[\"SPACE\"] = 32] = \"SPACE\";\n    KeyCode[KeyCode[\"PAGE_UP\"] = 33] = \"PAGE_UP\";\n    KeyCode[KeyCode[\"PAGE_DOWN\"] = 34] = \"PAGE_DOWN\";\n    KeyCode[KeyCode[\"END\"] = 35] = \"END\";\n    KeyCode[KeyCode[\"HOME\"] = 36] = \"HOME\";\n    KeyCode[KeyCode[\"LEFT\"] = 37] = \"LEFT\";\n    KeyCode[KeyCode[\"UP\"] = 38] = \"UP\";\n    KeyCode[KeyCode[\"RIGHT\"] = 39] = \"RIGHT\";\n    KeyCode[KeyCode[\"DOWN\"] = 40] = \"DOWN\";\n    KeyCode[KeyCode[\"TAB\"] = 9] = \"TAB\";\n    KeyCode[KeyCode[\"LESS\"] = 188] = \"LESS\";\n    KeyCode[KeyCode[\"GREATER\"] = 190] = \"GREATER\";\n    KeyCode[KeyCode[\"DASH\"] = 189] = \"DASH\";\n    KeyCode[KeyCode[\"ZERO\"] = 48] = \"ZERO\";\n    KeyCode[KeyCode[\"ONE\"] = 49] = \"ONE\";\n    KeyCode[KeyCode[\"TWO\"] = 50] = \"TWO\";\n    KeyCode[KeyCode[\"THREE\"] = 51] = \"THREE\";\n    KeyCode[KeyCode[\"FOUR\"] = 52] = \"FOUR\";\n    KeyCode[KeyCode[\"FIVE\"] = 53] = \"FIVE\";\n    KeyCode[KeyCode[\"SIX\"] = 54] = \"SIX\";\n    KeyCode[KeyCode[\"SEVEN\"] = 55] = \"SEVEN\";\n    KeyCode[KeyCode[\"EIGHT\"] = 56] = \"EIGHT\";\n    KeyCode[KeyCode[\"NINE\"] = 57] = \"NINE\";\n    KeyCode[KeyCode[\"A\"] = 65] = \"A\";\n    KeyCode[KeyCode[\"B\"] = 66] = \"B\";\n    KeyCode[KeyCode[\"C\"] = 67] = \"C\";\n    KeyCode[KeyCode[\"D\"] = 68] = \"D\";\n    KeyCode[KeyCode[\"E\"] = 69] = \"E\";\n    KeyCode[KeyCode[\"F\"] = 70] = \"F\";\n    KeyCode[KeyCode[\"G\"] = 71] = \"G\";\n    KeyCode[KeyCode[\"H\"] = 72] = \"H\";\n    KeyCode[KeyCode[\"I\"] = 73] = \"I\";\n    KeyCode[KeyCode[\"J\"] = 74] = \"J\";\n    KeyCode[KeyCode[\"K\"] = 75] = \"K\";\n    KeyCode[KeyCode[\"L\"] = 76] = \"L\";\n    KeyCode[KeyCode[\"M\"] = 77] = \"M\";\n    KeyCode[KeyCode[\"N\"] = 78] = \"N\";\n    KeyCode[KeyCode[\"O\"] = 79] = \"O\";\n    KeyCode[KeyCode[\"P\"] = 80] = \"P\";\n    KeyCode[KeyCode[\"Q\"] = 81] = \"Q\";\n    KeyCode[KeyCode[\"R\"] = 82] = \"R\";\n    KeyCode[KeyCode[\"S\"] = 83] = \"S\";\n    KeyCode[KeyCode[\"T\"] = 84] = \"T\";\n    KeyCode[KeyCode[\"U\"] = 85] = \"U\";\n    KeyCode[KeyCode[\"V\"] = 86] = \"V\";\n    KeyCode[KeyCode[\"W\"] = 87] = \"W\";\n    KeyCode[KeyCode[\"X\"] = 88] = \"X\";\n    KeyCode[KeyCode[\"Y\"] = 89] = \"Y\";\n    KeyCode[KeyCode[\"Z\"] = 90] = \"Z\";\n})(KeyCode || (exports.KeyCode = KeyCode = {}));\nexports.Move = new Map([\n    [13, 'ENTER'],\n    [27, 'ESC'],\n    [32, 'SPACE'],\n    [33, 'PAGE_UP'],\n    [34, 'PAGE_DOWN'],\n    [35, 'END'],\n    [36, 'HOME'],\n    [37, 'LEFT'],\n    [38, 'UP'],\n    [39, 'RIGHT'],\n    [40, 'DOWN'],\n    [9, 'TAB'],\n    [188, 'LESS'],\n    [190, 'GREATER'],\n    [189, 'DASH'],\n    [48, 'ZERO'],\n    [49, 'ONE'],\n    [50, 'TWO'],\n    [51, 'THREE'],\n    [52, 'FOUR'],\n    [53, 'FIVE'],\n    [54, 'SIX'],\n    [55, 'SEVEN'],\n    [56, 'EIGHT'],\n    [57, 'NINE'],\n    [65, 'A'],\n    [66, 'B'],\n    [67, 'C'],\n    [68, 'D'],\n    [69, 'E'],\n    [70, 'F'],\n    [71, 'G'],\n    [72, 'H'],\n    [73, 'I'],\n    [74, 'J'],\n    [75, 'K'],\n    [76, 'L'],\n    [77, 'M'],\n    [78, 'N'],\n    [79, 'O'],\n    [80, 'P'],\n    [81, 'Q'],\n    [82, 'R'],\n    [83, 'S'],\n    [84, 'T'],\n    [85, 'U'],\n    [86, 'V'],\n    [87, 'W'],\n    [88, 'X'],\n    [89, 'Y'],\n    [90, 'Z']\n]);\nvar EventType;\n(function (EventType) {\n    EventType[\"CLICK\"] = \"click\";\n    EventType[\"DBLCLICK\"] = \"dblclick\";\n    EventType[\"MOUSEDOWN\"] = \"mousedown\";\n    EventType[\"MOUSEUP\"] = \"mouseup\";\n    EventType[\"MOUSEOVER\"] = \"mouseover\";\n    EventType[\"MOUSEOUT\"] = \"mouseout\";\n    EventType[\"MOUSEMOVE\"] = \"mousemove\";\n    EventType[\"SELECTSTART\"] = \"selectstart\";\n    EventType[\"KEYPRESS\"] = \"keypress\";\n    EventType[\"KEYDOWN\"] = \"keydown\";\n    EventType[\"KEYUP\"] = \"keyup\";\n    EventType[\"TOUCHSTART\"] = \"touchstart\";\n    EventType[\"TOUCHMOVE\"] = \"touchmove\";\n    EventType[\"TOUCHEND\"] = \"touchend\";\n    EventType[\"TOUCHCANCEL\"] = \"touchcancel\";\n})(EventType || (EventType = {}));\nclass Event {\n    constructor(src, type, callback) {\n        this.src = src;\n        this.type = type;\n        this.callback = callback;\n    }\n    add() {\n        this.src.addEventListener(this.type, this.callback);\n    }\n    remove() {\n        this.src.removeEventListener(this.type, this.callback);\n    }\n}\nexports.Event = Event;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergePause = mergePause;\nexports.mergeMarkup = mergeMarkup;\nexports.sortClose = sortClose;\nexports.personalityMarkup = personalityMarkup;\nexports.isMarkupElement = isMarkupElement;\nexports.isPauseElement = isPauseElement;\nconst base_util_js_1 = require(\"../common/base_util.js\");\nconst EngineConst = require(\"../common/engine_const.js\");\nconst engine_js_1 = require(\"../common/engine.js\");\nconst span_js_1 = require(\"./span.js\");\nfunction mergePause(oldPause, newPause, opt_merge) {\n    if (!oldPause) {\n        return newPause;\n    }\n    return { pause: mergePause_(oldPause.pause, newPause.pause, opt_merge) };\n}\nfunction mergePause_(oldPause, newPause, opt_merge) {\n    const merge = opt_merge ||\n        function (x, y) {\n            if (typeof x === 'number' && typeof y === 'number') {\n                return x + y;\n            }\n            if (typeof x === 'number') {\n                return y;\n            }\n            if (typeof y === 'number') {\n                return x;\n            }\n            return [oldPause, newPause].sort()[0];\n        };\n    return merge.call(null, oldPause, newPause);\n}\nfunction mergeMarkup(oldPers, newPers) {\n    delete oldPers.open;\n    newPers.close.forEach((x) => delete oldPers[x]);\n    newPers.open.forEach((x) => (oldPers[x] = newPers[x]));\n    const keys = Object.keys(oldPers);\n    oldPers.open = keys;\n}\nfunction sortClose(open, descrs) {\n    if (open.length <= 1) {\n        return open;\n    }\n    const result = [];\n    for (let i = 0, descr; (descr = descrs[i]), open.length; i++) {\n        if (!descr.close || !descr.close.length) {\n            continue;\n        }\n        descr.close.forEach(function (x) {\n            const index = open.indexOf(x);\n            if (index !== -1) {\n                result.unshift(x);\n                open.splice(index, 1);\n            }\n        });\n    }\n    return result;\n}\nlet PersonalityRanges_ = {};\nlet LastOpen_ = [];\nfunction personalityMarkup(descrs) {\n    PersonalityRanges_ = {};\n    LastOpen_ = [];\n    let result = [];\n    const currentPers = {};\n    for (let i = 0, descr; (descr = descrs[i]); i++) {\n        let pause = null;\n        const span = descr.descriptionSpan();\n        const pers = descr.personality;\n        const join = pers[EngineConst.personalityProps.JOIN];\n        delete pers[EngineConst.personalityProps.JOIN];\n        if (typeof pers[EngineConst.personalityProps.PAUSE] !== 'undefined') {\n            pause = {\n                [EngineConst.personalityProps.PAUSE]: pers[EngineConst.personalityProps.PAUSE]\n            };\n            delete pers[EngineConst.personalityProps.PAUSE];\n        }\n        const diff = personalityDiff_(pers, currentPers);\n        appendMarkup_(result, span, diff, join, pause, true);\n    }\n    result = result.concat(finaliseMarkup_());\n    result = simplifyMarkup_(result);\n    result = engine_js_1.Engine.getInstance().cleanpause ? cleanPause(result) : result;\n    return result;\n}\nfunction cleanPause(markup) {\n    while (isPauseElement(markup[0])) {\n        markup.shift();\n    }\n    while (isPauseElement(markup[markup.length - 1])) {\n        markup.pop();\n    }\n    return markup;\n}\nfunction appendElement_(markup, element) {\n    const last = markup[markup.length - 1];\n    if (!last) {\n        markup.push(element);\n        return;\n    }\n    if (isSpanElement(element) && isSpanElement(last)) {\n        if (typeof last.join === 'undefined') {\n            last.span = last.span.concat(element.span);\n            return;\n        }\n        const lstr = last['span'].pop();\n        const fstr = element['span'].shift();\n        last['span'].push(lstr + last.join + fstr);\n        last['span'] = last['span'].concat(element.span);\n        last.join = element.join;\n        return;\n    }\n    if (isPauseElement(element) && isPauseElement(last)) {\n        last.pause = mergePause_(last.pause, element.pause);\n        return;\n    }\n    markup.push(element);\n}\nfunction simplifyMarkup_(markup) {\n    const lastPers = {};\n    const result = [];\n    for (let i = 0, element; (element = markup[i]); i++) {\n        if (!isMarkupElement(element)) {\n            appendElement_(result, element);\n            continue;\n        }\n        if (!element.close || element.close.length !== 1 || element.open.length) {\n            copyValues_(element, lastPers);\n            result.push(element);\n            continue;\n        }\n        let nextElement = markup[i + 1];\n        if (!nextElement || isSpanElement(nextElement)) {\n            copyValues_(element, lastPers);\n            result.push(element);\n            continue;\n        }\n        const pauseElement = isPauseElement(nextElement) ? nextElement : null;\n        if (pauseElement) {\n            nextElement = markup[i + 2];\n        }\n        if (nextElement &&\n            isMarkupElement(nextElement) &&\n            nextElement.open[0] === element.close[0] &&\n            !nextElement.close.length &&\n            nextElement[nextElement.open[0]] === lastPers[nextElement.open[0]]) {\n            if (pauseElement) {\n                appendElement_(result, pauseElement);\n                i = i + 2;\n            }\n            else {\n                i = i + 1;\n            }\n        }\n        else {\n            copyValues_(element, lastPers);\n            result.push(element);\n        }\n    }\n    return result;\n}\nfunction copyValues_(from, to) {\n    if (from['rate']) {\n        to['rate'] = from['rate'];\n    }\n    if (from['pitch']) {\n        to['pitch'] = from['pitch'];\n    }\n    if (from['volume']) {\n        to['volume'] = from['volume'];\n    }\n}\nfunction finaliseMarkup_() {\n    const final = [];\n    for (let i = LastOpen_.length - 1; i >= 0; i--) {\n        const pers = LastOpen_[i];\n        if (pers.length) {\n            const markup = { open: [], close: [] };\n            for (let j = 0; j < pers.length; j++) {\n                const per = pers[j];\n                markup.close.push(per);\n                markup[per] = 0;\n            }\n            final.push(markup);\n        }\n    }\n    return final;\n}\nfunction isMarkupElement(element) {\n    return typeof element === 'object' && element.open;\n}\nfunction isPauseElement(element) {\n    return (typeof element === 'object' &&\n        Object.keys(element).length === 1 &&\n        Object.keys(element)[0] === EngineConst.personalityProps.PAUSE);\n}\nfunction isSpanElement(element) {\n    const keys = Object.keys(element);\n    return (typeof element === 'object' &&\n        ((keys.length === 1 && keys[0] === 'span') ||\n            (keys.length === 2 &&\n                ((keys[0] === 'span' && keys[1] === 'join') ||\n                    (keys[1] === 'span' && keys[0] === 'join')))));\n}\nfunction appendMarkup_(markup, span, pers, join, pause, merge = false) {\n    if (merge) {\n        const last = markup[markup.length - 1];\n        let oldJoin;\n        if (last) {\n            oldJoin = last[EngineConst.personalityProps.JOIN];\n        }\n        if (last && !span.speech && pause && isPauseElement(last)) {\n            const pauseProp = EngineConst.personalityProps.PAUSE;\n            last[pauseProp] = mergePause_(last[pauseProp], pause[pauseProp]);\n            pause = null;\n        }\n        if (last &&\n            span.speech &&\n            Object.keys(pers).length === 0 &&\n            isSpanElement(last)) {\n            if (typeof oldJoin !== 'undefined') {\n                const lastSpan = last['span'].pop();\n                span = span_js_1.Span.stringAttr(lastSpan.speech + oldJoin + span.speech, lastSpan.attributes);\n            }\n            last['span'].push(span);\n            span = span_js_1.Span.empty();\n            last[EngineConst.personalityProps.JOIN] = join;\n        }\n    }\n    if (Object.keys(pers).length !== 0) {\n        markup.push(pers);\n    }\n    if (span.speech) {\n        markup.push({ span: [span], join: join });\n    }\n    if (pause) {\n        markup.push(pause);\n    }\n}\nfunction personalityDiff_(current, old) {\n    if (!old) {\n        return current;\n    }\n    const result = {};\n    for (const prop of EngineConst.personalityPropList) {\n        const currentValue = current[prop];\n        const oldValue = old[prop];\n        if ((!currentValue && !oldValue) ||\n            (currentValue && oldValue && currentValue === oldValue)) {\n            continue;\n        }\n        const value = currentValue || 0;\n        if (!isMarkupElement(result)) {\n            result.open = [];\n            result.close = [];\n        }\n        if (!currentValue) {\n            result.close.push(prop);\n        }\n        if (!oldValue) {\n            result.open.push(prop);\n        }\n        if (oldValue && currentValue) {\n            result.close.push(prop);\n            result.open.push(prop);\n        }\n        old[prop] = value;\n        result[prop] = value;\n        PersonalityRanges_[prop]\n            ? PersonalityRanges_[prop].push(value)\n            : (PersonalityRanges_[prop] = [value]);\n    }\n    if (isMarkupElement(result)) {\n        let c = result.close.slice();\n        while (c.length > 0) {\n            let lo = LastOpen_.pop();\n            const loNew = (0, base_util_js_1.setdifference)(lo, c);\n            c = (0, base_util_js_1.setdifference)(c, lo);\n            lo = loNew;\n            if (c.length === 0) {\n                if (lo.length !== 0) {\n                    LastOpen_.push(lo);\n                }\n                continue;\n            }\n            if (lo.length === 0) {\n                continue;\n            }\n            result.close = result.close.concat(lo);\n            result.open = result.open.concat(lo);\n            for (let i = 0, open; (open = lo[i]); i++) {\n                result[open] = old[open];\n            }\n        }\n        LastOpen_.push(result.open);\n    }\n    return result;\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbstractAudioRenderer = void 0;\nconst engine_js_1 = require(\"../common/engine.js\");\nclass AbstractAudioRenderer {\n    constructor() {\n        this.separator_ = ' ';\n    }\n    set separator(sep) {\n        this.separator_ = sep;\n    }\n    get separator() {\n        return engine_js_1.Engine.getInstance().modality === 'braille' ? '' : this.separator_;\n    }\n    error(_key) {\n        return null;\n    }\n    merge(spans) {\n        let str = '';\n        const len = spans.length - 1;\n        for (let i = 0, span; (span = spans[i]); i++) {\n            str += span.speech;\n            if (i < len) {\n                const sep = span.attributes['separator'];\n                str += sep !== undefined ? sep : this.separator;\n            }\n        }\n        return str;\n    }\n    finalize(str) {\n        return str;\n    }\n    pauseValue(value) {\n        let numeric;\n        switch (value) {\n            case 'long':\n                numeric = 750;\n                break;\n            case 'medium':\n                numeric = 500;\n                break;\n            case 'short':\n                numeric = 250;\n                break;\n            default:\n                numeric = parseInt(value, 10);\n        }\n        return Math.floor((numeric * engine_js_1.Engine.getInstance().getRate()) / 100);\n    }\n}\nexports.AbstractAudioRenderer = AbstractAudioRenderer;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MarkupRenderer = void 0;\nconst EngineConst = require(\"../common/engine_const.js\");\nconst abstract_audio_renderer_js_1 = require(\"./abstract_audio_renderer.js\");\nclass MarkupRenderer extends abstract_audio_renderer_js_1.AbstractAudioRenderer {\n    constructor() {\n        super(...arguments);\n        this.ignoreElements = [EngineConst.personalityProps.LAYOUT];\n        this.scaleFunction = null;\n    }\n    setScaleFunction(a, b, c, d, decimals = 0) {\n        this.scaleFunction = (x) => {\n            const delta = (x - a) / (b - a);\n            const num = c * (1 - delta) + d * delta;\n            return +(Math.round((num + 'e+' + decimals)) +\n                'e-' +\n                decimals);\n        };\n    }\n    applyScaleFunction(value) {\n        return this.scaleFunction ? this.scaleFunction(value) : value;\n    }\n    ignoreElement(key) {\n        return this.ignoreElements.indexOf(key) !== -1;\n    }\n}\nexports.MarkupRenderer = MarkupRenderer;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AcssRenderer = void 0;\nconst EngineConst = require(\"../common/engine_const.js\");\nconst EventUtil = require(\"../common/event_util.js\");\nconst AudioUtil = require(\"./audio_util.js\");\nconst markup_renderer_js_1 = require(\"./markup_renderer.js\");\nclass AcssRenderer extends markup_renderer_js_1.MarkupRenderer {\n    markup(descrs) {\n        this.setScaleFunction(-2, 2, 0, 10, 0);\n        const markup = AudioUtil.personalityMarkup(descrs);\n        const result = [];\n        const currentPers = { open: [] };\n        let pause = null;\n        let isString = false;\n        for (let i = 0, descr; (descr = markup[i]); i++) {\n            if (AudioUtil.isMarkupElement(descr)) {\n                AudioUtil.mergeMarkup(currentPers, descr);\n                continue;\n            }\n            if (AudioUtil.isPauseElement(descr)) {\n                if (isString) {\n                    pause = AudioUtil.mergePause(pause, descr, Math.max);\n                }\n                continue;\n            }\n            const str = '\"' + this.merge(descr.span) + '\"';\n            isString = true;\n            if (pause) {\n                result.push(this.pause(pause));\n                pause = null;\n            }\n            const prosody = this.prosody_(currentPers);\n            result.push(prosody ? '(text (' + prosody + ') ' + str + ')' : str);\n        }\n        return '(exp ' + result.join(' ') + ')';\n    }\n    error(key) {\n        return '(error \"' + EventUtil.Move.get(key) + '\")';\n    }\n    prosodyElement(key, value) {\n        value = this.applyScaleFunction(value);\n        switch (key) {\n            case EngineConst.personalityProps.RATE:\n                return '(richness . ' + value + ')';\n            case EngineConst.personalityProps.PITCH:\n                return '(average-pitch . ' + value + ')';\n            case EngineConst.personalityProps.VOLUME:\n                return '(stress . ' + value + ')';\n        }\n        return '(value . ' + value + ')';\n    }\n    pause(pause) {\n        return ('(pause . ' +\n            this.pauseValue(pause[EngineConst.personalityProps.PAUSE]) +\n            ')');\n    }\n    prosody_(pros) {\n        const keys = pros.open;\n        const result = [];\n        for (let i = 0, key; (key = keys[i]); i++) {\n            result.push(this.prosodyElement(key, pros[key]));\n        }\n        return result.join(' ');\n    }\n}\nexports.AcssRenderer = AcssRenderer;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.XmlRenderer = void 0;\nconst engine_js_1 = require(\"../common/engine.js\");\nconst AudioUtil = require(\"./audio_util.js\");\nconst markup_renderer_js_1 = require(\"./markup_renderer.js\");\nclass XmlRenderer extends markup_renderer_js_1.MarkupRenderer {\n    markup(descrs) {\n        this.setScaleFunction(-2, 2, -100, 100, 2);\n        const markup = AudioUtil.personalityMarkup(descrs);\n        const result = [];\n        const currentOpen = [];\n        for (let i = 0, descr; (descr = markup[i]); i++) {\n            if (descr.span) {\n                result.push(this.merge(descr.span));\n                continue;\n            }\n            if (AudioUtil.isPauseElement(descr)) {\n                result.push(this.pause(descr));\n                continue;\n            }\n            if (descr.close.length) {\n                for (let j = 0; j < descr.close.length; j++) {\n                    const last = currentOpen.pop();\n                    if (descr.close.indexOf(last) === -1) {\n                        throw new engine_js_1.SREError('Unknown closing markup element: ' + last);\n                    }\n                    result.push(this.closeTag(last));\n                }\n            }\n            if (descr.open.length) {\n                const open = AudioUtil.sortClose(descr.open.slice(), markup.slice(i + 1));\n                open.forEach((o) => {\n                    result.push(this.prosodyElement(o, descr[o]));\n                    currentOpen.push(o);\n                });\n            }\n        }\n        return result.join(' ');\n    }\n}\nexports.XmlRenderer = XmlRenderer;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LayoutRenderer = void 0;\nconst debugger_js_1 = require(\"../common/debugger.js\");\nconst DomUtil = require(\"../common/dom_util.js\");\nconst EngineConst = require(\"../common/engine_const.js\");\nconst engine_js_1 = require(\"../common/engine.js\");\nconst AudioUtil = require(\"./audio_util.js\");\nconst xml_renderer_js_1 = require(\"./xml_renderer.js\");\nclass LayoutRenderer extends xml_renderer_js_1.XmlRenderer {\n    constructor() {\n        super(...arguments);\n        this.values = new Map();\n    }\n    finalize(str) {\n        setRelValues(this.values.get('rel'));\n        return setTwoDim(str);\n    }\n    pause(_pause) {\n        return '';\n    }\n    prosodyElement(attr, value) {\n        return attr === EngineConst.personalityProps.LAYOUT ? `<${value}>` : '';\n    }\n    closeTag(tag) {\n        return `</${tag}>`;\n    }\n    markup(descrs) {\n        this.values.clear();\n        const result = [];\n        let content = [];\n        for (const descr of descrs) {\n            if (!descr.layout) {\n                content.push(descr);\n                continue;\n            }\n            result.push(this.processContent(content));\n            content = [];\n            const [pref, layout, value] = this.layoutValue(descr.layout);\n            if (pref === 'begin') {\n                result.push('<' + layout + (value ? ` value=\"${value}\"` : '') + '>');\n                continue;\n            }\n            if (pref === 'end') {\n                result.push('</' + layout + '>');\n                continue;\n            }\n            console.warn('Something went wrong with layout markup: ' + layout);\n        }\n        result.push(this.processContent(content));\n        return result.join('');\n    }\n    processContent(content) {\n        const result = [];\n        const markup = AudioUtil.personalityMarkup(content);\n        for (let i = 0, descr; (descr = markup[i]); i++) {\n            if (descr.span) {\n                result.push(this.merge(descr.span));\n                continue;\n            }\n            if (AudioUtil.isPauseElement(descr)) {\n                continue;\n            }\n        }\n        return result.join('');\n    }\n    layoutValue(layout) {\n        const match = layout.match(/^(begin|end|)(.*\\D)(\\d*)$/);\n        const value = match[3];\n        if (!value) {\n            return [match[1], match[2], ''];\n        }\n        layout = match[2];\n        if (!this.values.has(layout)) {\n            this.values.set(layout, {});\n        }\n        this.values.get(layout)[value] = true;\n        return [match[1], layout, value];\n    }\n}\nexports.LayoutRenderer = LayoutRenderer;\nLayoutRenderer.options = {\n    cayleyshort: engine_js_1.Engine.getInstance().cayleyshort,\n    linebreaks: engine_js_1.Engine.getInstance().linebreaks\n};\nlet twodExpr = '';\nconst handlers = {\n    TABLE: handleTable,\n    CASES: handleCases,\n    CAYLEY: handleCayley,\n    MATRIX: handleMatrix,\n    CELL: recurseTree,\n    FENCE: recurseTree,\n    ROW: recurseTree,\n    FRACTION: handleFraction,\n    NUMERATOR: handleFractionPart,\n    DENOMINATOR: handleFractionPart,\n    REL: handleRelation,\n    OP: handleRelation\n};\nfunction applyHandler(element) {\n    const tag = DomUtil.tagName(element);\n    const handler = handlers[tag];\n    return handler ? handler(element) : element.textContent;\n}\nconst relValues = new Map();\nfunction setRelValues(values) {\n    relValues.clear();\n    if (!values)\n        return;\n    const keys = Object.keys(values)\n        .map((x) => parseInt(x))\n        .sort();\n    for (let i = 0, key; (key = keys[i]); i++) {\n        relValues.set(key, i + 1);\n    }\n}\nfunction setTwoDim(str) {\n    twodExpr = '';\n    const dom = DomUtil.parseInput(`<all>${str}</all>`);\n    debugger_js_1.Debugger.getInstance().output(DomUtil.formatXml(dom.toString()));\n    twodExpr = recurseTree(dom);\n    return twodExpr;\n}\nfunction combineContent(str1, str2) {\n    if (!str1 || !str2) {\n        return str1 + str2;\n    }\n    const height1 = strHeight(str1);\n    const height2 = strHeight(str2);\n    const diff = height1 - height2;\n    str1 = diff < 0 ? padCell(str1, height2, strWidth(str1)) : str1;\n    str2 = diff > 0 ? padCell(str2, height1, strWidth(str2)) : str2;\n    const lines1 = str1.split(/\\r\\n|\\r|\\n/);\n    const lines2 = str2.split(/\\r\\n|\\r|\\n/);\n    const result = [];\n    for (let i = 0; i < lines1.length; i++) {\n        result.push(lines1[i] + lines2[i]);\n    }\n    return result.join('\\n');\n}\nfunction recurseTree(dom) {\n    let result = '';\n    for (const child of Array.from(dom.childNodes)) {\n        if (child.nodeType === DomUtil.NodeType.TEXT_NODE) {\n            result = combineContent(result, child.textContent);\n            continue;\n        }\n        result = combineContent(result, applyHandler(child));\n    }\n    return result;\n}\nfunction strHeight(str) {\n    return str.split(/\\r\\n|\\r|\\n/).length;\n}\nfunction strWidth(str) {\n    return str.split(/\\r\\n|\\r|\\n/).reduce((max, x) => Math.max(x.length, max), 0);\n}\nfunction padHeight(str, height) {\n    const padding = height - strHeight(str);\n    return str + (padding > 0 ? new Array(padding + 1).join('\\n') : '');\n}\nfunction padWidth(str, width) {\n    const lines = str.split(/\\r\\n|\\r|\\n/);\n    const result = [];\n    for (const line of lines) {\n        const padding = width - line.length;\n        result.push(line + (padding > 0 ? new Array(padding + 1).join('⠀') : ''));\n    }\n    return result.join('\\n');\n}\nfunction padCell(str, height, width) {\n    str = padHeight(str, height);\n    return padWidth(str, width);\n}\nfunction assembleRows(matrix) {\n    const children = Array.from(matrix.childNodes);\n    const mat = [];\n    for (const row of children) {\n        if (row.nodeType !== DomUtil.NodeType.ELEMENT_NODE) {\n            continue;\n        }\n        mat.push(handleRow(row));\n    }\n    return mat;\n}\nfunction getMaxParameters(mat) {\n    const maxHeight = mat.reduce((max, x) => Math.max(x.height, max), 0);\n    const maxWidth = [];\n    for (let i = 0; i < mat[0].width.length; i++) {\n        maxWidth.push(mat.map((x) => x.width[i]).reduce((max, x) => Math.max(max, x), 0));\n    }\n    return [maxHeight, maxWidth];\n}\nfunction combineCells(mat, maxWidth) {\n    const newMat = [];\n    for (const row of mat) {\n        if (row.height === 0) {\n            continue;\n        }\n        const newCells = [];\n        for (let i = 0; i < row.cells.length; i++) {\n            newCells.push(padCell(row.cells[i], row.height, maxWidth[i]));\n        }\n        row.cells = newCells;\n        newMat.push(row);\n    }\n    return newMat;\n}\nfunction combineRows(mat, maxHeight) {\n    if (maxHeight === 1) {\n        return mat\n            .map((row) => row.lfence + row.cells.join(row.sep) + row.rfence)\n            .join('\\n');\n    }\n    const result = [];\n    for (const row of mat) {\n        const sep = verticalArrange(row.sep, row.height);\n        let str = row.cells.shift();\n        while (row.cells.length) {\n            str = combineContent(str, sep);\n            str = combineContent(str, row.cells.shift());\n        }\n        str = combineContent(verticalArrange(row.lfence, row.height), str);\n        str = combineContent(str, verticalArrange(row.rfence, row.height));\n        result.push(str);\n        result.push(row.lfence + new Array(strWidth(str) - 3).join(row.sep) + row.rfence);\n    }\n    return result.slice(0, -1).join('\\n');\n}\nfunction verticalArrange(char, height) {\n    let str = '';\n    while (height) {\n        str += char + '\\n';\n        height--;\n    }\n    return str.slice(0, -1);\n}\nfunction getFence(node) {\n    if (node.nodeType === DomUtil.NodeType.ELEMENT_NODE &&\n        DomUtil.tagName(node) === 'FENCE') {\n        return applyHandler(node);\n    }\n    return '';\n}\nfunction handleMatrix(matrix) {\n    let mat = assembleRows(matrix);\n    const [maxHeight, maxWidth] = getMaxParameters(mat);\n    mat = combineCells(mat, maxWidth);\n    return combineRows(mat, maxHeight);\n}\nfunction handleTable(table) {\n    let mat = assembleRows(table);\n    mat.forEach((row) => {\n        row.cells = row.cells.slice(1).slice(0, -1);\n        row.width = row.width.slice(1).slice(0, -1);\n    });\n    const [maxHeight, maxWidth] = getMaxParameters(mat);\n    mat = combineCells(mat, maxWidth);\n    return combineRows(mat, maxHeight);\n}\nfunction handleCases(cases) {\n    let mat = assembleRows(cases);\n    mat.forEach((row) => {\n        row.cells = row.cells.slice(0, -1);\n        row.width = row.width.slice(0, -1);\n    });\n    const [maxHeight, maxWidth] = getMaxParameters(mat);\n    mat = combineCells(mat, maxWidth);\n    return combineRows(mat, maxHeight);\n}\nfunction handleCayley(cayley) {\n    let mat = assembleRows(cayley);\n    mat.forEach((row) => {\n        row.cells = row.cells.slice(1).slice(0, -1);\n        row.width = row.width.slice(1).slice(0, -1);\n        row.sep = row.sep + row.sep;\n    });\n    const [maxHeight, maxWidth] = getMaxParameters(mat);\n    const bar = {\n        lfence: '',\n        rfence: '',\n        cells: maxWidth.map((x) => '⠐' + new Array(x).join('⠒')),\n        width: maxWidth,\n        height: 1,\n        sep: mat[0].sep\n    };\n    if (engine_js_1.Engine.getInstance().cayleyshort && mat[0].cells[0] === '⠀') {\n        bar.cells[0] = '⠀';\n    }\n    mat.splice(1, 0, bar);\n    mat = combineCells(mat, maxWidth);\n    return combineRows(mat, maxHeight);\n}\nfunction handleRow(row) {\n    const children = Array.from(row.childNodes);\n    const lfence = getFence(children[0]);\n    const rfence = getFence(children[children.length - 1]);\n    if (lfence) {\n        children.shift();\n    }\n    if (rfence) {\n        children.pop();\n    }\n    let sep = '';\n    const cells = [];\n    for (const child of children) {\n        if (child.nodeType === DomUtil.NodeType.TEXT_NODE) {\n            sep = child.textContent;\n            continue;\n        }\n        const result = applyHandler(child);\n        cells.push(result);\n    }\n    return {\n        lfence: lfence,\n        rfence: rfence,\n        sep: sep,\n        cells: cells,\n        height: cells.reduce((max, x) => Math.max(strHeight(x), max), 0),\n        width: cells.map(strWidth)\n    };\n}\nfunction centerCell(cell, width) {\n    const cw = strWidth(cell);\n    const center = (width - cw) / 2;\n    const [lpad, rpad] = Math.floor(center) === center\n        ? [center, center]\n        : [Math.floor(center), Math.ceil(center)];\n    const lines = cell.split(/\\r\\n|\\r|\\n/);\n    const result = [];\n    const [lstr, rstr] = [\n        new Array(lpad + 1).join('⠀'),\n        new Array(rpad + 1).join('⠀')\n    ];\n    for (const line of lines) {\n        result.push(lstr + line + rstr);\n    }\n    return result.join('\\n');\n}\nfunction handleFraction(frac) {\n    const [open, num, , den, close] = Array.from(frac.childNodes);\n    const numerator = applyHandler(num);\n    const denominator = applyHandler(den);\n    const nwidth = strWidth(numerator);\n    const dwidth = strWidth(denominator);\n    let maxWidth = Math.max(nwidth, dwidth);\n    const bar = open + new Array(maxWidth + 1).join('⠒') + close;\n    maxWidth = bar.length;\n    return (`${centerCell(numerator, maxWidth)}\\n${bar}\\n` +\n        `${centerCell(denominator, maxWidth)}`);\n}\nfunction handleFractionPart(prt) {\n    const fchild = prt.firstChild;\n    const content = recurseTree(prt);\n    if (fchild && fchild.nodeType === DomUtil.NodeType.ELEMENT_NODE) {\n        if (DomUtil.tagName(fchild) === 'ENGLISH') {\n            return '⠰' + content;\n        }\n        if (DomUtil.tagName(fchild) === 'NUMBER') {\n            return '⠼' + content;\n        }\n    }\n    return content;\n}\nfunction handleRelation(rel) {\n    if (!engine_js_1.Engine.getInstance().linebreaks) {\n        return recurseTree(rel);\n    }\n    const value = relValues.get(parseInt(rel.getAttribute('value')));\n    return (value ? `<br value=\"${value}\"/>` : '') + recurseTree(rel);\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PunctuationRenderer = void 0;\nconst EngineConst = require(\"../common/engine_const.js\");\nconst abstract_audio_renderer_js_1 = require(\"./abstract_audio_renderer.js\");\nconst AudioUtil = require(\"./audio_util.js\");\nclass PunctuationRenderer extends abstract_audio_renderer_js_1.AbstractAudioRenderer {\n    markup(descrs) {\n        const markup = AudioUtil.personalityMarkup(descrs);\n        let str = '';\n        let pause = null;\n        let span = false;\n        for (let i = 0, descr; (descr = markup[i]); i++) {\n            if (AudioUtil.isMarkupElement(descr)) {\n                continue;\n            }\n            if (AudioUtil.isPauseElement(descr)) {\n                pause = descr;\n                continue;\n            }\n            if (pause) {\n                str += this.pause(pause[EngineConst.personalityProps.PAUSE]);\n                pause = null;\n            }\n            str += (span ? this.separator : '') + this.merge(descr.span);\n            span = true;\n        }\n        return str;\n    }\n    pause(pause) {\n        let newPause;\n        if (typeof pause === 'number') {\n            if (pause <= 250) {\n                newPause = 'short';\n            }\n            else if (pause <= 500) {\n                newPause = 'medium';\n            }\n            else {\n                newPause = 'long';\n            }\n        }\n        else {\n            newPause = pause;\n        }\n        return PunctuationRenderer.PAUSE_PUNCTUATION.get(newPause) || '';\n    }\n}\nexports.PunctuationRenderer = PunctuationRenderer;\nPunctuationRenderer.PAUSE_PUNCTUATION = new Map([\n    ['short', ','],\n    ['medium', ';'],\n    ['long', '.']\n]);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SableRenderer = void 0;\nconst EngineConst = require(\"../common/engine_const.js\");\nconst xml_renderer_js_1 = require(\"./xml_renderer.js\");\nclass SableRenderer extends xml_renderer_js_1.XmlRenderer {\n    finalize(str) {\n        return ('<?xml version=\"1.0\"?>' +\n            '<!DOCTYPE SABLE PUBLIC \"-//SABLE//DTD SABLE speech mark up//EN\"' +\n            ' \"Sable.v0_2.dtd\" []><SABLE>' +\n            this.separator +\n            str +\n            this.separator +\n            '</SABLE>');\n    }\n    pause(pause) {\n        return ('<BREAK ' +\n            'MSEC=\"' +\n            this.pauseValue(pause[EngineConst.personalityProps.PAUSE]) +\n            '\"/>');\n    }\n    prosodyElement(tag, value) {\n        value = this.applyScaleFunction(value);\n        switch (tag) {\n            case EngineConst.personalityProps.PITCH:\n                return '<PITCH RANGE=\"' + value + '%\">';\n            case EngineConst.personalityProps.RATE:\n                return '<RATE SPEED=\"' + value + '%\">';\n            case EngineConst.personalityProps.VOLUME:\n                return '<VOLUME LEVEL=\"' + value + '%\">';\n            default:\n                return '<' + tag.toUpperCase() + ' VALUE=\"' + value + '\">';\n        }\n    }\n    closeTag(tag) {\n        return '</' + tag.toUpperCase() + '>';\n    }\n}\nexports.SableRenderer = SableRenderer;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SsmlRenderer = void 0;\nconst engine_js_1 = require(\"../common/engine.js\");\nconst EngineConst = require(\"../common/engine_const.js\");\nconst xml_renderer_js_1 = require(\"./xml_renderer.js\");\nclass SsmlRenderer extends xml_renderer_js_1.XmlRenderer {\n    finalize(str) {\n        return ('<?xml version=\"1.0\"?><speak version=\"1.1\"' +\n            ' xmlns=\"http://www.w3.org/2001/10/synthesis\"' +\n            ` xml:lang=\"${engine_js_1.Engine.getInstance().locale}\">` +\n            '<prosody rate=\"' +\n            engine_js_1.Engine.getInstance().getRate() +\n            '%\">' +\n            this.separator +\n            str +\n            this.separator +\n            '</prosody></speak>');\n    }\n    pause(pause) {\n        return ('<break ' +\n            'time=\"' +\n            this.pauseValue(pause[EngineConst.personalityProps.PAUSE]) +\n            'ms\"/>');\n    }\n    prosodyElement(attr, value) {\n        value = Math.floor(this.applyScaleFunction(value));\n        const valueStr = value < 0 ? value.toString() : '+' + value.toString();\n        return ('<prosody ' +\n            attr.toLowerCase() +\n            '=\"' +\n            valueStr +\n            (attr === EngineConst.personalityProps.VOLUME ? '>' : '%\">'));\n    }\n    closeTag(_tag) {\n        return '</prosody>';\n    }\n    markup(descrs) {\n        SsmlRenderer.MARKS = {};\n        return super.markup(descrs);\n    }\n    merge(spans) {\n        const result = [];\n        let lastMark = '';\n        for (let i = 0; i < spans.length; i++) {\n            const span = spans[i];\n            if (this.isEmptySpan(span))\n                continue;\n            const kind = SsmlRenderer.MARK_KIND ? span.attributes['kind'] : '';\n            const id = engine_js_1.Engine.getInstance().automark\n                ? span.attributes['id']\n                : engine_js_1.Engine.getInstance().mark\n                    ? span.attributes['extid']\n                    : '';\n            if (id &&\n                id !== lastMark &&\n                !(SsmlRenderer.MARK_ONCE && SsmlRenderer.MARKS[id])) {\n                result.push(kind ? `<mark name=\"${id}\" kind=\"${kind}\"/>` : `<mark name=\"${id}\"/>`);\n                lastMark = id;\n                SsmlRenderer.MARKS[id] = true;\n            }\n            if (engine_js_1.Engine.getInstance().character &&\n                span.speech.length === 1 &&\n                span.speech.match(/[a-zA-Z]/)) {\n                result.push('<say-as interpret-as=\"' +\n                    SsmlRenderer.CHARACTER_ATTR +\n                    '\">' +\n                    span.speech +\n                    '</say-as>');\n            }\n            else {\n                result.push(span.speech);\n            }\n        }\n        return result.join(this.separator);\n    }\n    isEmptySpan(span) {\n        const sep = span.attributes['separator'];\n        return span.speech.match(/^\\s*$/) && (!sep || sep.match(/^\\s*$/));\n    }\n}\nexports.SsmlRenderer = SsmlRenderer;\nSsmlRenderer.MARK_ONCE = false;\nSsmlRenderer.MARK_KIND = true;\nSsmlRenderer.CHARACTER_ATTR = 'character';\nSsmlRenderer.MARKS = {};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CountingRenderer = exports.StringRenderer = void 0;\nconst engine_js_1 = require(\"../common/engine.js\");\nconst abstract_audio_renderer_js_1 = require(\"./abstract_audio_renderer.js\");\nconst audio_util_js_1 = require(\"./audio_util.js\");\nclass StringRenderer extends abstract_audio_renderer_js_1.AbstractAudioRenderer {\n    markup(descrs) {\n        let str = '';\n        const markup = (0, audio_util_js_1.personalityMarkup)(descrs);\n        const clean = markup.filter((x) => x.span);\n        if (!clean.length) {\n            return str;\n        }\n        const len = clean.length - 1;\n        for (let i = 0, descr; (descr = clean[i]); i++) {\n            if (descr.span) {\n                str += this.merge(descr.span);\n            }\n            if (i >= len) {\n                continue;\n            }\n            const join = descr.join;\n            str += typeof join === 'undefined' ? this.separator : join;\n        }\n        return str;\n    }\n}\nexports.StringRenderer = StringRenderer;\nclass CountingRenderer extends StringRenderer {\n    finalize(str) {\n        const output = super.finalize(str);\n        const count = engine_js_1.Engine.getInstance().modality === 'braille' ? '⣿⠀⣿⠀⣿⠀⣿⠀⣿⠀' : '0123456789';\n        let second = new Array(Math.trunc(output.length / 10) + 1).join(count);\n        second += count.slice(0, output.length % 10);\n        return output + '\\n' + second;\n    }\n}\nexports.CountingRenderer = CountingRenderer;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setSeparator = setSeparator;\nexports.getSeparator = getSeparator;\nexports.markup = markup;\nexports.merge = merge;\nexports.finalize = finalize;\nexports.error = error;\nexports.registerRenderer = registerRenderer;\nexports.isXml = isXml;\nconst engine_js_1 = require(\"../common/engine.js\");\nconst EngineConst = require(\"../common/engine_const.js\");\nconst acss_renderer_js_1 = require(\"./acss_renderer.js\");\nconst layout_renderer_js_1 = require(\"./layout_renderer.js\");\nconst punctuation_renderer_js_1 = require(\"./punctuation_renderer.js\");\nconst sable_renderer_js_1 = require(\"./sable_renderer.js\");\nconst span_js_1 = require(\"./span.js\");\nconst ssml_renderer_js_1 = require(\"./ssml_renderer.js\");\nconst string_renderer_js_1 = require(\"./string_renderer.js\");\nconst xml_renderer_js_1 = require(\"./xml_renderer.js\");\nconst xmlInstance = new ssml_renderer_js_1.SsmlRenderer();\nconst renderers = new Map([\n    [EngineConst.Markup.NONE, new string_renderer_js_1.StringRenderer()],\n    [EngineConst.Markup.COUNTING, new string_renderer_js_1.CountingRenderer()],\n    [EngineConst.Markup.PUNCTUATION, new punctuation_renderer_js_1.PunctuationRenderer()],\n    [EngineConst.Markup.LAYOUT, new layout_renderer_js_1.LayoutRenderer()],\n    [EngineConst.Markup.ACSS, new acss_renderer_js_1.AcssRenderer()],\n    [EngineConst.Markup.SABLE, new sable_renderer_js_1.SableRenderer()],\n    [EngineConst.Markup.VOICEXML, xmlInstance],\n    [EngineConst.Markup.SSML, xmlInstance]\n]);\nfunction setSeparator(sep) {\n    const renderer = renderers.get(engine_js_1.Engine.getInstance().markup);\n    if (renderer) {\n        renderer.separator = sep;\n    }\n}\nfunction getSeparator() {\n    const renderer = renderers.get(engine_js_1.Engine.getInstance().markup);\n    return renderer ? renderer.separator : '';\n}\nfunction markup(descrs) {\n    const renderer = renderers.get(engine_js_1.Engine.getInstance().markup);\n    if (!renderer) {\n        return '';\n    }\n    return renderer.markup(descrs);\n}\nfunction merge(strs) {\n    const span = strs.map((s) => {\n        return typeof s === 'string' ? span_js_1.Span.stringEmpty(s) : s;\n    });\n    const renderer = renderers.get(engine_js_1.Engine.getInstance().markup);\n    if (!renderer) {\n        return strs.join();\n    }\n    return renderer.merge(span);\n}\nfunction finalize(str) {\n    const renderer = renderers.get(engine_js_1.Engine.getInstance().markup);\n    if (!renderer) {\n        return str;\n    }\n    return renderer.finalize(str);\n}\nfunction error(key) {\n    const renderer = renderers.get(engine_js_1.Engine.getInstance().markup);\n    if (!renderer) {\n        return '';\n    }\n    return renderer.error(key);\n}\nfunction registerRenderer(type, renderer) {\n    renderers.set(type, renderer);\n}\nfunction isXml() {\n    return renderers.get(engine_js_1.Engine.getInstance().markup) instanceof xml_renderer_js_1.XmlRenderer;\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SemanticAbstractParser = void 0;\nconst semantic_node_factory_js_1 = require(\"./semantic_node_factory.js\");\nclass SemanticAbstractParser {\n    constructor(type) {\n        this.type = type;\n        this.factory_ = new semantic_node_factory_js_1.SemanticNodeFactory();\n    }\n    getFactory() {\n        return this.factory_;\n    }\n    setFactory(factory) {\n        this.factory_ = factory;\n    }\n    getType() {\n        return this.type;\n    }\n    parseList(list) {\n        const result = [];\n        for (let i = 0, element; (element = list[i]); i++) {\n            result.push(this.parse(element));\n        }\n        return result;\n    }\n}\nexports.SemanticAbstractParser = SemanticAbstractParser;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SemanticMathml = void 0;\nconst DomUtil = require(\"../common/dom_util.js\");\nconst semantic_meaning_js_1 = require(\"./semantic_meaning.js\");\nconst semantic_attr_js_1 = require(\"./semantic_attr.js\");\nconst semantic_parser_js_1 = require(\"./semantic_parser.js\");\nconst SemanticPred = require(\"./semantic_pred.js\");\nconst semantic_processor_js_1 = require(\"./semantic_processor.js\");\nconst SemanticUtil = require(\"./semantic_util.js\");\nconst semantic_util_js_1 = require(\"../semantic_tree/semantic_util.js\");\nconst semantic_heuristic_factory_js_1 = require(\"./semantic_heuristic_factory.js\");\nclass SemanticMathml extends semantic_parser_js_1.SemanticAbstractParser {\n    static getAttribute_(node, attr, def) {\n        if (!node.hasAttribute(attr)) {\n            return def;\n        }\n        const value = node.getAttribute(attr);\n        if (value.match(/^\\s*$/)) {\n            return null;\n        }\n        return value;\n    }\n    constructor() {\n        super('MathML');\n        this.parseMap_ = new Map([\n            [semantic_util_js_1.MMLTAGS.SEMANTICS, this.semantics_.bind(this)],\n            [semantic_util_js_1.MMLTAGS.MATH, this.rows_.bind(this)],\n            [semantic_util_js_1.MMLTAGS.MROW, this.rows_.bind(this)],\n            [semantic_util_js_1.MMLTAGS.MPADDED, this.rows_.bind(this)],\n            [semantic_util_js_1.MMLTAGS.MSTYLE, this.rows_.bind(this)],\n            [semantic_util_js_1.MMLTAGS.MFRAC, this.fraction_.bind(this)],\n            [semantic_util_js_1.MMLTAGS.MSUB, this.limits_.bind(this)],\n            [semantic_util_js_1.MMLTAGS.MSUP, this.limits_.bind(this)],\n            [semantic_util_js_1.MMLTAGS.MSUBSUP, this.limits_.bind(this)],\n            [semantic_util_js_1.MMLTAGS.MOVER, this.limits_.bind(this)],\n            [semantic_util_js_1.MMLTAGS.MUNDER, this.limits_.bind(this)],\n            [semantic_util_js_1.MMLTAGS.MUNDEROVER, this.limits_.bind(this)],\n            [semantic_util_js_1.MMLTAGS.MROOT, this.root_.bind(this)],\n            [semantic_util_js_1.MMLTAGS.MSQRT, this.sqrt_.bind(this)],\n            [semantic_util_js_1.MMLTAGS.MTABLE, this.table_.bind(this)],\n            [semantic_util_js_1.MMLTAGS.MLABELEDTR, this.tableLabeledRow_.bind(this)],\n            [semantic_util_js_1.MMLTAGS.MTR, this.tableRow_.bind(this)],\n            [semantic_util_js_1.MMLTAGS.MTD, this.tableCell_.bind(this)],\n            [semantic_util_js_1.MMLTAGS.MS, this.text_.bind(this)],\n            [semantic_util_js_1.MMLTAGS.MTEXT, this.text_.bind(this)],\n            [semantic_util_js_1.MMLTAGS.MSPACE, this.space_.bind(this)],\n            [semantic_util_js_1.MMLTAGS.ANNOTATIONXML, this.text_.bind(this)],\n            [semantic_util_js_1.MMLTAGS.MI, this.identifier_.bind(this)],\n            [semantic_util_js_1.MMLTAGS.MN, this.number_.bind(this)],\n            [semantic_util_js_1.MMLTAGS.MO, this.operator_.bind(this)],\n            [semantic_util_js_1.MMLTAGS.MFENCED, this.fenced_.bind(this)],\n            [semantic_util_js_1.MMLTAGS.MENCLOSE, this.enclosed_.bind(this)],\n            [semantic_util_js_1.MMLTAGS.MMULTISCRIPTS, this.multiscripts_.bind(this)],\n            [semantic_util_js_1.MMLTAGS.ANNOTATION, this.empty_.bind(this)],\n            [semantic_util_js_1.MMLTAGS.NONE, this.empty_.bind(this)],\n            [semantic_util_js_1.MMLTAGS.MACTION, this.action_.bind(this)]\n        ]);\n        const meaning = {\n            type: semantic_meaning_js_1.SemanticType.IDENTIFIER,\n            role: semantic_meaning_js_1.SemanticRole.NUMBERSET,\n            font: semantic_meaning_js_1.SemanticFont.DOUBLESTRUCK\n        };\n        [\n            'C',\n            'H',\n            'N',\n            'P',\n            'Q',\n            'R',\n            'Z',\n            'ℂ',\n            'ℍ',\n            'ℕ',\n            'ℙ',\n            'ℚ',\n            'ℝ',\n            'ℤ'\n        ].forEach(((x) => this.getFactory().defaultMap.set(x, meaning)).bind(this));\n    }\n    parse(mml) {\n        semantic_processor_js_1.SemanticProcessor.getInstance().setNodeFactory(this.getFactory());\n        const children = DomUtil.toArray(mml.childNodes);\n        const tag = DomUtil.tagName(mml);\n        const func = this.parseMap_.get(tag);\n        const newNode = (func ? func : this.dummy_.bind(this))(mml, children);\n        SemanticUtil.addAttributes(newNode, mml);\n        if ([\n            semantic_util_js_1.MMLTAGS.MATH,\n            semantic_util_js_1.MMLTAGS.MROW,\n            semantic_util_js_1.MMLTAGS.MPADDED,\n            semantic_util_js_1.MMLTAGS.MSTYLE,\n            semantic_util_js_1.MMLTAGS.SEMANTICS,\n            semantic_util_js_1.MMLTAGS.MACTION\n        ].indexOf(tag) !== -1) {\n            return newNode;\n        }\n        newNode.mathml.unshift(mml);\n        newNode.mathmlTree = mml;\n        return newNode;\n    }\n    semantics_(_node, children) {\n        return children.length\n            ? this.parse(children[0])\n            : this.getFactory().makeEmptyNode();\n    }\n    rows_(node, children) {\n        const semantics = node.getAttribute('semantics');\n        if (semantics && semantics.match('bspr_')) {\n            return semantic_processor_js_1.SemanticProcessor.proof(node, semantics, this.parseList.bind(this));\n        }\n        children = SemanticUtil.purgeNodes(children);\n        let newNode;\n        if (children.length === 1) {\n            newNode = this.parse(children[0]);\n            if (newNode.type === semantic_meaning_js_1.SemanticType.EMPTY && !newNode.mathmlTree) {\n                newNode.mathmlTree = node;\n            }\n        }\n        else {\n            const snode = semantic_heuristic_factory_js_1.SemanticHeuristics.run('function_from_identifiers', node);\n            newNode =\n                snode && snode !== node\n                    ? snode\n                    : semantic_processor_js_1.SemanticProcessor.getInstance().row(this.parseList(children));\n        }\n        newNode.mathml.unshift(node);\n        return newNode;\n    }\n    fraction_(node, children) {\n        if (!children.length) {\n            return this.getFactory().makeEmptyNode();\n        }\n        const upper = this.parse(children[0]);\n        const lower = children[1]\n            ? this.parse(children[1])\n            : this.getFactory().makeEmptyNode();\n        const sem = semantic_processor_js_1.SemanticProcessor.getInstance().fractionLikeNode(upper, lower, node.getAttribute('linethickness'), node.getAttribute('bevelled') === 'true');\n        return sem;\n    }\n    limits_(node, children) {\n        return semantic_processor_js_1.SemanticProcessor.getInstance().limitNode(DomUtil.tagName(node), this.parseList(children));\n    }\n    root_(node, children) {\n        if (!children[1]) {\n            return this.sqrt_(node, children);\n        }\n        return this.getFactory().makeBranchNode(semantic_meaning_js_1.SemanticType.ROOT, [this.parse(children[1]), this.parse(children[0])], []);\n    }\n    sqrt_(_node, children) {\n        const semNodes = this.parseList(SemanticUtil.purgeNodes(children));\n        return this.getFactory().makeBranchNode(semantic_meaning_js_1.SemanticType.SQRT, [semantic_processor_js_1.SemanticProcessor.getInstance().row(semNodes)], []);\n    }\n    table_(node, children) {\n        const semantics = node.getAttribute('semantics');\n        if (semantics && semantics.match('bspr_')) {\n            return semantic_processor_js_1.SemanticProcessor.proof(node, semantics, this.parseList.bind(this));\n        }\n        const newNode = this.getFactory().makeBranchNode(semantic_meaning_js_1.SemanticType.TABLE, this.parseList(children), []);\n        newNode.mathmlTree = node;\n        return semantic_processor_js_1.SemanticProcessor.tableToMultiline(newNode);\n    }\n    tableRow_(_node, children) {\n        const newNode = this.getFactory().makeBranchNode(semantic_meaning_js_1.SemanticType.ROW, this.parseList(children), []);\n        newNode.role = semantic_meaning_js_1.SemanticRole.TABLE;\n        return newNode;\n    }\n    tableLabeledRow_(node, children) {\n        var _a;\n        if (!children.length) {\n            return this.tableRow_(node, children);\n        }\n        const label = this.parse(children[0]);\n        label.role = semantic_meaning_js_1.SemanticRole.LABEL;\n        if (((_a = label.childNodes[0]) === null || _a === void 0 ? void 0 : _a.type) === semantic_meaning_js_1.SemanticType.TEXT) {\n            label.childNodes[0].role = semantic_meaning_js_1.SemanticRole.LABEL;\n        }\n        const newNode = this.getFactory().makeBranchNode(semantic_meaning_js_1.SemanticType.ROW, this.parseList(children.slice(1)), [label]);\n        newNode.role = semantic_meaning_js_1.SemanticRole.TABLE;\n        return newNode;\n    }\n    tableCell_(_node, children) {\n        const semNodes = this.parseList(SemanticUtil.purgeNodes(children));\n        let childNodes;\n        if (!semNodes.length) {\n            childNodes = [];\n        }\n        else if (semNodes.length === 1 &&\n            SemanticPred.isType(semNodes[0], semantic_meaning_js_1.SemanticType.EMPTY)) {\n            childNodes = semNodes;\n        }\n        else {\n            childNodes = [semantic_processor_js_1.SemanticProcessor.getInstance().row(semNodes)];\n        }\n        const newNode = this.getFactory().makeBranchNode(semantic_meaning_js_1.SemanticType.CELL, childNodes, []);\n        newNode.role = semantic_meaning_js_1.SemanticRole.TABLE;\n        return newNode;\n    }\n    space_(node, children) {\n        const width = node.getAttribute('width');\n        const match = width && width.match(/[a-z]*$/);\n        if (!match) {\n            return this.empty_(node, children);\n        }\n        const sizes = {\n            cm: 0.4,\n            pc: 0.5,\n            em: 0.5,\n            ex: 1,\n            in: 0.15,\n            pt: 5,\n            mm: 5\n        };\n        const unit = match[0];\n        const measure = parseFloat(width.slice(0, match.index));\n        const size = sizes[unit];\n        if (!size || isNaN(measure) || measure < size) {\n            return this.empty_(node, children);\n        }\n        const newNode = this.getFactory().makeUnprocessed(node);\n        return semantic_processor_js_1.SemanticProcessor.getInstance().text(newNode, DomUtil.tagName(node));\n    }\n    text_(node, children) {\n        const newNode = this.leaf_(node, children);\n        if (!node.textContent) {\n            return newNode;\n        }\n        newNode.updateContent(node.textContent, true);\n        return semantic_processor_js_1.SemanticProcessor.getInstance().text(newNode, DomUtil.tagName(node));\n    }\n    identifier_(node, children) {\n        const newNode = this.leaf_(node, children);\n        return semantic_processor_js_1.SemanticProcessor.getInstance().identifierNode(newNode, semantic_processor_js_1.SemanticProcessor.getInstance().font(node.getAttribute('mathvariant')), node.getAttribute('class'));\n    }\n    number_(node, children) {\n        const newNode = this.leaf_(node, children);\n        semantic_processor_js_1.SemanticProcessor.number(newNode);\n        return newNode;\n    }\n    operator_(node, children) {\n        const newNode = this.leaf_(node, children);\n        semantic_processor_js_1.SemanticProcessor.getInstance().operatorNode(newNode);\n        return newNode;\n    }\n    fenced_(node, children) {\n        const semNodes = this.parseList(SemanticUtil.purgeNodes(children));\n        const sepValue = SemanticMathml.getAttribute_(node, 'separators', ',');\n        const open = SemanticMathml.getAttribute_(node, 'open', '(');\n        const close = SemanticMathml.getAttribute_(node, 'close', ')');\n        const newNode = semantic_processor_js_1.SemanticProcessor.getInstance().mfenced(open, close, sepValue, semNodes);\n        const nodes = semantic_processor_js_1.SemanticProcessor.getInstance().tablesInRow([newNode]);\n        return nodes[0];\n    }\n    enclosed_(node, children) {\n        const semNodes = this.parseList(SemanticUtil.purgeNodes(children));\n        const newNode = this.getFactory().makeBranchNode(semantic_meaning_js_1.SemanticType.ENCLOSE, [semantic_processor_js_1.SemanticProcessor.getInstance().row(semNodes)], []);\n        newNode.role =\n            node.getAttribute('notation') || semantic_meaning_js_1.SemanticRole.UNKNOWN;\n        return newNode;\n    }\n    multiscripts_(_node, children) {\n        if (!children.length) {\n            return this.getFactory().makeEmptyNode();\n        }\n        const base = this.parse(children.shift());\n        if (!children.length) {\n            return base;\n        }\n        const lsup = [];\n        const lsub = [];\n        const rsup = [];\n        const rsub = [];\n        let prescripts = false;\n        let scriptcount = 0;\n        for (let i = 0, child; (child = children[i]); i++) {\n            if (DomUtil.tagName(child) === semantic_util_js_1.MMLTAGS.MPRESCRIPTS) {\n                prescripts = true;\n                scriptcount = 0;\n                continue;\n            }\n            prescripts\n                ? scriptcount & 1\n                    ? lsup.push(child)\n                    : lsub.push(child)\n                : scriptcount & 1\n                    ? rsup.push(child)\n                    : rsub.push(child);\n            scriptcount++;\n        }\n        if (!SemanticUtil.purgeNodes(lsup).length &&\n            !SemanticUtil.purgeNodes(lsub).length) {\n            return semantic_processor_js_1.SemanticProcessor.getInstance().pseudoTensor(base, this.parseList(rsub), this.parseList(rsup));\n        }\n        return semantic_processor_js_1.SemanticProcessor.getInstance().tensor(base, this.parseList(lsub), this.parseList(lsup), this.parseList(rsub), this.parseList(rsup));\n    }\n    empty_(_node, _children) {\n        return this.getFactory().makeEmptyNode();\n    }\n    action_(node, children) {\n        const selection = children[node.hasAttribute('selection')\n            ? parseInt(node.getAttribute('selection'), 10) - 1\n            : 0];\n        const stree = this.parse(selection);\n        stree.mathmlTree = selection;\n        return stree;\n    }\n    dummy_(node, _children) {\n        const unknown = this.getFactory().makeUnprocessed(node);\n        unknown.role = node.tagName;\n        unknown.textContent = node.textContent;\n        return unknown;\n    }\n    leaf_(mml, children) {\n        if (children.length === 1 &&\n            children[0].nodeType !== DomUtil.NodeType.TEXT_NODE) {\n            const node = this.getFactory().makeUnprocessed(mml);\n            node.role = children[0].tagName;\n            SemanticUtil.addAttributes(node, children[0]);\n            return node;\n        }\n        const node = this.getFactory().makeLeafNode(mml.textContent, semantic_processor_js_1.SemanticProcessor.getInstance().font(mml.getAttribute('mathvariant')));\n        if (mml.hasAttribute('data-latex')) {\n            semantic_attr_js_1.SemanticMap.LatexCommands.set(mml.getAttribute('data-latex'), mml.textContent);\n        }\n        return node;\n    }\n}\nexports.SemanticMathml = SemanticMathml;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SemanticMmlHeuristic = exports.SemanticMultiHeuristic = exports.SemanticTreeHeuristic = void 0;\nclass SemanticAbstractHeuristic {\n    constructor(name, method, predicate = (_x) => false) {\n        this.name = name;\n        this.apply = method;\n        this.applicable = predicate;\n    }\n}\nclass SemanticTreeHeuristic extends SemanticAbstractHeuristic {\n}\nexports.SemanticTreeHeuristic = SemanticTreeHeuristic;\nclass SemanticMultiHeuristic extends SemanticAbstractHeuristic {\n}\nexports.SemanticMultiHeuristic = SemanticMultiHeuristic;\nclass SemanticMmlHeuristic extends SemanticAbstractHeuristic {\n}\nexports.SemanticMmlHeuristic = SemanticMmlHeuristic;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EnrichAttributes = exports.Attribute = void 0;\nexports.makeIdList = makeIdList;\nexports.setAttributes = setAttributes;\nexports.removeAttributePrefix = removeAttributePrefix;\nexports.addPrefix = addPrefix;\nexports.addMrow = addMrow;\nconst DomUtil = require(\"../common/dom_util.js\");\nconst semantic_meaning_js_1 = require(\"../semantic_tree/semantic_meaning.js\");\nconst Prefix = 'data-semantic-';\nvar Attribute;\n(function (Attribute) {\n    Attribute[\"ADDED\"] = \"data-semantic-added\";\n    Attribute[\"ALTERNATIVE\"] = \"data-semantic-alternative\";\n    Attribute[\"CHILDREN\"] = \"data-semantic-children\";\n    Attribute[\"COLLAPSED\"] = \"data-semantic-collapsed\";\n    Attribute[\"CONTENT\"] = \"data-semantic-content\";\n    Attribute[\"EMBELLISHED\"] = \"data-semantic-embellished\";\n    Attribute[\"FENCEPOINTER\"] = \"data-semantic-fencepointer\";\n    Attribute[\"FONT\"] = \"data-semantic-font\";\n    Attribute[\"ID\"] = \"data-semantic-id\";\n    Attribute[\"ANNOTATION\"] = \"data-semantic-annotation\";\n    Attribute[\"ATTRIBUTES\"] = \"data-semantic-attributes\";\n    Attribute[\"OPERATOR\"] = \"data-semantic-operator\";\n    Attribute[\"OWNS\"] = \"data-semantic-owns\";\n    Attribute[\"PARENT\"] = \"data-semantic-parent\";\n    Attribute[\"POSTFIX\"] = \"data-semantic-postfix\";\n    Attribute[\"PREFIX\"] = \"data-semantic-prefix\";\n    Attribute[\"ROLE\"] = \"data-semantic-role\";\n    Attribute[\"SPEECH\"] = \"data-semantic-speech\";\n    Attribute[\"STRUCTURE\"] = \"data-semantic-structure\";\n    Attribute[\"SUMMARY\"] = \"data-semantic-summary\";\n    Attribute[\"TYPE\"] = \"data-semantic-type\";\n})(Attribute || (exports.Attribute = Attribute = {}));\nexports.EnrichAttributes = [\n    Attribute.ADDED,\n    Attribute.ALTERNATIVE,\n    Attribute.CHILDREN,\n    Attribute.COLLAPSED,\n    Attribute.CONTENT,\n    Attribute.EMBELLISHED,\n    Attribute.FENCEPOINTER,\n    Attribute.FONT,\n    Attribute.ID,\n    Attribute.ANNOTATION,\n    Attribute.ATTRIBUTES,\n    Attribute.OPERATOR,\n    Attribute.OWNS,\n    Attribute.PARENT,\n    Attribute.POSTFIX,\n    Attribute.PREFIX,\n    Attribute.ROLE,\n    Attribute.SPEECH,\n    Attribute.STRUCTURE,\n    Attribute.SUMMARY,\n    Attribute.TYPE\n];\nfunction makeIdList(nodes) {\n    return nodes\n        .map(function (node) {\n        return node.id;\n    })\n        .join(',');\n}\nfunction setAttributes(mml, semantic) {\n    mml.setAttribute(Attribute.TYPE, semantic.type);\n    const attributes = semantic.allAttributes();\n    for (let i = 0, attr; (attr = attributes[i]); i++) {\n        mml.setAttribute(Prefix + attr[0].toLowerCase(), attr[1]);\n    }\n    if (semantic.childNodes.length) {\n        mml.setAttribute(Attribute.CHILDREN, makeIdList(semantic.childNodes));\n    }\n    if (semantic.contentNodes.length) {\n        mml.setAttribute(Attribute.CONTENT, makeIdList(semantic.contentNodes));\n    }\n    if (semantic.parent) {\n        mml.setAttribute(Attribute.PARENT, semantic.parent.id.toString());\n    }\n    const external = semantic.attributesXml();\n    if (external) {\n        mml.setAttribute(Attribute.ATTRIBUTES, external);\n    }\n    setPostfix(mml, semantic);\n}\nfunction setPostfix(mml, semantic) {\n    const postfix = [];\n    if (semantic.role === semantic_meaning_js_1.SemanticRole.MGLYPH) {\n        postfix.push('image');\n    }\n    if (semantic.attributes['href']) {\n        postfix.push('link');\n    }\n    if (postfix.length) {\n        mml.setAttribute(Attribute.POSTFIX, postfix.join(' '));\n    }\n}\nfunction removeAttributePrefix(mml) {\n    return mml.toString().replace(new RegExp(Prefix, 'g'), '');\n}\nfunction addPrefix(attr) {\n    return (Prefix + attr);\n}\nfunction addMrow() {\n    const mrow = DomUtil.createElement('mrow');\n    mrow.setAttribute(Attribute.ADDED, 'true');\n    return mrow;\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SemanticSkeleton = void 0;\nconst BaseUtil = require(\"../common/base_util.js\");\nconst engine_js_1 = require(\"../common/engine.js\");\nconst XpathUtil = require(\"../common/xpath_util.js\");\nconst enrich_attr_js_1 = require(\"../enrich_mathml/enrich_attr.js\");\nconst semantic_meaning_js_1 = require(\"./semantic_meaning.js\");\nconst Options = {\n    tree: false\n};\nclass SemanticSkeleton {\n    static fromTree(tree) {\n        return SemanticSkeleton.fromNode(tree.root);\n    }\n    static fromNode(node) {\n        return new SemanticSkeleton(SemanticSkeleton.fromNode_(node));\n    }\n    static fromString(skel) {\n        return new SemanticSkeleton(SemanticSkeleton.fromString_(skel));\n    }\n    static simpleCollapseStructure(strct) {\n        return typeof strct === 'number';\n    }\n    static contentCollapseStructure(strct) {\n        return (!!strct &&\n            !SemanticSkeleton.simpleCollapseStructure(strct) &&\n            strct[0] === 'c');\n    }\n    static interleaveIds(first, second) {\n        return BaseUtil.interleaveLists(SemanticSkeleton.collapsedLeafs(first), SemanticSkeleton.collapsedLeafs(second));\n    }\n    static collapsedLeafs(...args) {\n        const collapseStructure = (coll) => {\n            if (SemanticSkeleton.simpleCollapseStructure(coll)) {\n                return [coll];\n            }\n            coll = coll;\n            return SemanticSkeleton.contentCollapseStructure(coll[1])\n                ? coll.slice(2)\n                : coll.slice(1);\n        };\n        return args.reduce((x, y) => x.concat(collapseStructure(y)), []);\n    }\n    static fromStructure(mml, tree) {\n        return new SemanticSkeleton(SemanticSkeleton.tree_(mml, tree.root));\n    }\n    static combineContentChildren(type, _role, content, children) {\n        switch (type) {\n            case semantic_meaning_js_1.SemanticType.RELSEQ:\n            case semantic_meaning_js_1.SemanticType.INFIXOP:\n            case semantic_meaning_js_1.SemanticType.MULTIREL:\n                return BaseUtil.interleaveLists(children, content);\n            case semantic_meaning_js_1.SemanticType.PREFIXOP:\n                return content.concat(children);\n            case semantic_meaning_js_1.SemanticType.POSTFIXOP:\n                return children.concat(content);\n            case semantic_meaning_js_1.SemanticType.MATRIX:\n            case semantic_meaning_js_1.SemanticType.VECTOR:\n            case semantic_meaning_js_1.SemanticType.FENCED:\n                children.unshift(content[0]);\n                children.push(content[1]);\n                return children;\n            case semantic_meaning_js_1.SemanticType.CASES:\n                children.unshift(content[0]);\n                return children;\n            case semantic_meaning_js_1.SemanticType.APPL:\n                return [children[0], content[0], children[1]];\n            case semantic_meaning_js_1.SemanticType.ROOT:\n                return [children[0], children[1]];\n            case semantic_meaning_js_1.SemanticType.ROW:\n            case semantic_meaning_js_1.SemanticType.LINE:\n                if (content.length) {\n                    children.unshift(content[0]);\n                }\n                return children;\n            default:\n                return children;\n        }\n    }\n    static makeSexp_(struct) {\n        if (SemanticSkeleton.simpleCollapseStructure(struct)) {\n            return struct.toString();\n        }\n        if (SemanticSkeleton.contentCollapseStructure(struct)) {\n            return ('(' +\n                'c ' +\n                struct.slice(1).map(SemanticSkeleton.makeSexp_).join(' ') +\n                ')');\n        }\n        return ('(' + struct.map(SemanticSkeleton.makeSexp_).join(' ') + ')');\n    }\n    static fromString_(skeleton) {\n        let str = skeleton.replace(/\\(/g, '[');\n        str = str.replace(/\\)/g, ']');\n        str = str.replace(/ /g, ',');\n        str = str.replace(/c/g, '\"c\"');\n        return JSON.parse(str);\n    }\n    static fromNode_(node) {\n        if (!node) {\n            return [];\n        }\n        const content = node.contentNodes;\n        let contentStructure;\n        if (content.length) {\n            contentStructure = content.map(SemanticSkeleton.fromNode_);\n            contentStructure.unshift('c');\n        }\n        const children = node.childNodes;\n        if (!children.length) {\n            return content.length ? [node.id, contentStructure] : node.id;\n        }\n        const structure = children.map(SemanticSkeleton.fromNode_);\n        if (content.length) {\n            structure.unshift(contentStructure);\n        }\n        structure.unshift(node.id);\n        return structure;\n    }\n    static tree_(mml, node, level = 0, posinset = 1, setsize = 1) {\n        if (!node) {\n            return [];\n        }\n        const id = node.id;\n        const skeleton = [id];\n        XpathUtil.updateEvaluator(mml);\n        const mmlChild = XpathUtil.evalXPath(`.//self::*[@${enrich_attr_js_1.Attribute.ID}=${id}]`, mml)[0];\n        if (!node.childNodes.length) {\n            SemanticSkeleton.addAria(mmlChild, level, posinset, setsize);\n            return node.id;\n        }\n        const children = SemanticSkeleton.combineContentChildren(node.type, node.role, node.contentNodes.map(function (x) {\n            return x;\n        }), node.childNodes.map(function (x) {\n            return x;\n        }));\n        if (mmlChild) {\n            SemanticSkeleton.addOwns_(mmlChild, children);\n        }\n        for (let i = 0, l = children.length, child; (child = children[i]); i++) {\n            skeleton.push(SemanticSkeleton.tree_(mml, child, level + 1, i + 1, l));\n        }\n        SemanticSkeleton.addAria(mmlChild, level, posinset, setsize, !Options.tree ? 'treeitem' : level ? 'group' : 'tree');\n        return skeleton;\n    }\n    static addAria(node, level, posinset, setsize, role = !Options.tree ? 'treeitem' : level ? 'treeitem' : 'tree') {\n        if (!engine_js_1.Engine.getInstance().aria || !node) {\n            return;\n        }\n        node.setAttribute('aria-level', level.toString());\n        node.setAttribute('aria-posinset', posinset.toString());\n        node.setAttribute('aria-setsize', setsize.toString());\n        node.setAttribute('role', role);\n        if (node.hasAttribute(enrich_attr_js_1.Attribute.OWNS)) {\n            node.setAttribute('aria-owns', node.getAttribute(enrich_attr_js_1.Attribute.OWNS));\n        }\n    }\n    static addOwns_(node, children) {\n        const collapsed = node.getAttribute(enrich_attr_js_1.Attribute.COLLAPSED);\n        const leafs = collapsed\n            ? SemanticSkeleton.realLeafs_(SemanticSkeleton.fromString(collapsed).array)\n            : children.map((x) => x.id);\n        node.setAttribute(enrich_attr_js_1.Attribute.OWNS, leafs.join(' '));\n    }\n    static realLeafs_(sexp) {\n        if (SemanticSkeleton.simpleCollapseStructure(sexp)) {\n            return [sexp];\n        }\n        if (SemanticSkeleton.contentCollapseStructure(sexp)) {\n            return [];\n        }\n        sexp = sexp;\n        let result = [];\n        for (let i = 1; i < sexp.length; i++) {\n            result = result.concat(SemanticSkeleton.realLeafs_(sexp[i]));\n        }\n        return result;\n    }\n    constructor(skeleton) {\n        this.parents = null;\n        this.levelsMap = null;\n        skeleton = skeleton === 0 ? skeleton : skeleton || [];\n        this.array = skeleton;\n    }\n    populate() {\n        if (this.parents && this.levelsMap) {\n            return;\n        }\n        this.parents = {};\n        this.levelsMap = {};\n        this.populate_(this.array, this.array, []);\n    }\n    toString() {\n        return SemanticSkeleton.makeSexp_(this.array);\n    }\n    populate_(element, layer, parents) {\n        if (SemanticSkeleton.simpleCollapseStructure(element)) {\n            element = element;\n            this.levelsMap[element] = layer;\n            this.parents[element] =\n                element === parents[0] ? parents.slice(1) : parents;\n            return;\n        }\n        const newElement = SemanticSkeleton.contentCollapseStructure(element)\n            ? element.slice(1)\n            : element;\n        const newParents = [newElement[0]].concat(parents);\n        for (let i = 0, l = newElement.length; i < l; i++) {\n            const current = newElement[i];\n            this.populate_(current, element, newParents);\n        }\n    }\n    isRoot(id) {\n        const level = this.levelsMap[id];\n        return id === level[0];\n    }\n    directChildren(id) {\n        if (!this.isRoot(id)) {\n            return [];\n        }\n        const level = this.levelsMap[id];\n        return level.slice(1).map((child) => {\n            if (SemanticSkeleton.simpleCollapseStructure(child)) {\n                return child;\n            }\n            if (SemanticSkeleton.contentCollapseStructure(child)) {\n                return child[1];\n            }\n            return child[0];\n        });\n    }\n    subtreeNodes(id) {\n        if (!this.isRoot(id)) {\n            return [];\n        }\n        const subtreeNodes_ = (tree, nodes) => {\n            if (SemanticSkeleton.simpleCollapseStructure(tree)) {\n                nodes.push(tree);\n                return;\n            }\n            tree = tree;\n            if (SemanticSkeleton.contentCollapseStructure(tree)) {\n                tree = tree.slice(1);\n            }\n            tree.forEach((x) => subtreeNodes_(x, nodes));\n        };\n        const level = this.levelsMap[id];\n        const subtree = [];\n        subtreeNodes_(level.slice(1), subtree);\n        return subtree;\n    }\n}\nexports.SemanticSkeleton = SemanticSkeleton;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst debugger_js_1 = require(\"../common/debugger.js\");\nconst engine_js_1 = require(\"../common/engine.js\");\nconst semantic_attr_js_1 = require(\"./semantic_attr.js\");\nconst semantic_heuristic_factory_js_1 = require(\"./semantic_heuristic_factory.js\");\nconst semantic_heuristic_js_1 = require(\"./semantic_heuristic.js\");\nconst semantic_meaning_js_1 = require(\"./semantic_meaning.js\");\nconst SemanticPred = require(\"./semantic_pred.js\");\nconst semantic_processor_js_1 = require(\"./semantic_processor.js\");\nconst SemanticUtil = require(\"./semantic_util.js\");\nconst semantic_skeleton_js_1 = require(\"./semantic_skeleton.js\");\nconst semantic_util_js_1 = require(\"../semantic_tree/semantic_util.js\");\nconst DomUtil = require(\"../common/dom_util.js\");\nsemantic_heuristic_factory_js_1.SemanticHeuristics.add(new semantic_heuristic_js_1.SemanticTreeHeuristic('combine_juxtaposition', combineJuxtaposition));\nfunction combineJuxtaposition(root) {\n    for (let i = root.childNodes.length - 1, child; (child = root.childNodes[i]); i--) {\n        if (!SemanticPred.isImplicitOp(child) || child.nobreaking) {\n            continue;\n        }\n        root.childNodes.splice(i, 1, ...child.childNodes);\n        root.contentNodes.splice(i, 0, ...child.contentNodes);\n        child.childNodes.concat(child.contentNodes).forEach(function (x) {\n            x.parent = root;\n        });\n        root.addMathmlNodes(child.mathml);\n    }\n    return root;\n}\nsemantic_heuristic_factory_js_1.SemanticHeuristics.add(new semantic_heuristic_js_1.SemanticTreeHeuristic('propagateSimpleFunction', (node) => {\n    if ((node.type === semantic_meaning_js_1.SemanticType.INFIXOP ||\n        node.type === semantic_meaning_js_1.SemanticType.FRACTION) &&\n        node.childNodes.every(SemanticPred.isSimpleFunction)) {\n        node.role = semantic_meaning_js_1.SemanticRole.COMPFUNC;\n    }\n    return node;\n}, (_node) => engine_js_1.Engine.getInstance().domain === 'clearspeak'));\nsemantic_heuristic_factory_js_1.SemanticHeuristics.add(new semantic_heuristic_js_1.SemanticTreeHeuristic('simpleNamedFunction', (node) => {\n    const specialFunctions = ['f', 'g', 'h', 'F', 'G', 'H'];\n    if (node.role !== semantic_meaning_js_1.SemanticRole.UNIT &&\n        specialFunctions.indexOf(node.textContent) !== -1) {\n        node.role = semantic_meaning_js_1.SemanticRole.SIMPLEFUNC;\n    }\n    return node;\n}, (_node) => engine_js_1.Engine.getInstance().domain === 'clearspeak'));\nsemantic_heuristic_factory_js_1.SemanticHeuristics.add(new semantic_heuristic_js_1.SemanticTreeHeuristic('propagateComposedFunction', (node) => {\n    if (node.type === semantic_meaning_js_1.SemanticType.FENCED &&\n        node.childNodes[0].role === semantic_meaning_js_1.SemanticRole.COMPFUNC) {\n        node.role = semantic_meaning_js_1.SemanticRole.COMPFUNC;\n    }\n    return node;\n}, (_node) => engine_js_1.Engine.getInstance().domain === 'clearspeak'));\nsemantic_heuristic_factory_js_1.SemanticHeuristics.add(new semantic_heuristic_js_1.SemanticTreeHeuristic('multioperator', (node) => {\n    if (node.role !== semantic_meaning_js_1.SemanticRole.UNKNOWN || node.textContent.length <= 1) {\n        return;\n    }\n    semantic_processor_js_1.SemanticProcessor.compSemantics(node, 'role', semantic_meaning_js_1.SemanticRole);\n    semantic_processor_js_1.SemanticProcessor.compSemantics(node, 'type', semantic_meaning_js_1.SemanticType);\n}));\nsemantic_heuristic_factory_js_1.SemanticHeuristics.add(new semantic_heuristic_js_1.SemanticMultiHeuristic('convert_juxtaposition', (nodes) => {\n    let partition = SemanticUtil.partitionNodes(nodes, function (x) {\n        return (x.textContent === semantic_attr_js_1.NamedSymbol.invisibleTimes &&\n            x.type === semantic_meaning_js_1.SemanticType.OPERATOR);\n    });\n    partition = partition.rel.length\n        ? juxtapositionPrePost(partition)\n        : partition;\n    nodes = partition.comp[0];\n    for (let i = 1, c, r; (c = partition.comp[i]), (r = partition.rel[i - 1]); i++) {\n        nodes.push(r);\n        nodes = nodes.concat(c);\n    }\n    partition = SemanticUtil.partitionNodes(nodes, function (x) {\n        return (x.textContent === semantic_attr_js_1.NamedSymbol.invisibleTimes &&\n            (x.type === semantic_meaning_js_1.SemanticType.OPERATOR || x.type === semantic_meaning_js_1.SemanticType.INFIXOP));\n    });\n    if (!partition.rel.length) {\n        return nodes;\n    }\n    return recurseJuxtaposition(partition.comp.shift(), partition.rel, partition.comp);\n}));\nsemantic_heuristic_factory_js_1.SemanticHeuristics.add(new semantic_heuristic_js_1.SemanticTreeHeuristic('simple2prefix', (node) => {\n    if (node.textContent.length > 1 &&\n        !node.textContent[0].match(/[A-Z]/)) {\n        node.role = semantic_meaning_js_1.SemanticRole.PREFIXFUNC;\n    }\n    return node;\n}, (node) => engine_js_1.Engine.getInstance().modality === 'braille' &&\n    node.type === semantic_meaning_js_1.SemanticType.IDENTIFIER));\nsemantic_heuristic_factory_js_1.SemanticHeuristics.add(new semantic_heuristic_js_1.SemanticTreeHeuristic('detect_cycle', (node) => {\n    node.type = semantic_meaning_js_1.SemanticType.MATRIX;\n    node.role = semantic_meaning_js_1.SemanticRole.CYCLE;\n    const row = node.childNodes[0];\n    row.type = semantic_meaning_js_1.SemanticType.ROW;\n    row.role = semantic_meaning_js_1.SemanticRole.CYCLE;\n    row.textContent = '';\n    row.contentNodes = [];\n    return node;\n}, (node) => node.type === semantic_meaning_js_1.SemanticType.FENCED &&\n    node.childNodes[0].type === semantic_meaning_js_1.SemanticType.INFIXOP &&\n    node.childNodes[0].role === semantic_meaning_js_1.SemanticRole.IMPLICIT &&\n    node.childNodes[0].childNodes.every(function (x) {\n        return x.type === semantic_meaning_js_1.SemanticType.NUMBER;\n    }) &&\n    node.childNodes[0].contentNodes.every(function (x) {\n        return x.role === semantic_meaning_js_1.SemanticRole.SPACE;\n    })));\nfunction juxtapositionPrePost(partition) {\n    const rels = [];\n    const comps = [];\n    let next = partition.comp.shift();\n    let rel = null;\n    let collect = [];\n    while (partition.comp.length) {\n        collect = [];\n        if (next.length) {\n            if (rel) {\n                rels.push(rel);\n            }\n            comps.push(next);\n            rel = partition.rel.shift();\n            next = partition.comp.shift();\n            continue;\n        }\n        if (rel) {\n            collect.push(rel);\n        }\n        while (!next.length && partition.comp.length) {\n            next = partition.comp.shift();\n            collect.push(partition.rel.shift());\n        }\n        rel = convertPrePost(collect, next, comps);\n    }\n    if (!collect.length && !next.length) {\n        collect.push(rel);\n        convertPrePost(collect, next, comps);\n    }\n    else {\n        rels.push(rel);\n        comps.push(next);\n    }\n    return { rel: rels, comp: comps };\n}\nfunction convertPrePost(collect, next, comps) {\n    let rel = null;\n    if (!collect.length) {\n        return rel;\n    }\n    const prev = comps[comps.length - 1];\n    const prevExists = prev && prev.length;\n    const nextExists = next && next.length;\n    const processor = semantic_processor_js_1.SemanticProcessor.getInstance();\n    if (prevExists && nextExists) {\n        if (next[0].type === semantic_meaning_js_1.SemanticType.INFIXOP &&\n            next[0].role === semantic_meaning_js_1.SemanticRole.IMPLICIT) {\n            rel = collect.pop();\n            prev.push(processor['postfixNode_'](prev.pop(), collect));\n            return rel;\n        }\n        rel = collect.shift();\n        const result = processor['prefixNode_'](next.shift(), collect);\n        next.unshift(result);\n        return rel;\n    }\n    if (prevExists) {\n        prev.push(processor['postfixNode_'](prev.pop(), collect));\n        return rel;\n    }\n    if (nextExists) {\n        next.unshift(processor['prefixNode_'](next.shift(), collect));\n    }\n    return rel;\n}\nfunction recurseJuxtaposition(acc, ops, elements) {\n    if (!ops.length) {\n        return acc;\n    }\n    const left = acc.pop();\n    const op = ops.shift();\n    const first = elements.shift();\n    if (op.type === semantic_meaning_js_1.SemanticType.INFIXOP &&\n        (op.role === semantic_meaning_js_1.SemanticRole.IMPLICIT || op.role === semantic_meaning_js_1.SemanticRole.UNIT)) {\n        debugger_js_1.Debugger.getInstance().output('Juxta Heuristic Case 2');\n        const right = (left ? [left, op] : [op]).concat(first);\n        return recurseJuxtaposition(acc.concat(right), ops, elements);\n    }\n    if (!left) {\n        debugger_js_1.Debugger.getInstance().output('Juxta Heuristic Case 3');\n        return recurseJuxtaposition([op].concat(first), ops, elements);\n    }\n    const right = first.shift();\n    if (!right) {\n        debugger_js_1.Debugger.getInstance().output('Juxta Heuristic Case 9');\n        const newOp = semantic_heuristic_factory_js_1.SemanticHeuristics.factory.makeBranchNode(semantic_meaning_js_1.SemanticType.INFIXOP, [left, ops.shift()], [op], op.textContent);\n        newOp.role = semantic_meaning_js_1.SemanticRole.IMPLICIT;\n        semantic_heuristic_factory_js_1.SemanticHeuristics.run('combine_juxtaposition', newOp);\n        ops.unshift(newOp);\n        return recurseJuxtaposition(acc, ops, elements);\n    }\n    if (SemanticPred.isOperator(left) || SemanticPred.isOperator(right)) {\n        debugger_js_1.Debugger.getInstance().output('Juxta Heuristic Case 4');\n        return recurseJuxtaposition(acc.concat([left, op, right]).concat(first), ops, elements);\n    }\n    let result = null;\n    if (SemanticPred.isImplicitOp(left) && SemanticPred.isImplicitOp(right)) {\n        debugger_js_1.Debugger.getInstance().output('Juxta Heuristic Case 5');\n        left.contentNodes.push(op);\n        left.contentNodes = left.contentNodes.concat(right.contentNodes);\n        left.childNodes.push(right);\n        left.childNodes = left.childNodes.concat(right.childNodes);\n        right.childNodes.forEach((x) => (x.parent = left));\n        op.parent = left;\n        left.addMathmlNodes(op.mathml);\n        left.addMathmlNodes(right.mathml);\n        result = left;\n    }\n    else if (SemanticPred.isImplicitOp(left)) {\n        debugger_js_1.Debugger.getInstance().output('Juxta Heuristic Case 6');\n        left.contentNodes.push(op);\n        left.childNodes.push(right);\n        right.parent = left;\n        op.parent = left;\n        left.addMathmlNodes(op.mathml);\n        left.addMathmlNodes(right.mathml);\n        result = left;\n    }\n    else if (SemanticPred.isImplicitOp(right)) {\n        debugger_js_1.Debugger.getInstance().output('Juxta Heuristic Case 7');\n        right.contentNodes.unshift(op);\n        right.childNodes.unshift(left);\n        left.parent = right;\n        op.parent = right;\n        right.addMathmlNodes(op.mathml);\n        right.addMathmlNodes(left.mathml);\n        result = right;\n    }\n    else {\n        debugger_js_1.Debugger.getInstance().output('Juxta Heuristic Case 8');\n        result = semantic_heuristic_factory_js_1.SemanticHeuristics.factory.makeBranchNode(semantic_meaning_js_1.SemanticType.INFIXOP, [left, right], [op], op.textContent);\n        result.role = semantic_meaning_js_1.SemanticRole.IMPLICIT;\n    }\n    acc.push(result);\n    return recurseJuxtaposition(acc.concat(first), ops, elements);\n}\nsemantic_heuristic_factory_js_1.SemanticHeuristics.add(new semantic_heuristic_js_1.SemanticMultiHeuristic('intvar_from_implicit', implicitUnpack, (nodes) => nodes[0] && SemanticPred.isImplicit(nodes[0])));\nfunction implicitUnpack(nodes) {\n    const children = nodes[0].childNodes;\n    nodes.splice(0, 1, ...children);\n}\nsemantic_heuristic_factory_js_1.SemanticHeuristics.add(new semantic_heuristic_js_1.SemanticTreeHeuristic('intvar_from_fraction', integralFractionArg, (node) => {\n    if (node.type !== semantic_meaning_js_1.SemanticType.INTEGRAL)\n        return false;\n    const [, integrand, intvar] = node.childNodes;\n    return (intvar.type === semantic_meaning_js_1.SemanticType.EMPTY &&\n        integrand.type === semantic_meaning_js_1.SemanticType.FRACTION);\n}));\nfunction integralFractionArg(node) {\n    const integrand = node.childNodes[1];\n    const enumerator = integrand.childNodes[0];\n    if (SemanticPred.isIntegralDxBoundarySingle(enumerator)) {\n        enumerator.role = semantic_meaning_js_1.SemanticRole.INTEGRAL;\n        return;\n    }\n    if (!SemanticPred.isImplicit(enumerator))\n        return;\n    const length = enumerator.childNodes.length;\n    const first = enumerator.childNodes[length - 2];\n    const second = enumerator.childNodes[length - 1];\n    if (SemanticPred.isIntegralDxBoundarySingle(second)) {\n        second.role = semantic_meaning_js_1.SemanticRole.INTEGRAL;\n        return;\n    }\n    if (SemanticPred.isIntegralDxBoundary(first, second)) {\n        const prefix = semantic_processor_js_1.SemanticProcessor.getInstance()['prefixNode_'](second, [\n            first\n        ]);\n        prefix.role = semantic_meaning_js_1.SemanticRole.INTEGRAL;\n        if (length === 2) {\n            integrand.childNodes[0] = prefix;\n        }\n        else {\n            enumerator.childNodes.pop();\n            enumerator.contentNodes.pop();\n            enumerator.childNodes[length - 2] = prefix;\n            prefix.parent = enumerator;\n        }\n    }\n}\nsemantic_heuristic_factory_js_1.SemanticHeuristics.add(new semantic_heuristic_js_1.SemanticTreeHeuristic('rewrite_subcases', rewriteSubcasesTable, (table) => {\n    let left = true;\n    let right = true;\n    const topLeft = table.childNodes[0].childNodes[0];\n    if (!eligibleNode(topLeft.mathmlTree)) {\n        left = false;\n    }\n    else {\n        for (let i = 1, row; (row = table.childNodes[i]); i++) {\n            if (row.childNodes[0].childNodes.length) {\n                left = false;\n                break;\n            }\n        }\n    }\n    if (left) {\n        table.addAnnotation('Emph', 'left');\n    }\n    const topRight = table.childNodes[0].childNodes[table.childNodes[0].childNodes.length - 1];\n    if (!eligibleNode(topRight.mathmlTree)) {\n        right = false;\n    }\n    else {\n        const firstRow = table.childNodes[0].childNodes.length;\n        for (let i = 1, row; (row = table.childNodes[i]); i++) {\n            if (row.childNodes.length >= firstRow) {\n                right = false;\n                break;\n            }\n        }\n    }\n    if (right) {\n        table.addAnnotation('Emph', 'right');\n    }\n    return left || right;\n}));\nfunction eligibleNode(node) {\n    return (node.childNodes[0] &&\n        node.childNodes[0].childNodes[0] &&\n        DomUtil.tagName(node.childNodes[0]) === semantic_util_js_1.MMLTAGS.MPADDED &&\n        DomUtil.tagName(node.childNodes[0].childNodes[0]) ===\n            semantic_util_js_1.MMLTAGS.MPADDED &&\n        DomUtil.tagName(node.childNodes[0].childNodes[node.childNodes[0].childNodes.length - 1]) === semantic_util_js_1.MMLTAGS.MPHANTOM);\n}\nconst rewritable = [\n    semantic_meaning_js_1.SemanticType.PUNCTUATED,\n    semantic_meaning_js_1.SemanticType.RELSEQ,\n    semantic_meaning_js_1.SemanticType.MULTIREL,\n    semantic_meaning_js_1.SemanticType.INFIXOP,\n    semantic_meaning_js_1.SemanticType.PREFIXOP,\n    semantic_meaning_js_1.SemanticType.POSTFIXOP\n];\nfunction rewriteSubcasesTable(table) {\n    table.addAnnotation('Emph', 'top');\n    let row = [];\n    if (table.hasAnnotation('Emph', 'left')) {\n        const topLeft = table.childNodes[0].childNodes[0].childNodes[0];\n        const cells = rewriteCell(topLeft, true);\n        cells.forEach((x) => x.addAnnotation('Emph', 'left'));\n        row = row.concat(cells);\n        for (let i = 0, line; (line = table.childNodes[i]); i++) {\n            line.childNodes.shift();\n        }\n    }\n    row.push(table);\n    if (table.hasAnnotation('Emph', 'right')) {\n        const topRight = table.childNodes[0].childNodes[table.childNodes[0].childNodes.length - 1]\n            .childNodes[0];\n        const cells = rewriteCell(topRight);\n        cells.forEach((x) => x.addAnnotation('Emph', 'left'));\n        row = row.concat(cells);\n        table.childNodes[0].childNodes.pop();\n    }\n    semantic_processor_js_1.SemanticProcessor.tableToMultiline(table);\n    const newNode = semantic_processor_js_1.SemanticProcessor.getInstance().row(row);\n    const annotation = table.annotation['Emph'];\n    table.annotation['Emph'] = ['table'];\n    annotation.forEach((x) => newNode.addAnnotation('Emph', x));\n    return newNode;\n}\nfunction rewriteCell(cell, left) {\n    if (!cell.childNodes.length) {\n        rewriteFence(cell);\n        return [cell];\n    }\n    let fence = null;\n    if (cell.type === semantic_meaning_js_1.SemanticType.PUNCTUATED &&\n        (left\n            ? cell.role === semantic_meaning_js_1.SemanticRole.ENDPUNCT\n            : cell.role === semantic_meaning_js_1.SemanticRole.STARTPUNCT)) {\n        const children = cell.childNodes;\n        if (rewriteFence(children[left ? children.length - 1 : 0])) {\n            cell = children[left ? 0 : children.length - 1];\n            fence = children[left ? children.length - 1 : 0];\n        }\n    }\n    if (rewritable.indexOf(cell.type) !== -1) {\n        const children = cell.childNodes;\n        rewriteFence(children[left ? children.length - 1 : 0]);\n        const newNodes = semantic_skeleton_js_1.SemanticSkeleton.combineContentChildren(cell.type, cell.role, cell.contentNodes, cell.childNodes);\n        if (fence) {\n            if (left) {\n                newNodes.push(fence);\n            }\n            else {\n                newNodes.unshift(fence);\n            }\n        }\n        return newNodes;\n    }\n    return fence ? (left ? [cell, fence] : [fence, cell]) : [cell];\n}\nconst PUNCT_TO_FENCE_ = {\n    [semantic_meaning_js_1.SemanticRole.METRIC]: semantic_meaning_js_1.SemanticRole.METRIC,\n    [semantic_meaning_js_1.SemanticRole.VBAR]: semantic_meaning_js_1.SemanticRole.NEUTRAL,\n    [semantic_meaning_js_1.SemanticRole.OPENFENCE]: semantic_meaning_js_1.SemanticRole.OPEN,\n    [semantic_meaning_js_1.SemanticRole.CLOSEFENCE]: semantic_meaning_js_1.SemanticRole.CLOSE\n};\nfunction rewriteFence(fence) {\n    if (fence.type !== semantic_meaning_js_1.SemanticType.PUNCTUATION) {\n        return false;\n    }\n    const role = PUNCT_TO_FENCE_[fence.role];\n    if (!role) {\n        return false;\n    }\n    fence.role = role;\n    fence.type = semantic_meaning_js_1.SemanticType.FENCE;\n    fence.addAnnotation('Emph', 'fence');\n    return true;\n}\nsemantic_heuristic_factory_js_1.SemanticHeuristics.add(new semantic_heuristic_js_1.SemanticMultiHeuristic('ellipses', (nodes) => {\n    const newNodes = [];\n    let current = nodes.shift();\n    while (current) {\n        [current, nodes] = combineNodes(current, nodes, semantic_meaning_js_1.SemanticRole.FULLSTOP, semantic_meaning_js_1.SemanticRole.ELLIPSIS);\n        [current, nodes] = combineNodes(current, nodes, semantic_meaning_js_1.SemanticRole.DASH);\n        newNodes.push(current);\n        current = nodes.shift();\n    }\n    return newNodes;\n}, (nodes) => nodes.length > 1));\nfunction combineNodes(current, nodes, src, target = src) {\n    const collect = [];\n    while (current && current.role === src) {\n        collect.push(current);\n        current = nodes.shift();\n    }\n    if (!collect.length) {\n        return [current, nodes];\n    }\n    if (current) {\n        nodes.unshift(current);\n    }\n    return [\n        collect.length === 1 ? collect[0] : combinedNodes(collect, target),\n        nodes\n    ];\n}\nfunction combinedNodes(nodes, role) {\n    const node = semantic_heuristic_factory_js_1.SemanticHeuristics.factory.makeBranchNode(semantic_meaning_js_1.SemanticType.PUNCTUATION, nodes, []);\n    node.role = role;\n    return node;\n}\nsemantic_heuristic_factory_js_1.SemanticHeuristics.add(new semantic_heuristic_js_1.SemanticMultiHeuristic('op_with_limits', (nodes) => {\n    const center = nodes[0];\n    center.type = semantic_meaning_js_1.SemanticType.LARGEOP;\n    center.role = semantic_meaning_js_1.SemanticRole.SUM;\n    return nodes;\n}, (nodes) => {\n    return (nodes[0].type === semantic_meaning_js_1.SemanticType.OPERATOR &&\n        nodes\n            .slice(1)\n            .some((node) => node.type === semantic_meaning_js_1.SemanticType.RELSEQ ||\n            node.type === semantic_meaning_js_1.SemanticType.MULTIREL ||\n            (node.type === semantic_meaning_js_1.SemanticType.INFIXOP &&\n                node.role === semantic_meaning_js_1.SemanticRole.ELEMENT) ||\n            (node.type === semantic_meaning_js_1.SemanticType.PUNCTUATED &&\n                node.role === semantic_meaning_js_1.SemanticRole.SEQUENCE)));\n}));\nsemantic_heuristic_factory_js_1.SemanticHeuristics.add(new semantic_heuristic_js_1.SemanticMultiHeuristic('bracketed_interval', (nodes) => {\n    const leftFence = nodes[0];\n    const rightFence = nodes[1];\n    const content = nodes.slice(2);\n    const childNode = semantic_processor_js_1.SemanticProcessor.getInstance().row(content);\n    const fenced = semantic_heuristic_factory_js_1.SemanticHeuristics.factory.makeBranchNode(semantic_meaning_js_1.SemanticType.FENCED, [childNode], [leftFence, rightFence]);\n    fenced.role = semantic_meaning_js_1.SemanticRole.LEFTRIGHT;\n    return fenced;\n}, (nodes) => {\n    const leftFence = nodes[0];\n    const rightFence = nodes[1];\n    const content = nodes.slice(2);\n    if (!(leftFence &&\n        (leftFence.textContent === ']' || leftFence.textContent === '[') &&\n        rightFence &&\n        (rightFence.textContent === ']' || rightFence.textContent === '['))) {\n        return false;\n    }\n    const partition = SemanticUtil.partitionNodes(content, SemanticPred.isPunctuation);\n    return !!(partition.rel.length === 1 &&\n        partition.comp[0].length &&\n        partition.comp[1].length);\n}));\nsemantic_heuristic_factory_js_1.SemanticHeuristics.add(new semantic_heuristic_js_1.SemanticMmlHeuristic('function_from_identifiers', (node) => {\n    const expr = DomUtil.toArray(node.childNodes)\n        .map((x) => x.textContent.trim())\n        .join('');\n    const meaning = semantic_attr_js_1.SemanticMap.Meaning.get(expr);\n    if (meaning.type === semantic_meaning_js_1.SemanticType.UNKNOWN) {\n        return node;\n    }\n    const snode = semantic_heuristic_factory_js_1.SemanticHeuristics.factory.makeLeafNode(expr, semantic_processor_js_1.SemanticProcessor.getInstance().font(node.getAttribute('mathvariant')));\n    snode.mathmlTree = node;\n    return snode;\n}, (node) => {\n    const children = DomUtil.toArray(node.childNodes);\n    if (children.length < 2) {\n        return false;\n    }\n    return children.every((child) => DomUtil.tagName(child) === semantic_util_js_1.MMLTAGS.MI &&\n        semantic_attr_js_1.SemanticMap.Meaning.get(child.textContent.trim()).role ===\n            semantic_meaning_js_1.SemanticRole.LATINLETTER);\n}));\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SemanticTree = void 0;\nconst DomUtil = require(\"../common/dom_util.js\");\nconst semantic_annotations_js_1 = require(\"./semantic_annotations.js\");\nconst semantic_annotator_js_1 = require(\"./semantic_annotator.js\");\nconst semantic_meaning_js_1 = require(\"./semantic_meaning.js\");\nconst semantic_mathml_js_1 = require(\"./semantic_mathml.js\");\nconst semantic_node_js_1 = require(\"./semantic_node.js\");\nconst SemanticPred = require(\"./semantic_pred.js\");\nrequire(\"./semantic_heuristics.js\");\nclass SemanticTree {\n    static empty() {\n        const empty = DomUtil.parseInput('<math/>');\n        const stree = new SemanticTree(empty);\n        stree.mathml = empty;\n        return stree;\n    }\n    static fromNode(semantic, opt_mathml) {\n        const stree = SemanticTree.empty();\n        stree.root = semantic;\n        if (opt_mathml) {\n            stree.mathml = opt_mathml;\n        }\n        return stree;\n    }\n    static fromRoot(semantic, opt_mathml) {\n        let root = semantic;\n        while (root.parent) {\n            root = root.parent;\n        }\n        const stree = SemanticTree.fromNode(root);\n        if (opt_mathml) {\n            stree.mathml = opt_mathml;\n        }\n        return stree;\n    }\n    static fromXml(xml) {\n        const stree = SemanticTree.empty();\n        if (xml.childNodes[0]) {\n            stree.root = semantic_node_js_1.SemanticNode.fromXml(xml.childNodes[0]);\n        }\n        return stree;\n    }\n    constructor(mathml) {\n        this.mathml = mathml;\n        this.parser = new semantic_mathml_js_1.SemanticMathml();\n        this.root = this.parser.parse(mathml);\n        this.collator = this.parser.getFactory().leafMap.collateMeaning();\n        const newDefault = this.collator.newDefault();\n        if (newDefault) {\n            this.parser = new semantic_mathml_js_1.SemanticMathml();\n            this.parser.getFactory().defaultMap = newDefault;\n            this.root = this.parser.parse(mathml);\n        }\n        unitVisitor.visit(this.root, {});\n        (0, semantic_annotations_js_1.annotate)(this.root);\n    }\n    xml(opt_brief) {\n        const xml = DomUtil.parseInput('<stree></stree>');\n        const xmlRoot = this.root.xml(xml.ownerDocument, opt_brief);\n        xml.appendChild(xmlRoot);\n        return xml;\n    }\n    toString(opt_brief) {\n        return DomUtil.serializeXml(this.xml(opt_brief));\n    }\n    formatXml(opt_brief) {\n        const xml = this.toString(opt_brief);\n        return DomUtil.formatXml(xml);\n    }\n    displayTree() {\n        this.root.displayTree();\n    }\n    replaceNode(oldNode, newNode) {\n        const parent = oldNode.parent;\n        if (!parent) {\n            this.root = newNode;\n            return;\n        }\n        parent.replaceChild(oldNode, newNode);\n    }\n    toJson() {\n        const json = {};\n        json['stree'] = this.root.toJson();\n        return json;\n    }\n}\nexports.SemanticTree = SemanticTree;\nconst unitVisitor = new semantic_annotator_js_1.SemanticVisitor('general', 'unit', (node, _info) => {\n    if (SemanticPred.isUnitProduct(node)) {\n        node.role = semantic_meaning_js_1.SemanticRole.UNIT;\n    }\n    return false;\n});\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.xmlTree = xmlTree;\nexports.getTree = getTree;\nexports.getTreeFromString = getTreeFromString;\nconst DomUtil = require(\"../common/dom_util.js\");\nconst semantic_tree_js_1 = require(\"./semantic_tree.js\");\nfunction xmlTree(mml) {\n    return getTree(mml).xml();\n}\nfunction getTree(mml) {\n    return new semantic_tree_js_1.SemanticTree(mml);\n}\nfunction getTreeFromString(expr) {\n    const mml = DomUtil.parseInput(expr);\n    return getTree(mml);\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.factory = void 0;\nexports.getCase = getCase;\nfunction getCase(node) {\n    for (let i = 0, enrich; (enrich = exports.factory[i]); i++) {\n        if (enrich.test(node)) {\n            return enrich.constr(node);\n        }\n    }\n    return null;\n}\nexports.factory = [];\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.enrich = enrich;\nexports.walkTree = walkTree;\nexports.introduceNewLayer = introduceNewLayer;\nexports.ascendNewNode = ascendNewNode;\nexports.addCollapsedAttribute = addCollapsedAttribute;\nexports.cloneContentNode = cloneContentNode;\nexports.rewriteMfenced = rewriteMfenced;\nexports.setOperatorAttribute = setOperatorAttribute;\nexports.getInnerNode = getInnerNode;\nexports.collapsePunctuated = collapsePunctuated;\nconst debugger_js_1 = require(\"../common/debugger.js\");\nconst DomUtil = require(\"../common/dom_util.js\");\nconst engine_js_1 = require(\"../common/engine.js\");\nconst semantic_attr_js_1 = require(\"../semantic_tree/semantic_attr.js\");\nconst semantic_meaning_js_1 = require(\"../semantic_tree/semantic_meaning.js\");\nconst semantic_heuristic_factory_js_1 = require(\"../semantic_tree/semantic_heuristic_factory.js\");\nconst semantic_skeleton_js_1 = require(\"../semantic_tree/semantic_skeleton.js\");\nconst SemanticUtil = require(\"../semantic_tree/semantic_util.js\");\nconst semantic_util_js_1 = require(\"../semantic_tree/semantic_util.js\");\nconst EnrichAttr = require(\"./enrich_attr.js\");\nconst enrich_case_js_1 = require(\"./enrich_case.js\");\nconst SETTINGS = {\n    collapsed: true,\n    implicit: true,\n    wiki: true\n};\nconst IDS = new Map();\nfunction enrich(mml, semantic) {\n    IDS.clear();\n    const oldMml = DomUtil.cloneNode(mml);\n    walkTree(semantic.root);\n    if (engine_js_1.Engine.getInstance().structure) {\n        mml.setAttribute(EnrichAttr.Attribute.STRUCTURE, semantic_skeleton_js_1.SemanticSkeleton.fromStructure(mml, semantic).toString());\n    }\n    debugger_js_1.Debugger.getInstance().generateOutput(() => [\n        formattedOutput(oldMml, 'Original MathML', SETTINGS.wiki),\n        formattedOutput(semantic, 'Semantic Tree', SETTINGS.wiki),\n        formattedOutput(mml, 'Semantically enriched MathML', SETTINGS.wiki)\n    ]);\n    return mml;\n}\nfunction walkTree(semantic) {\n    debugger_js_1.Debugger.getInstance().output('WALKING START: ' + semantic.toString());\n    const specialCase = (0, enrich_case_js_1.getCase)(semantic);\n    let newNode;\n    if (specialCase) {\n        newNode = specialCase.getMathml();\n        debugger_js_1.Debugger.getInstance().output('WALKING END: ' + semantic.toString());\n        return ascendNewNode(newNode);\n    }\n    if (semantic.mathml.length === 1) {\n        debugger_js_1.Debugger.getInstance().output('Walktree Case 0');\n        if (!semantic.childNodes.length) {\n            debugger_js_1.Debugger.getInstance().output('Walktree Case 0.1');\n            newNode = semantic.mathml[0];\n            EnrichAttr.setAttributes(newNode, semantic);\n            debugger_js_1.Debugger.getInstance().output('WALKING END: ' + semantic.toString());\n            return ascendNewNode(newNode);\n        }\n        const fchild = semantic.childNodes[0];\n        if (semantic.childNodes.length === 1 &&\n            fchild.type === semantic_meaning_js_1.SemanticType.EMPTY) {\n            debugger_js_1.Debugger.getInstance().output('Walktree Case 0.2');\n            newNode = semantic.mathml[0];\n            EnrichAttr.setAttributes(newNode, semantic);\n            newNode.appendChild(walkTree(fchild));\n            debugger_js_1.Debugger.getInstance().output('WALKING END: ' + semantic.toString());\n            return ascendNewNode(newNode);\n        }\n        semantic.childNodes.forEach((child) => {\n            if (!child.mathml.length) {\n                child.mathml = [createInvisibleOperator(child)];\n            }\n        });\n    }\n    const newContent = semantic.contentNodes.map(cloneContentNode);\n    setOperatorAttribute(semantic, newContent);\n    const newChildren = semantic.childNodes.map(walkTree);\n    const childrenList = semantic_skeleton_js_1.SemanticSkeleton.combineContentChildren(semantic.type, semantic.role, newContent, newChildren);\n    newNode = semantic.mathmlTree;\n    if (newNode === null) {\n        debugger_js_1.Debugger.getInstance().output('Walktree Case 1');\n        newNode = introduceNewLayer(childrenList, semantic);\n    }\n    else {\n        const attached = attachedElement(childrenList);\n        debugger_js_1.Debugger.getInstance().output('Walktree Case 2');\n        if (attached) {\n            debugger_js_1.Debugger.getInstance().output('Walktree Case 2.1');\n            newNode = parentNode(attached);\n        }\n        else {\n            debugger_js_1.Debugger.getInstance().output('Walktree Case 2.2');\n            newNode = getInnerNode(newNode);\n        }\n    }\n    newNode = rewriteMfenced(newNode);\n    mergeChildren(newNode, childrenList, semantic);\n    if (!IDS.has(semantic.id)) {\n        IDS.set(semantic.id, true);\n        EnrichAttr.setAttributes(newNode, semantic);\n    }\n    debugger_js_1.Debugger.getInstance().output('WALKING END: ' + semantic.toString());\n    return ascendNewNode(newNode);\n}\nfunction introduceNewLayer(children, semantic) {\n    const lca = mathmlLca(children);\n    let newNode = lca.node;\n    const info = lca.type;\n    if (info !== lcaType.VALID ||\n        !SemanticUtil.hasEmptyTag(newNode) ||\n        (!newNode.parentNode && semantic.parent)) {\n        debugger_js_1.Debugger.getInstance().output('Walktree Case 1.1');\n        newNode = EnrichAttr.addMrow();\n        if (info === lcaType.PRUNED) {\n            debugger_js_1.Debugger.getInstance().output('Walktree Case 1.1.0');\n            newNode = introduceLayerAboveLca(newNode, lca.node, children);\n        }\n        else if (children[0]) {\n            debugger_js_1.Debugger.getInstance().output('Walktree Case 1.1.1');\n            const node = attachedElement(children);\n            if (node) {\n                const oldChildren = childrenSubset(parentNode(node), children);\n                DomUtil.replaceNode(node, newNode);\n                oldChildren.forEach(function (x) {\n                    newNode.appendChild(x);\n                });\n            }\n            else {\n                moveSemanticAttributes(newNode, children[0]);\n                newNode = children[0];\n            }\n        }\n    }\n    if (!semantic.mathmlTree) {\n        semantic.mathmlTree = newNode;\n    }\n    return newNode;\n}\nfunction introduceLayerAboveLca(mrow, lca, children) {\n    let innerNode = descendNode(lca);\n    if (SemanticUtil.hasMathTag(innerNode)) {\n        debugger_js_1.Debugger.getInstance().output('Walktree Case 1.1.0.0');\n        moveSemanticAttributes(innerNode, mrow);\n        DomUtil.toArray(innerNode.childNodes).forEach(function (x) {\n            mrow.appendChild(x);\n        });\n        const auxNode = mrow;\n        mrow = innerNode;\n        innerNode = auxNode;\n    }\n    const index = children.indexOf(lca);\n    children[index] = innerNode;\n    DomUtil.replaceNode(innerNode, mrow);\n    mrow.appendChild(innerNode);\n    children.forEach(function (x) {\n        mrow.appendChild(x);\n    });\n    return mrow;\n}\nfunction moveSemanticAttributes(oldNode, newNode) {\n    for (const attr of EnrichAttr.EnrichAttributes) {\n        if (oldNode.hasAttribute(attr)) {\n            newNode.setAttribute(attr, oldNode.getAttribute(attr));\n            oldNode.removeAttribute(attr);\n        }\n    }\n}\nfunction childrenSubset(node, newChildren) {\n    const oldChildren = DomUtil.toArray(node.childNodes);\n    let leftIndex = +Infinity;\n    let rightIndex = -Infinity;\n    newChildren.forEach(function (child) {\n        const index = oldChildren.indexOf(child);\n        if (index !== -1) {\n            leftIndex = Math.min(leftIndex, index);\n            rightIndex = Math.max(rightIndex, index);\n        }\n    });\n    return oldChildren.slice(leftIndex, rightIndex + 1);\n}\nfunction collateChildNodes(node, children, semantic) {\n    const oldChildren = [];\n    let newChildren = DomUtil.toArray(node.childNodes);\n    let notFirst = false;\n    while (newChildren.length) {\n        const child = newChildren.shift();\n        if (child.hasAttribute(EnrichAttr.Attribute.TYPE)) {\n            oldChildren.push(child);\n            continue;\n        }\n        const collect = collectChildNodes(child, children);\n        if (collect.length === 0) {\n            continue;\n        }\n        if (collect.length === 1) {\n            oldChildren.push(child);\n            continue;\n        }\n        if (notFirst) {\n            child.setAttribute('AuxiliaryImplicit', true);\n        }\n        else {\n            notFirst = true;\n        }\n        newChildren = collect.concat(newChildren);\n    }\n    const rear = [];\n    const semChildren = semantic.childNodes.map(function (x) {\n        return x.mathmlTree;\n    });\n    while (semChildren.length) {\n        const schild = semChildren.pop();\n        if (!schild) {\n            continue;\n        }\n        if (oldChildren.indexOf(schild) !== -1) {\n            break;\n        }\n        if (children.indexOf(schild) !== -1) {\n            rear.unshift(schild);\n        }\n    }\n    return oldChildren.concat(rear);\n}\nfunction collectChildNodes(node, children) {\n    const collect = [];\n    let newChildren = DomUtil.toArray(node.childNodes);\n    while (newChildren.length) {\n        const child = newChildren.shift();\n        if (child.nodeType !== DomUtil.NodeType.ELEMENT_NODE) {\n            continue;\n        }\n        if (child.hasAttribute(EnrichAttr.Attribute.TYPE) ||\n            children.indexOf(child) !== -1) {\n            collect.push(child);\n            continue;\n        }\n        newChildren = DomUtil.toArray(child.childNodes).concat(newChildren);\n    }\n    return collect;\n}\nfunction mergeChildren(node, newChildren, semantic) {\n    if (!newChildren.length)\n        return;\n    if (newChildren.length === 1 && node === newChildren[0])\n        return;\n    const oldChildren = semantic.role === semantic_meaning_js_1.SemanticRole.IMPLICIT &&\n        semantic_heuristic_factory_js_1.SemanticHeuristics.flags.combine_juxtaposition\n        ? collateChildNodes(node, newChildren, semantic)\n        : DomUtil.toArray(node.childNodes);\n    if (!oldChildren.length) {\n        newChildren.forEach(function (x) {\n            node.appendChild(x);\n        });\n        return;\n    }\n    let oldCounter = 0;\n    while (newChildren.length) {\n        const newChild = newChildren[0];\n        if (oldChildren[oldCounter] === newChild ||\n            functionApplication(oldChildren[oldCounter], newChild)) {\n            newChildren.shift();\n            oldCounter++;\n            continue;\n        }\n        if (oldChildren[oldCounter] &&\n            newChildren.indexOf(oldChildren[oldCounter]) === -1) {\n            oldCounter++;\n            continue;\n        }\n        if (isDescendant(newChild, node)) {\n            newChildren.shift();\n            continue;\n        }\n        const oldChild = oldChildren[oldCounter];\n        if (!oldChild) {\n            if (newChild.parentNode) {\n                node = parentNode(newChild);\n                newChildren.shift();\n                continue;\n            }\n            const nextChild = newChildren[1];\n            if (nextChild && nextChild.parentNode) {\n                node = parentNode(nextChild);\n                node.insertBefore(newChild, nextChild);\n                newChildren.shift();\n                newChildren.shift();\n                continue;\n            }\n            node.insertBefore(newChild, null);\n            newChildren.shift();\n            continue;\n        }\n        insertNewChild(node, oldChild, newChild);\n        newChildren.shift();\n    }\n}\nfunction insertNewChild(node, oldChild, newChild) {\n    let parent = oldChild;\n    let next = parentNode(parent);\n    while (next &&\n        next.firstChild === parent &&\n        !parent.hasAttribute('AuxiliaryImplicit') &&\n        next !== node) {\n        parent = next;\n        next = parentNode(parent);\n    }\n    if (next) {\n        next.insertBefore(newChild, parent);\n        parent.removeAttribute('AuxiliaryImplicit');\n    }\n}\nfunction isDescendant(child, node) {\n    if (!child) {\n        return false;\n    }\n    do {\n        child = parentNode(child);\n        if (child === node) {\n            return true;\n        }\n    } while (child);\n    return false;\n}\nfunction functionApplication(oldNode, newNode) {\n    const appl = semantic_attr_js_1.NamedSymbol.functionApplication;\n    if (oldNode &&\n        newNode &&\n        oldNode.textContent &&\n        newNode.textContent &&\n        oldNode.textContent === appl &&\n        newNode.textContent === appl &&\n        newNode.getAttribute(EnrichAttr.Attribute.ADDED) === 'true') {\n        for (let i = 0, attr; (attr = oldNode.attributes[i]); i++) {\n            if (!newNode.hasAttribute(attr.nodeName)) {\n                newNode.setAttribute(attr.nodeName, attr.nodeValue);\n            }\n        }\n        DomUtil.replaceNode(oldNode, newNode);\n        return true;\n    }\n    return false;\n}\nvar lcaType;\n(function (lcaType) {\n    lcaType[\"VALID\"] = \"valid\";\n    lcaType[\"INVALID\"] = \"invalid\";\n    lcaType[\"PRUNED\"] = \"pruned\";\n})(lcaType || (lcaType = {}));\nfunction mathmlLca(children) {\n    const leftMost = attachedElement(children);\n    if (!leftMost) {\n        return { type: lcaType.INVALID, node: null };\n    }\n    const rightMost = attachedElement(children.slice().reverse());\n    if (leftMost === rightMost) {\n        return { type: lcaType.VALID, node: leftMost };\n    }\n    const leftPath = pathToRoot(leftMost);\n    const newLeftPath = prunePath(leftPath, children);\n    const rightPath = pathToRoot(rightMost, function (x) {\n        return newLeftPath.indexOf(x) !== -1;\n    });\n    const lca = rightPath[0];\n    const lIndex = newLeftPath.indexOf(lca);\n    if (lIndex === -1) {\n        return { type: lcaType.INVALID, node: null };\n    }\n    return {\n        type: newLeftPath.length !== leftPath.length\n            ? lcaType.PRUNED\n            : validLca(newLeftPath[lIndex + 1], rightPath[1])\n                ? lcaType.VALID\n                : lcaType.INVALID,\n        node: lca\n    };\n}\nfunction prunePath(path, children) {\n    let i = 0;\n    while (path[i] && children.indexOf(path[i]) === -1) {\n        i++;\n    }\n    return path.slice(0, i + 1);\n}\nfunction attachedElement(nodes) {\n    let count = 0;\n    let attached = null;\n    while (!attached && count < nodes.length) {\n        if (nodes[count].parentNode) {\n            attached = nodes[count];\n        }\n        count++;\n    }\n    return attached;\n}\nfunction pathToRoot(node, opt_test) {\n    const test = opt_test || ((_x) => false);\n    const path = [node];\n    while (!test(node) && !SemanticUtil.hasMathTag(node) && node.parentNode) {\n        node = parentNode(node);\n        path.unshift(node);\n    }\n    return path;\n}\nfunction validLca(left, right) {\n    return !!(left && right && !left.previousSibling && !right.nextSibling);\n}\nfunction ascendNewNode(newNode) {\n    while (!SemanticUtil.hasMathTag(newNode) && unitChild(newNode)) {\n        newNode = parentNode(newNode);\n    }\n    return newNode;\n}\nfunction descendNode(node) {\n    const children = DomUtil.toArray(node.childNodes);\n    if (!children) {\n        return node;\n    }\n    const remainder = children.filter(function (child) {\n        return (child.nodeType === DomUtil.NodeType.ELEMENT_NODE &&\n            !SemanticUtil.hasIgnoreTag(child));\n    });\n    if (remainder.length === 1 &&\n        SemanticUtil.hasEmptyTag(remainder[0]) &&\n        !remainder[0].hasAttribute(EnrichAttr.Attribute.TYPE)) {\n        return descendNode(remainder[0]);\n    }\n    return node;\n}\nfunction unitChild(node) {\n    const parent = parentNode(node);\n    if (!parent || !SemanticUtil.hasEmptyTag(parent)) {\n        return false;\n    }\n    return DomUtil.toArray(parent.childNodes).every(function (child) {\n        return child === node || isIgnorable(child);\n    });\n}\nfunction isIgnorable(node) {\n    if (node.nodeType !== DomUtil.NodeType.ELEMENT_NODE) {\n        return true;\n    }\n    if (!node || SemanticUtil.hasIgnoreTag(node)) {\n        return true;\n    }\n    const children = DomUtil.toArray(node.childNodes);\n    if ((!SemanticUtil.hasEmptyTag(node) && children.length) ||\n        SemanticUtil.hasDisplayTag(node) ||\n        node.hasAttribute(EnrichAttr.Attribute.TYPE) ||\n        SemanticUtil.isOrphanedGlyph(node)) {\n        return false;\n    }\n    return DomUtil.toArray(node.childNodes).every(isIgnorable);\n}\nfunction parentNode(element) {\n    return element.parentNode;\n}\nfunction addCollapsedAttribute(node, collapsed) {\n    const skeleton = new semantic_skeleton_js_1.SemanticSkeleton(collapsed);\n    node.setAttribute(EnrichAttr.Attribute.COLLAPSED, skeleton.toString());\n}\nfunction cloneContentNode(content) {\n    if (content.mathml.length) {\n        return walkTree(content);\n    }\n    const clone = SETTINGS.implicit\n        ? createInvisibleOperator(content)\n        : EnrichAttr.addMrow();\n    content.mathml = [clone];\n    return clone;\n}\nfunction rewriteMfenced(mml) {\n    if (DomUtil.tagName(mml) !== semantic_util_js_1.MMLTAGS.MFENCED) {\n        return mml;\n    }\n    const newNode = EnrichAttr.addMrow();\n    for (let i = 0, attr; (attr = mml.attributes[i]); i++) {\n        if (['open', 'close', 'separators'].indexOf(attr.name) === -1) {\n            newNode.setAttribute(attr.name, attr.value);\n        }\n    }\n    DomUtil.toArray(mml.childNodes).forEach(function (x) {\n        newNode.appendChild(x);\n    });\n    DomUtil.replaceNode(mml, newNode);\n    return newNode;\n}\nfunction createInvisibleOperator(operator) {\n    const moNode = DomUtil.createElement('mo');\n    const text = DomUtil.createTextNode(operator.textContent);\n    moNode.appendChild(text);\n    EnrichAttr.setAttributes(moNode, operator);\n    moNode.setAttribute(EnrichAttr.Attribute.ADDED, 'true');\n    return moNode;\n}\nfunction setOperatorAttribute(semantic, content) {\n    const operator = semantic.type + (semantic.textContent ? ',' + semantic.textContent : '');\n    content.forEach(function (c) {\n        getInnerNode(c).setAttribute(EnrichAttr.Attribute.OPERATOR, operator);\n    });\n}\nfunction getInnerNode(node) {\n    const children = DomUtil.toArray(node.childNodes);\n    if (!children) {\n        return node;\n    }\n    const remainder = children.filter(function (child) {\n        return !isIgnorable(child);\n    });\n    const result = [];\n    for (let i = 0, remain; (remain = remainder[i]); i++) {\n        if (SemanticUtil.hasEmptyTag(remain) &&\n            remain.getAttribute(EnrichAttr.Attribute.TYPE) !==\n                semantic_meaning_js_1.SemanticType.PUNCTUATION) {\n            const nextInner = getInnerNode(remain);\n            if (nextInner && nextInner !== remain) {\n                result.push(nextInner);\n            }\n        }\n        else {\n            result.push(remain);\n        }\n    }\n    if (result.length === 1) {\n        return result[0];\n    }\n    return node;\n}\nfunction formattedOutput(element, name, wiki = false) {\n    const output = EnrichAttr.removeAttributePrefix(DomUtil.formatXml(element.toString()));\n    return wiki ? name + ':\\n```html\\n' + output + '\\n```\\n' : output;\n}\nfunction collapsePunctuated(semantic, opt_children) {\n    const optional = !!opt_children;\n    const children = opt_children || [];\n    const parent = semantic.parent;\n    const contentIds = semantic.contentNodes.map(function (x) {\n        return x.id;\n    });\n    contentIds.unshift('c');\n    const childIds = [semantic.id, contentIds];\n    for (let i = 0, child; (child = semantic.childNodes[i]); i++) {\n        const mmlChild = walkTree(child);\n        children.push(mmlChild);\n        const innerNode = getInnerNode(mmlChild);\n        if (parent && !optional) {\n            innerNode.setAttribute(EnrichAttr.Attribute.PARENT, parent.id.toString());\n        }\n        childIds.push(child.id);\n    }\n    return childIds;\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbstractEnrichCase = void 0;\nclass AbstractEnrichCase {\n    constructor(semantic) {\n        this.semantic = semantic;\n    }\n}\nexports.AbstractEnrichCase = AbstractEnrichCase;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CaseBinomial = void 0;\nconst DomUtil = require(\"../common/dom_util.js\");\nconst semantic_meaning_js_1 = require(\"../semantic_tree/semantic_meaning.js\");\nconst abstract_enrich_case_js_1 = require(\"./abstract_enrich_case.js\");\nconst enrich_mathml_js_1 = require(\"./enrich_mathml.js\");\nconst enrich_attr_js_1 = require(\"./enrich_attr.js\");\nclass CaseBinomial extends abstract_enrich_case_js_1.AbstractEnrichCase {\n    static test(semantic) {\n        return (!semantic.mathmlTree &&\n            semantic.type === semantic_meaning_js_1.SemanticType.LINE &&\n            semantic.role === semantic_meaning_js_1.SemanticRole.BINOMIAL);\n    }\n    constructor(semantic) {\n        super(semantic);\n        this.mml = semantic.mathmlTree;\n    }\n    getMathml() {\n        if (!this.semantic.childNodes.length) {\n            return this.mml;\n        }\n        const child = this.semantic.childNodes[0];\n        this.mml = (0, enrich_mathml_js_1.walkTree)(child);\n        if (this.mml.hasAttribute(enrich_attr_js_1.Attribute.TYPE)) {\n            const mrow = (0, enrich_attr_js_1.addMrow)();\n            DomUtil.replaceNode(this.mml, mrow);\n            mrow.appendChild(this.mml);\n            this.mml = mrow;\n        }\n        (0, enrich_attr_js_1.setAttributes)(this.mml, this.semantic);\n        return this.mml;\n    }\n}\nexports.CaseBinomial = CaseBinomial;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CaseDoubleScript = void 0;\nconst DomUtil = require(\"../common/dom_util.js\");\nconst semantic_meaning_js_1 = require(\"../semantic_tree/semantic_meaning.js\");\nconst semantic_util_js_1 = require(\"../semantic_tree/semantic_util.js\");\nconst abstract_enrich_case_js_1 = require(\"./abstract_enrich_case.js\");\nconst EnrichMathml = require(\"./enrich_mathml.js\");\nconst enrich_attr_js_1 = require(\"./enrich_attr.js\");\nclass CaseDoubleScript extends abstract_enrich_case_js_1.AbstractEnrichCase {\n    static test(semantic) {\n        if (!semantic.mathmlTree || !semantic.childNodes.length) {\n            return false;\n        }\n        const mmlTag = DomUtil.tagName(semantic.mathmlTree);\n        const role = semantic.childNodes[0].role;\n        return ((mmlTag === semantic_util_js_1.MMLTAGS.MSUBSUP && role === semantic_meaning_js_1.SemanticRole.SUBSUP) ||\n            (mmlTag === semantic_util_js_1.MMLTAGS.MUNDEROVER && role === semantic_meaning_js_1.SemanticRole.UNDEROVER));\n    }\n    constructor(semantic) {\n        super(semantic);\n        this.mml = semantic.mathmlTree;\n    }\n    getMathml() {\n        const ignore = this.semantic.childNodes[0];\n        const baseSem = ignore.childNodes[0];\n        const supSem = this.semantic.childNodes[1];\n        const subSem = ignore.childNodes[1];\n        const supMml = EnrichMathml.walkTree(supSem);\n        const baseMml = EnrichMathml.walkTree(baseSem);\n        const subMml = EnrichMathml.walkTree(subSem);\n        (0, enrich_attr_js_1.setAttributes)(this.mml, this.semantic);\n        this.mml.setAttribute(enrich_attr_js_1.Attribute.CHILDREN, (0, enrich_attr_js_1.makeIdList)([baseSem, subSem, supSem]));\n        [baseMml, subMml, supMml].forEach((child) => EnrichMathml.getInnerNode(child).setAttribute(enrich_attr_js_1.Attribute.PARENT, this.mml.getAttribute(enrich_attr_js_1.Attribute.ID)));\n        this.mml.setAttribute(enrich_attr_js_1.Attribute.TYPE, ignore.role);\n        EnrichMathml.addCollapsedAttribute(this.mml, [\n            this.semantic.id,\n            [ignore.id, baseSem.id, subSem.id],\n            supSem.id\n        ]);\n        return this.mml;\n    }\n}\nexports.CaseDoubleScript = CaseDoubleScript;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CaseMultiindex = void 0;\nconst DomUtil = require(\"../common/dom_util.js\");\nconst semantic_meaning_js_1 = require(\"../semantic_tree/semantic_meaning.js\");\nconst semantic_util_js_1 = require(\"../semantic_tree/semantic_util.js\");\nconst abstract_enrich_case_js_1 = require(\"./abstract_enrich_case.js\");\nconst EnrichMathml = require(\"./enrich_mathml.js\");\nconst enrich_attr_js_1 = require(\"./enrich_attr.js\");\nclass CaseMultiindex extends abstract_enrich_case_js_1.AbstractEnrichCase {\n    static multiscriptIndex(index) {\n        if (index.type === semantic_meaning_js_1.SemanticType.PUNCTUATED &&\n            index.contentNodes[0].role === semantic_meaning_js_1.SemanticRole.DUMMY) {\n            return EnrichMathml.collapsePunctuated(index);\n        }\n        EnrichMathml.walkTree(index);\n        return index.id;\n    }\n    static createNone_(semantic) {\n        const newNode = DomUtil.createElement('none');\n        if (semantic) {\n            (0, enrich_attr_js_1.setAttributes)(newNode, semantic);\n        }\n        newNode.setAttribute(enrich_attr_js_1.Attribute.ADDED, 'true');\n        return newNode;\n    }\n    constructor(semantic) {\n        super(semantic);\n        this.mml = semantic.mathmlTree;\n    }\n    completeMultiscript(rightIndices, leftIndices) {\n        const children = DomUtil.toArray(this.mml.childNodes).slice(1);\n        let childCounter = 0;\n        const completeIndices = (indices) => {\n            for (const index of indices) {\n                const child = children[childCounter];\n                if (child && index === parseInt(child.getAttribute(enrich_attr_js_1.Attribute.ID))) {\n                    child.setAttribute(enrich_attr_js_1.Attribute.PARENT, this.semantic.id.toString());\n                    childCounter++;\n                }\n                else if (!child ||\n                    index !==\n                        parseInt(EnrichMathml.getInnerNode(child).getAttribute(enrich_attr_js_1.Attribute.ID))) {\n                    const query = this.semantic.querySelectorAll((x) => x.id === index);\n                    this.mml.insertBefore(CaseMultiindex.createNone_(query[0]), child || null);\n                }\n                else {\n                    EnrichMathml.getInnerNode(child).setAttribute(enrich_attr_js_1.Attribute.PARENT, this.semantic.id.toString());\n                    childCounter++;\n                }\n            }\n        };\n        completeIndices(rightIndices);\n        if (children[childCounter] &&\n            DomUtil.tagName(children[childCounter]) !== semantic_util_js_1.MMLTAGS.MPRESCRIPTS) {\n            this.mml.insertBefore(children[childCounter], DomUtil.createElement('mprescripts'));\n        }\n        else {\n            childCounter++;\n        }\n        completeIndices(leftIndices);\n    }\n}\nexports.CaseMultiindex = CaseMultiindex;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CaseMultiscripts = void 0;\nconst DomUtil = require(\"../common/dom_util.js\");\nconst semantic_meaning_js_1 = require(\"../semantic_tree/semantic_meaning.js\");\nconst semantic_skeleton_js_1 = require(\"../semantic_tree/semantic_skeleton.js\");\nconst semantic_util_js_1 = require(\"../semantic_tree/semantic_util.js\");\nconst case_multiindex_js_1 = require(\"./case_multiindex.js\");\nconst EnrichMathml = require(\"./enrich_mathml.js\");\nconst enrich_attr_js_1 = require(\"./enrich_attr.js\");\nclass CaseMultiscripts extends case_multiindex_js_1.CaseMultiindex {\n    static test(semantic) {\n        if (!semantic.mathmlTree) {\n            return false;\n        }\n        const mmlTag = DomUtil.tagName(semantic.mathmlTree);\n        return (mmlTag === semantic_util_js_1.MMLTAGS.MMULTISCRIPTS &&\n            (semantic.type === semantic_meaning_js_1.SemanticType.SUPERSCRIPT ||\n                semantic.type === semantic_meaning_js_1.SemanticType.SUBSCRIPT));\n    }\n    constructor(semantic) {\n        super(semantic);\n    }\n    getMathml() {\n        (0, enrich_attr_js_1.setAttributes)(this.mml, this.semantic);\n        let baseSem, rsup, rsub;\n        if (this.semantic.childNodes[0] &&\n            this.semantic.childNodes[0].role === semantic_meaning_js_1.SemanticRole.SUBSUP) {\n            const ignore = this.semantic.childNodes[0];\n            baseSem = ignore.childNodes[0];\n            rsup = case_multiindex_js_1.CaseMultiindex.multiscriptIndex(this.semantic.childNodes[1]);\n            rsub = case_multiindex_js_1.CaseMultiindex.multiscriptIndex(ignore.childNodes[1]);\n            const collapsed = [this.semantic.id, [ignore.id, baseSem.id, rsub], rsup];\n            EnrichMathml.addCollapsedAttribute(this.mml, collapsed);\n            this.mml.setAttribute(enrich_attr_js_1.Attribute.TYPE, ignore.role);\n            this.completeMultiscript(semantic_skeleton_js_1.SemanticSkeleton.interleaveIds(rsub, rsup), []);\n        }\n        else {\n            baseSem = this.semantic.childNodes[0];\n            rsup = case_multiindex_js_1.CaseMultiindex.multiscriptIndex(this.semantic.childNodes[1]);\n            const collapsed = [this.semantic.id, baseSem.id, rsup];\n            EnrichMathml.addCollapsedAttribute(this.mml, collapsed);\n        }\n        const childIds = semantic_skeleton_js_1.SemanticSkeleton.collapsedLeafs(rsub || [], rsup);\n        const base = EnrichMathml.walkTree(baseSem);\n        EnrichMathml.getInnerNode(base).setAttribute(enrich_attr_js_1.Attribute.PARENT, this.semantic.id.toString());\n        childIds.unshift(baseSem.id);\n        this.mml.setAttribute(enrich_attr_js_1.Attribute.CHILDREN, childIds.join(','));\n        return this.mml;\n    }\n}\nexports.CaseMultiscripts = CaseMultiscripts;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CaseTensor = void 0;\nconst semantic_meaning_js_1 = require(\"../semantic_tree/semantic_meaning.js\");\nconst semantic_skeleton_js_1 = require(\"../semantic_tree/semantic_skeleton.js\");\nconst case_multiindex_js_1 = require(\"./case_multiindex.js\");\nconst EnrichMathml = require(\"./enrich_mathml.js\");\nconst enrich_attr_js_1 = require(\"./enrich_attr.js\");\nclass CaseTensor extends case_multiindex_js_1.CaseMultiindex {\n    static test(semantic) {\n        return !!semantic.mathmlTree && semantic.type === semantic_meaning_js_1.SemanticType.TENSOR;\n    }\n    constructor(semantic) {\n        super(semantic);\n    }\n    getMathml() {\n        EnrichMathml.walkTree(this.semantic.childNodes[0]);\n        const lsub = case_multiindex_js_1.CaseMultiindex.multiscriptIndex(this.semantic.childNodes[1]);\n        const lsup = case_multiindex_js_1.CaseMultiindex.multiscriptIndex(this.semantic.childNodes[2]);\n        const rsub = case_multiindex_js_1.CaseMultiindex.multiscriptIndex(this.semantic.childNodes[3]);\n        const rsup = case_multiindex_js_1.CaseMultiindex.multiscriptIndex(this.semantic.childNodes[4]);\n        (0, enrich_attr_js_1.setAttributes)(this.mml, this.semantic);\n        const collapsed = [\n            this.semantic.id,\n            this.semantic.childNodes[0].id,\n            lsub,\n            lsup,\n            rsub,\n            rsup\n        ];\n        EnrichMathml.addCollapsedAttribute(this.mml, collapsed);\n        const childIds = semantic_skeleton_js_1.SemanticSkeleton.collapsedLeafs(lsub, lsup, rsub, rsup);\n        childIds.unshift(this.semantic.childNodes[0].id);\n        this.mml.setAttribute(enrich_attr_js_1.Attribute.CHILDREN, childIds.join(','));\n        this.completeMultiscript(semantic_skeleton_js_1.SemanticSkeleton.interleaveIds(rsub, rsup), semantic_skeleton_js_1.SemanticSkeleton.interleaveIds(lsub, lsup));\n        return this.mml;\n    }\n}\nexports.CaseTensor = CaseTensor;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CaseEmbellished = void 0;\nconst DomUtil = require(\"../common/dom_util.js\");\nconst semantic_meaning_js_1 = require(\"../semantic_tree/semantic_meaning.js\");\nconst semantic_node_js_1 = require(\"../semantic_tree/semantic_node.js\");\nconst semantic_util_js_1 = require(\"../semantic_tree/semantic_util.js\");\nconst abstract_enrich_case_js_1 = require(\"./abstract_enrich_case.js\");\nconst case_double_script_js_1 = require(\"./case_double_script.js\");\nconst case_multiscripts_js_1 = require(\"./case_multiscripts.js\");\nconst case_tensor_js_1 = require(\"./case_tensor.js\");\nconst EnrichMathml = require(\"./enrich_mathml.js\");\nconst enrich_attr_js_1 = require(\"./enrich_attr.js\");\nclass CaseEmbellished extends abstract_enrich_case_js_1.AbstractEnrichCase {\n    static test(semantic) {\n        return !!(semantic.mathmlTree &&\n            semantic.fencePointer &&\n            !semantic.mathmlTree.getAttribute('data-semantic-type'));\n    }\n    static makeEmptyNode_(id) {\n        const mrow = (0, enrich_attr_js_1.addMrow)();\n        const empty = new semantic_node_js_1.SemanticNode(id);\n        empty.type = semantic_meaning_js_1.SemanticType.EMPTY;\n        empty.mathmlTree = mrow;\n        return empty;\n    }\n    static fencedMap_(fence, ids) {\n        ids[fence.id] = fence.mathmlTree;\n        if (!fence.embellished) {\n            return;\n        }\n        CaseEmbellished.fencedMap_(fence.childNodes[0], ids);\n    }\n    constructor(semantic) {\n        super(semantic);\n        this.fenced = null;\n        this.fencedMml = null;\n        this.fencedMmlNodes = [];\n        this.ofence = null;\n        this.ofenceMml = null;\n        this.ofenceMap = {};\n        this.cfence = null;\n        this.cfenceMml = null;\n        this.cfenceMap = {};\n        this.parentCleanup = [];\n    }\n    getMathml() {\n        this.getFenced_();\n        this.fencedMml = EnrichMathml.walkTree(this.fenced);\n        this.getFencesMml_();\n        if (this.fenced.type === semantic_meaning_js_1.SemanticType.EMPTY && !this.fencedMml.parentNode) {\n            this.fencedMml.setAttribute(enrich_attr_js_1.Attribute.ADDED, 'true');\n            this.cfenceMml.parentNode.insertBefore(this.fencedMml, this.cfenceMml);\n        }\n        this.getFencedMml_();\n        const rewrite = this.rewrite_();\n        return rewrite;\n    }\n    fencedElement(node) {\n        return (node.type === semantic_meaning_js_1.SemanticType.FENCED ||\n            node.type === semantic_meaning_js_1.SemanticType.MATRIX ||\n            node.type === semantic_meaning_js_1.SemanticType.VECTOR);\n    }\n    getFenced_() {\n        let currentNode = this.semantic;\n        while (!this.fencedElement(currentNode)) {\n            currentNode = currentNode.childNodes[0];\n        }\n        this.fenced = currentNode.childNodes[0];\n        this.ofence = currentNode.contentNodes[0];\n        this.cfence = currentNode.contentNodes[1];\n        CaseEmbellished.fencedMap_(this.ofence, this.ofenceMap);\n        CaseEmbellished.fencedMap_(this.cfence, this.cfenceMap);\n    }\n    getFencedMml_() {\n        let sibling = this.ofenceMml.nextSibling;\n        sibling = sibling === this.fencedMml ? sibling : this.fencedMml;\n        while (sibling && sibling !== this.cfenceMml) {\n            this.fencedMmlNodes.push(sibling);\n            sibling = sibling.nextSibling;\n        }\n    }\n    getFencesMml_() {\n        let currentNode = this.semantic;\n        const ofenceIds = Object.keys(this.ofenceMap);\n        const cfenceIds = Object.keys(this.cfenceMap);\n        while ((!this.ofenceMml || !this.cfenceMml) &&\n            currentNode !== this.fenced) {\n            if (ofenceIds.indexOf(currentNode.fencePointer) !== -1 &&\n                !this.ofenceMml) {\n                this.ofenceMml = currentNode.mathmlTree;\n            }\n            if (cfenceIds.indexOf(currentNode.fencePointer) !== -1 &&\n                !this.cfenceMml) {\n                this.cfenceMml = currentNode.mathmlTree;\n            }\n            currentNode = currentNode.childNodes[0];\n        }\n        if (!this.ofenceMml) {\n            this.ofenceMml = this.ofence.mathmlTree;\n        }\n        if (!this.cfenceMml) {\n            this.cfenceMml = this.cfence.mathmlTree;\n        }\n        if (this.ofenceMml) {\n            this.ofenceMml = EnrichMathml.ascendNewNode(this.ofenceMml);\n        }\n        if (this.cfenceMml) {\n            this.cfenceMml = EnrichMathml.ascendNewNode(this.cfenceMml);\n        }\n    }\n    rewrite_() {\n        let currentNode = this.semantic;\n        let result = null;\n        const newNode = this.introduceNewLayer_();\n        (0, enrich_attr_js_1.setAttributes)(newNode, this.fenced.parent);\n        while (!this.fencedElement(currentNode)) {\n            const mml = currentNode.mathmlTree;\n            const specialCase = this.specialCase_(currentNode, mml);\n            if (specialCase) {\n                currentNode = specialCase;\n            }\n            else {\n                (0, enrich_attr_js_1.setAttributes)(mml, currentNode);\n                const mmlChildren = [];\n                for (let i = 1, child; (child = currentNode.childNodes[i]); i++) {\n                    mmlChildren.push(EnrichMathml.walkTree(child));\n                }\n                currentNode = currentNode.childNodes[0];\n            }\n            const dummy = DomUtil.createElement('dummy');\n            const saveChild = mml.childNodes[0];\n            DomUtil.replaceNode(mml, dummy);\n            DomUtil.replaceNode(newNode, mml);\n            DomUtil.replaceNode(mml.childNodes[0], newNode);\n            DomUtil.replaceNode(dummy, saveChild);\n            if (!result) {\n                result = mml;\n            }\n        }\n        EnrichMathml.walkTree(this.ofence);\n        EnrichMathml.walkTree(this.cfence);\n        this.cleanupParents_();\n        return result || newNode;\n    }\n    specialCase_(semantic, mml) {\n        const mmlTag = DomUtil.tagName(mml);\n        let parent = null;\n        let caller;\n        if (mmlTag === semantic_util_js_1.MMLTAGS.MSUBSUP) {\n            parent = semantic.childNodes[0];\n            caller = case_double_script_js_1.CaseDoubleScript;\n        }\n        else if (mmlTag === semantic_util_js_1.MMLTAGS.MMULTISCRIPTS) {\n            if (semantic.type === semantic_meaning_js_1.SemanticType.SUPERSCRIPT ||\n                semantic.type === semantic_meaning_js_1.SemanticType.SUBSCRIPT) {\n                caller = case_multiscripts_js_1.CaseMultiscripts;\n            }\n            else if (semantic.type === semantic_meaning_js_1.SemanticType.TENSOR) {\n                caller = case_tensor_js_1.CaseTensor;\n            }\n            if (caller &&\n                semantic.childNodes[0] &&\n                semantic.childNodes[0].role === semantic_meaning_js_1.SemanticRole.SUBSUP) {\n                parent = semantic.childNodes[0];\n            }\n            else {\n                parent = semantic;\n            }\n        }\n        if (!parent) {\n            return null;\n        }\n        const base = parent.childNodes[0];\n        const empty = CaseEmbellished.makeEmptyNode_(base.id);\n        parent.childNodes[0] = empty;\n        mml = new caller(semantic).getMathml();\n        parent.childNodes[0] = base;\n        this.parentCleanup.push(mml);\n        return parent.childNodes[0];\n    }\n    introduceNewLayer_() {\n        const fullOfence = this.fullFence(this.ofenceMml);\n        const fullCfence = this.fullFence(this.cfenceMml);\n        let newNode = (0, enrich_attr_js_1.addMrow)();\n        DomUtil.replaceNode(this.fencedMml, newNode);\n        this.fencedMmlNodes.forEach((node) => newNode.appendChild(node));\n        newNode.insertBefore(fullOfence, this.fencedMml);\n        newNode.appendChild(fullCfence);\n        if (!newNode.parentNode) {\n            const mrow = (0, enrich_attr_js_1.addMrow)();\n            while (newNode.childNodes.length > 0) {\n                mrow.appendChild(newNode.childNodes[0]);\n            }\n            newNode.appendChild(mrow);\n            newNode = mrow;\n        }\n        return newNode;\n    }\n    fullFence(fence) {\n        const parent = this.fencedMml.parentNode;\n        let currentFence = fence;\n        while (currentFence.parentNode && currentFence.parentNode !== parent) {\n            currentFence = currentFence.parentNode;\n        }\n        return currentFence;\n    }\n    cleanupParents_() {\n        this.parentCleanup.forEach(function (x) {\n            const parent = x.childNodes[1].getAttribute(enrich_attr_js_1.Attribute.PARENT);\n            x.childNodes[0].setAttribute(enrich_attr_js_1.Attribute.PARENT, parent);\n        });\n    }\n}\nexports.CaseEmbellished = CaseEmbellished;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CaseEmpheq = void 0;\nconst semantic_util_js_1 = require(\"../semantic_tree/semantic_util.js\");\nconst abstract_enrich_case_js_1 = require(\"./abstract_enrich_case.js\");\nconst EnrichMathml = require(\"./enrich_mathml.js\");\nconst enrich_attr_js_1 = require(\"./enrich_attr.js\");\nconst DomUtil = require(\"../common/dom_util.js\");\nclass CaseEmpheq extends abstract_enrich_case_js_1.AbstractEnrichCase {\n    static test(semantic) {\n        return !!semantic.mathmlTree && semantic.hasAnnotation('Emph', 'top');\n    }\n    constructor(semantic) {\n        super(semantic);\n        this.mrows = [];\n        this.mml = semantic.mathmlTree;\n    }\n    getMathml() {\n        this.recurseToTable(this.semantic);\n        if (this.mrows.length) {\n            const newRow = (0, enrich_attr_js_1.addMrow)();\n            const parent = this.mml.parentNode;\n            parent.insertBefore(newRow, this.mml);\n            for (const mrow of this.mrows) {\n                newRow.appendChild(mrow);\n            }\n            newRow.appendChild(this.mml);\n        }\n        return this.mml;\n    }\n    recurseToTable(node) {\n        var _a, _b;\n        if (!(node.hasAnnotation('Emph', 'top') || node.hasAnnotation('Emph', 'fence')) &&\n            (node.hasAnnotation('Emph', 'left') ||\n                node.hasAnnotation('Emph', 'right'))) {\n            EnrichMathml.walkTree(node);\n            return;\n        }\n        if (!node.mathmlTree ||\n            (DomUtil.tagName(node.mathmlTree) === semantic_util_js_1.MMLTAGS.MTABLE &&\n                ((_a = node.annotation['Emph']) === null || _a === void 0 ? void 0 : _a.length) &&\n                node.annotation['Emph'][0] !== 'table')) {\n            const newNode = (0, enrich_attr_js_1.addMrow)();\n            (0, enrich_attr_js_1.setAttributes)(newNode, node);\n            this.mrows.unshift(newNode);\n        }\n        else {\n            if (DomUtil.tagName(node.mathmlTree) === semantic_util_js_1.MMLTAGS.MTABLE &&\n                ((_b = node.annotation['Emph']) === null || _b === void 0 ? void 0 : _b.length) &&\n                node.annotation['Emph'][0] === 'table') {\n                this.finalizeTable(node);\n                return;\n            }\n            (0, enrich_attr_js_1.setAttributes)(node.mathmlTree, node);\n        }\n        node.childNodes.forEach(this.recurseToTable.bind(this));\n        if (node.textContent || node.type === 'punctuated') {\n            const newContent = node.contentNodes.map((x) => {\n                const newNode = EnrichMathml.cloneContentNode(x);\n                if (newNode.hasAttribute('data-semantic-added')) {\n                    this.mrows.unshift(newNode);\n                }\n                else {\n                    this.recurseToTable(x);\n                }\n                return newNode;\n            });\n            EnrichMathml.setOperatorAttribute(node, newContent);\n            return;\n        }\n        node.contentNodes.forEach(this.recurseToTable.bind(this));\n    }\n    finalizeTable(node) {\n        (0, enrich_attr_js_1.setAttributes)(node.mathmlTree, node);\n        node.contentNodes.forEach((x) => {\n            EnrichMathml.walkTree(x);\n        });\n        node.childNodes.forEach((x) => {\n            EnrichMathml.walkTree(x);\n        });\n    }\n}\nexports.CaseEmpheq = CaseEmpheq;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CaseLimit = void 0;\nconst DomUtil = require(\"../common/dom_util.js\");\nconst semantic_meaning_js_1 = require(\"../semantic_tree/semantic_meaning.js\");\nconst semantic_util_js_1 = require(\"../semantic_tree/semantic_util.js\");\nconst abstract_enrich_case_js_1 = require(\"./abstract_enrich_case.js\");\nconst EnrichMathml = require(\"./enrich_mathml.js\");\nconst enrich_attr_js_1 = require(\"./enrich_attr.js\");\nclass CaseLimit extends abstract_enrich_case_js_1.AbstractEnrichCase {\n    static test(semantic) {\n        if (!semantic.mathmlTree || !semantic.childNodes.length) {\n            return false;\n        }\n        const mmlTag = DomUtil.tagName(semantic.mathmlTree);\n        const type = semantic.type;\n        return (((type === semantic_meaning_js_1.SemanticType.LIMUPPER || type === semantic_meaning_js_1.SemanticType.LIMLOWER) &&\n            (mmlTag === semantic_util_js_1.MMLTAGS.MSUBSUP || mmlTag === semantic_util_js_1.MMLTAGS.MUNDEROVER)) ||\n            (type === semantic_meaning_js_1.SemanticType.LIMBOTH &&\n                (mmlTag === semantic_util_js_1.MMLTAGS.MSUB ||\n                    mmlTag === semantic_util_js_1.MMLTAGS.MUNDER ||\n                    mmlTag === semantic_util_js_1.MMLTAGS.MSUP ||\n                    mmlTag === semantic_util_js_1.MMLTAGS.MOVER)));\n    }\n    static walkTree_(node) {\n        if (node) {\n            EnrichMathml.walkTree(node);\n        }\n    }\n    constructor(semantic) {\n        super(semantic);\n        this.mml = semantic.mathmlTree;\n    }\n    getMathml() {\n        const children = this.semantic.childNodes;\n        if (this.semantic.type !== semantic_meaning_js_1.SemanticType.LIMBOTH &&\n            this.mml.childNodes.length >= 3) {\n            this.mml = EnrichMathml.introduceNewLayer([this.mml], this.semantic);\n        }\n        (0, enrich_attr_js_1.setAttributes)(this.mml, this.semantic);\n        if (!children[0].mathmlTree) {\n            children[0].mathmlTree = this.semantic.mathmlTree;\n        }\n        children.forEach(CaseLimit.walkTree_);\n        return this.mml;\n    }\n}\nexports.CaseLimit = CaseLimit;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CaseLine = void 0;\nconst semantic_meaning_js_1 = require(\"../semantic_tree/semantic_meaning.js\");\nconst abstract_enrich_case_js_1 = require(\"./abstract_enrich_case.js\");\nconst EnrichMathml = require(\"./enrich_mathml.js\");\nconst enrich_attr_js_1 = require(\"./enrich_attr.js\");\nclass CaseLine extends abstract_enrich_case_js_1.AbstractEnrichCase {\n    static test(semantic) {\n        return !!semantic.mathmlTree && semantic.type === semantic_meaning_js_1.SemanticType.LINE;\n    }\n    constructor(semantic) {\n        super(semantic);\n        this.mml = semantic.mathmlTree;\n    }\n    getMathml() {\n        if (this.semantic.contentNodes.length) {\n            EnrichMathml.walkTree(this.semantic.contentNodes[0]);\n        }\n        if (this.semantic.childNodes.length) {\n            EnrichMathml.walkTree(this.semantic.childNodes[0]);\n        }\n        (0, enrich_attr_js_1.setAttributes)(this.mml, this.semantic);\n        return this.mml;\n    }\n}\nexports.CaseLine = CaseLine;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CaseProof = void 0;\nconst semantic_meaning_js_1 = require(\"../semantic_tree/semantic_meaning.js\");\nconst abstract_enrich_case_js_1 = require(\"./abstract_enrich_case.js\");\nconst EnrichMathml = require(\"./enrich_mathml.js\");\nconst enrich_attr_js_1 = require(\"./enrich_attr.js\");\nclass CaseProof extends abstract_enrich_case_js_1.AbstractEnrichCase {\n    static test(semantic) {\n        return (!!semantic.mathmlTree &&\n            (semantic.type === semantic_meaning_js_1.SemanticType.INFERENCE ||\n                semantic.type === semantic_meaning_js_1.SemanticType.PREMISES));\n    }\n    constructor(semantic) {\n        super(semantic);\n        this.mml = semantic.mathmlTree;\n    }\n    getMathml() {\n        if (!this.semantic.childNodes.length) {\n            return this.mml;\n        }\n        this.semantic.contentNodes.forEach(function (x) {\n            EnrichMathml.walkTree(x);\n            (0, enrich_attr_js_1.setAttributes)(x.mathmlTree, x);\n        });\n        this.semantic.childNodes.forEach(function (x) {\n            EnrichMathml.walkTree(x);\n        });\n        (0, enrich_attr_js_1.setAttributes)(this.mml, this.semantic);\n        if (this.mml.getAttribute('data-semantic-id') ===\n            this.mml.getAttribute('data-semantic-parent')) {\n            this.mml.removeAttribute('data-semantic-parent');\n        }\n        return this.mml;\n    }\n}\nexports.CaseProof = CaseProof;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CaseTable = void 0;\nconst DomUtil = require(\"../common/dom_util.js\");\nconst semantic_meaning_js_1 = require(\"../semantic_tree/semantic_meaning.js\");\nconst semantic_util_js_1 = require(\"../semantic_tree/semantic_util.js\");\nconst abstract_enrich_case_js_1 = require(\"./abstract_enrich_case.js\");\nconst EnrichMathml = require(\"./enrich_mathml.js\");\nconst enrich_attr_js_1 = require(\"./enrich_attr.js\");\nclass CaseTable extends abstract_enrich_case_js_1.AbstractEnrichCase {\n    static test(semantic) {\n        return (semantic.type === semantic_meaning_js_1.SemanticType.MATRIX ||\n            semantic.type === semantic_meaning_js_1.SemanticType.VECTOR ||\n            semantic.type === semantic_meaning_js_1.SemanticType.CASES);\n    }\n    constructor(semantic) {\n        super(semantic);\n        this.inner = [];\n        this.mml = semantic.mathmlTree;\n    }\n    getMathml() {\n        const lfence = EnrichMathml.cloneContentNode(this.semantic.contentNodes[0]);\n        const rfence = this.semantic.contentNodes[1]\n            ? EnrichMathml.cloneContentNode(this.semantic.contentNodes[1])\n            : null;\n        this.inner = this.semantic.childNodes.map(EnrichMathml.walkTree);\n        if (!this.mml) {\n            this.mml = EnrichMathml.introduceNewLayer([lfence].concat(this.inner, [rfence]), this.semantic);\n        }\n        else if (DomUtil.tagName(this.mml) === semantic_util_js_1.MMLTAGS.MFENCED) {\n            const children = this.mml.childNodes;\n            this.mml.insertBefore(lfence, children[0] || null);\n            if (rfence) {\n                this.mml.appendChild(rfence);\n            }\n            this.mml = EnrichMathml.rewriteMfenced(this.mml);\n        }\n        else {\n            const newChildren = [lfence, this.mml];\n            if (rfence) {\n                newChildren.push(rfence);\n            }\n            this.mml = EnrichMathml.introduceNewLayer(newChildren, this.semantic);\n        }\n        (0, enrich_attr_js_1.setAttributes)(this.mml, this.semantic);\n        return this.mml;\n    }\n}\nexports.CaseTable = CaseTable;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CaseText = void 0;\nconst semantic_meaning_js_1 = require(\"../semantic_tree/semantic_meaning.js\");\nconst abstract_enrich_case_js_1 = require(\"./abstract_enrich_case.js\");\nconst EnrichMathml = require(\"./enrich_mathml.js\");\nconst enrich_attr_js_1 = require(\"./enrich_attr.js\");\nclass CaseText extends abstract_enrich_case_js_1.AbstractEnrichCase {\n    static test(semantic) {\n        return (semantic.type === semantic_meaning_js_1.SemanticType.PUNCTUATED &&\n            (semantic.role === semantic_meaning_js_1.SemanticRole.TEXT ||\n                semantic.contentNodes.every((x) => x.role === semantic_meaning_js_1.SemanticRole.DUMMY)));\n    }\n    constructor(semantic) {\n        super(semantic);\n        this.mml = semantic.mathmlTree;\n    }\n    getMathml() {\n        const children = [];\n        const collapsed = EnrichMathml.collapsePunctuated(this.semantic, children);\n        this.mml = EnrichMathml.introduceNewLayer(children, this.semantic);\n        (0, enrich_attr_js_1.setAttributes)(this.mml, this.semantic);\n        this.mml.removeAttribute(enrich_attr_js_1.Attribute.CONTENT);\n        EnrichMathml.addCollapsedAttribute(this.mml, collapsed);\n        return this.mml;\n    }\n}\nexports.CaseText = CaseText;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst case_binomial_js_1 = require(\"./case_binomial.js\");\nconst case_double_script_js_1 = require(\"./case_double_script.js\");\nconst case_embellished_js_1 = require(\"./case_embellished.js\");\nconst case_empheq_js_1 = require(\"./case_empheq.js\");\nconst case_limit_js_1 = require(\"./case_limit.js\");\nconst case_line_js_1 = require(\"./case_line.js\");\nconst case_multiscripts_js_1 = require(\"./case_multiscripts.js\");\nconst case_proof_js_1 = require(\"./case_proof.js\");\nconst case_table_js_1 = require(\"./case_table.js\");\nconst case_tensor_js_1 = require(\"./case_tensor.js\");\nconst case_text_js_1 = require(\"./case_text.js\");\nconst enrich_case_js_1 = require(\"./enrich_case.js\");\nenrich_case_js_1.factory.push(...[\n    {\n        test: case_limit_js_1.CaseLimit.test,\n        constr: (node) => new case_limit_js_1.CaseLimit(node)\n    },\n    {\n        test: case_embellished_js_1.CaseEmbellished.test,\n        constr: (node) => new case_embellished_js_1.CaseEmbellished(node)\n    },\n    {\n        test: case_double_script_js_1.CaseDoubleScript.test,\n        constr: (node) => new case_double_script_js_1.CaseDoubleScript(node)\n    },\n    {\n        test: case_tensor_js_1.CaseTensor.test,\n        constr: (node) => new case_tensor_js_1.CaseTensor(node)\n    },\n    {\n        test: case_multiscripts_js_1.CaseMultiscripts.test,\n        constr: (node) => new case_multiscripts_js_1.CaseMultiscripts(node)\n    },\n    { test: case_line_js_1.CaseLine.test, constr: (node) => new case_line_js_1.CaseLine(node) },\n    {\n        test: case_binomial_js_1.CaseBinomial.test,\n        constr: (node) => new case_binomial_js_1.CaseBinomial(node)\n    },\n    {\n        test: case_proof_js_1.CaseProof.test,\n        constr: (node) => new case_proof_js_1.CaseProof(node)\n    },\n    {\n        test: case_empheq_js_1.CaseEmpheq.test,\n        constr: (node) => new case_empheq_js_1.CaseEmpheq(node)\n    },\n    {\n        test: case_table_js_1.CaseTable.test,\n        constr: (node) => new case_table_js_1.CaseTable(node)\n    },\n    { test: case_text_js_1.CaseText.test, constr: (node) => new case_text_js_1.CaseText(node) }\n]);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.semanticMathmlNode = semanticMathmlNode;\nexports.semanticMathmlSync = semanticMathmlSync;\nexports.semanticMathml = semanticMathml;\nexports.testTranslation = testTranslation;\nexports.prepareMmlString = prepareMmlString;\nconst debugger_js_1 = require(\"../common/debugger.js\");\nconst DomUtil = require(\"../common/dom_util.js\");\nconst engine_js_1 = require(\"../common/engine.js\");\nconst Semantic = require(\"../semantic_tree/semantic.js\");\nconst EnrichMathml = require(\"./enrich_mathml.js\");\nrequire(\"./enrich_case_factory.js\");\nfunction semanticMathmlNode(mml) {\n    const clone = DomUtil.cloneNode(mml);\n    const tree = Semantic.getTree(clone);\n    return EnrichMathml.enrich(clone, tree);\n}\nfunction semanticMathmlSync(expr) {\n    const mml = DomUtil.parseInput(expr);\n    return semanticMathmlNode(mml);\n}\nfunction semanticMathml(expr, callback) {\n    engine_js_1.EnginePromise.getall().then(() => {\n        const mml = DomUtil.parseInput(expr);\n        callback(semanticMathmlNode(mml));\n    });\n}\nfunction testTranslation(expr) {\n    debugger_js_1.Debugger.getInstance().init();\n    const mml = semanticMathmlSync(prepareMmlString(expr));\n    debugger_js_1.Debugger.getInstance().exit();\n    return mml;\n}\nfunction prepareMmlString(expr) {\n    if (!expr.match(/^<math/)) {\n        expr = '<math>' + expr;\n    }\n    if (!expr.match(/\\/math>$/)) {\n        expr += '</math>';\n    }\n    return expr;\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbstractHighlighter = void 0;\nconst XpathUtil = require(\"../common/xpath_util.js\");\nconst enrich_attr_js_1 = require(\"../enrich_mathml/enrich_attr.js\");\nlet counter = 0;\nclass AbstractHighlighter {\n    constructor() {\n        this.counter = counter++;\n        this.ATTR = 'sre-highlight-' + this.counter.toString();\n        this.color = null;\n        this.mactionName = '';\n        this.currentHighlights = [];\n    }\n    highlight(nodes) {\n        this.currentHighlights.push(nodes.map((node) => {\n            const info = this.highlightNode(node);\n            this.setHighlighted(node);\n            return info;\n        }));\n    }\n    highlightAll(node) {\n        const mactions = this.getMactionNodes(node);\n        for (let i = 0, maction; (maction = mactions[i]); i++) {\n            this.highlight([maction]);\n        }\n    }\n    unhighlight() {\n        const nodes = this.currentHighlights.pop();\n        if (!nodes) {\n            return;\n        }\n        nodes.forEach((highlight) => {\n            if (this.isHighlighted(highlight.node)) {\n                this.unhighlightNode(highlight);\n                this.unsetHighlighted(highlight.node);\n            }\n        });\n    }\n    unhighlightAll() {\n        while (this.currentHighlights.length > 0) {\n            this.unhighlight();\n        }\n    }\n    setColor(color) {\n        this.color = color;\n    }\n    colorString() {\n        return this.color.rgba();\n    }\n    addEvents(node, events) {\n        const mactions = this.getMactionNodes(node);\n        for (let i = 0, maction; (maction = mactions[i]); i++) {\n            for (const [key, event] of Object.entries(events)) {\n                maction.addEventListener(key, event);\n            }\n        }\n    }\n    getMactionNodes(node) {\n        return Array.from(node.getElementsByClassName(this.mactionName));\n    }\n    isMactionNode(node) {\n        const className = node.className || node.getAttribute('class');\n        return className ? !!className.match(new RegExp(this.mactionName)) : false;\n    }\n    isHighlighted(node) {\n        return node.hasAttribute(this.ATTR);\n    }\n    setHighlighted(node) {\n        node.setAttribute(this.ATTR, 'true');\n    }\n    unsetHighlighted(node) {\n        node.removeAttribute(this.ATTR);\n    }\n    colorizeAll(node) {\n        XpathUtil.updateEvaluator(node);\n        const allNodes = XpathUtil.evalXPath(`.//*[@${enrich_attr_js_1.Attribute.ID}]`, node);\n        allNodes.forEach((x) => this.colorize(x));\n    }\n    uncolorizeAll(node) {\n        const allNodes = XpathUtil.evalXPath(`.//*[@${enrich_attr_js_1.Attribute.ID}]`, node);\n        allNodes.forEach((x) => this.uncolorize(x));\n    }\n    colorize(node) {\n        const fore = (0, enrich_attr_js_1.addPrefix)('foreground');\n        if (node.hasAttribute(fore)) {\n            node.setAttribute(fore + '-old', node.style.color);\n            node.style.color = node.getAttribute(fore);\n        }\n    }\n    uncolorize(node) {\n        const fore = (0, enrich_attr_js_1.addPrefix)('foreground') + '-old';\n        if (node.hasAttribute(fore)) {\n            node.style.color = node.getAttribute(fore);\n        }\n    }\n}\nexports.AbstractHighlighter = AbstractHighlighter;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CssHighlighter = void 0;\nconst abstract_highlighter_js_1 = require(\"./abstract_highlighter.js\");\nclass CssHighlighter extends abstract_highlighter_js_1.AbstractHighlighter {\n    constructor() {\n        super();\n        this.mactionName = 'mjx-maction';\n    }\n    highlightNode(node) {\n        const info = {\n            node: node,\n            background: node.style.backgroundColor,\n            foreground: node.style.color\n        };\n        if (!this.isHighlighted(node)) {\n            const color = this.colorString();\n            node.style.backgroundColor = color.background;\n            node.style.color = color.foreground;\n        }\n        return info;\n    }\n    unhighlightNode(info) {\n        info.node.style.backgroundColor = info.background;\n        info.node.style.color = info.foreground;\n    }\n}\nexports.CssHighlighter = CssHighlighter;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ChtmlHighlighter = void 0;\nconst css_highlighter_js_1 = require(\"./css_highlighter.js\");\nclass ChtmlHighlighter extends css_highlighter_js_1.CssHighlighter {\n    constructor() {\n        super();\n    }\n    isMactionNode(node) {\n        var _a;\n        return ((_a = node.tagName) === null || _a === void 0 ? void 0 : _a.toUpperCase()) === this.mactionName.toUpperCase();\n    }\n    getMactionNodes(node) {\n        return Array.from(node.getElementsByTagName(this.mactionName));\n    }\n}\nexports.ChtmlHighlighter = ChtmlHighlighter;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ContrastPicker = exports.ColorPicker = void 0;\nconst namedColors = {\n    red: { red: 255, green: 0, blue: 0 },\n    green: { red: 0, green: 255, blue: 0 },\n    blue: { red: 0, green: 0, blue: 255 },\n    yellow: { red: 255, green: 255, blue: 0 },\n    cyan: { red: 0, green: 255, blue: 255 },\n    magenta: { red: 255, green: 0, blue: 255 },\n    white: { red: 255, green: 255, blue: 255 },\n    black: { red: 0, green: 0, blue: 0 }\n};\nfunction getChannelColor(color, deflt) {\n    const col = color || { color: deflt };\n    let channel = Object.prototype.hasOwnProperty.call(col, 'color')\n        ? namedColors[col.color]\n        : col;\n    if (!channel) {\n        channel = namedColors[deflt];\n    }\n    channel.alpha = Object.prototype.hasOwnProperty.call(col, 'alpha')\n        ? col.alpha\n        : 1;\n    return normalizeColor(channel);\n}\nfunction normalizeColor(color) {\n    const normalizeCol = (col) => {\n        col = Math.max(col, 0);\n        col = Math.min(255, col);\n        return Math.round(col);\n    };\n    color.red = normalizeCol(color.red);\n    color.green = normalizeCol(color.green);\n    color.blue = normalizeCol(color.blue);\n    color.alpha = Math.max(color.alpha, 0);\n    color.alpha = Math.min(1, color.alpha);\n    return color;\n}\nclass ColorPicker {\n    static toHex(num) {\n        const hex = num.toString(16);\n        return hex.length === 1 ? '0' + hex : hex;\n    }\n    constructor(background, foreground) {\n        this.foreground = getChannelColor(foreground, ColorPicker.DEFAULT_FOREGROUND_);\n        this.background = getChannelColor(background, ColorPicker.DEFAULT_BACKGROUND_);\n    }\n    rgba() {\n        const rgba = function (col) {\n            return ('rgba(' +\n                col.red +\n                ',' +\n                col.green +\n                ',' +\n                col.blue +\n                ',' +\n                col.alpha +\n                ')');\n        };\n        return {\n            background: rgba(this.background),\n            foreground: rgba(this.foreground)\n        };\n    }\n    rgb() {\n        const rgb = function (col) {\n            return 'rgb(' + col.red + ',' + col.green + ',' + col.blue + ')';\n        };\n        return {\n            background: rgb(this.background),\n            alphaback: this.background.alpha.toString(),\n            foreground: rgb(this.foreground),\n            alphafore: this.foreground.alpha.toString()\n        };\n    }\n    hex() {\n        const hex = function (col) {\n            return ('#' +\n                ColorPicker.toHex(col.red) +\n                ColorPicker.toHex(col.green) +\n                ColorPicker.toHex(col.blue));\n        };\n        return {\n            background: hex(this.background),\n            alphaback: this.background.alpha.toString(),\n            foreground: hex(this.foreground),\n            alphafore: this.foreground.alpha.toString()\n        };\n    }\n}\nexports.ColorPicker = ColorPicker;\nColorPicker.DEFAULT_BACKGROUND_ = 'blue';\nColorPicker.DEFAULT_FOREGROUND_ = 'black';\nfunction hsl2rgb(h, s, l) {\n    s = s > 1 ? s / 100 : s;\n    l = l > 1 ? l / 100 : l;\n    const c = (1 - Math.abs(2 * l - 1)) * s;\n    const x = c * (1 - Math.abs(((h / 60) % 2) - 1));\n    const m = l - c / 2;\n    let r = 0, g = 0, b = 0;\n    if (0 <= h && h < 60) {\n        [r, g, b] = [c, x, 0];\n    }\n    else if (60 <= h && h < 120) {\n        [r, g, b] = [x, c, 0];\n    }\n    else if (120 <= h && h < 180) {\n        [r, g, b] = [0, c, x];\n    }\n    else if (180 <= h && h < 240) {\n        [r, g, b] = [0, x, c];\n    }\n    else if (240 <= h && h < 300) {\n        [r, g, b] = [x, 0, c];\n    }\n    else if (300 <= h && h < 360) {\n        [r, g, b] = [c, 0, x];\n    }\n    return { red: r + m, green: g + m, blue: b + m };\n}\nfunction rgb2RGB(rgb) {\n    return {\n        red: Math.round(255 * rgb.red),\n        green: Math.round(255 * rgb.green),\n        blue: Math.round(255 * rgb.blue)\n    };\n}\nfunction RGB2hex(col) {\n    return 'rgb(' + col.red + ',' + col.green + ',' + col.blue + ')';\n}\nclass ContrastPicker {\n    constructor() {\n        this.hue = 10;\n        this.sat = 100;\n        this.light = 50;\n        this.incr = 50;\n    }\n    generate() {\n        return RGB2hex(rgb2RGB(hsl2rgb(this.hue, this.sat, this.light)));\n    }\n    increment() {\n        this.hue = (this.hue + this.incr) % 360;\n    }\n}\nexports.ContrastPicker = ContrastPicker;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HtmlHighlighter = void 0;\nconst DomUtil = require(\"../common/dom_util.js\");\nconst abstract_highlighter_js_1 = require(\"./abstract_highlighter.js\");\nclass HtmlHighlighter extends abstract_highlighter_js_1.AbstractHighlighter {\n    constructor() {\n        super();\n        this.mactionName = 'maction';\n    }\n    highlightNode(node) {\n        const info = {\n            node: node,\n            foreground: node.style.color,\n            position: node.style.position\n        };\n        const color = this.color.rgb();\n        node.style.color = color.foreground;\n        node.style.position = 'relative';\n        const bbox = node.bbox;\n        if (bbox && bbox.w) {\n            const vpad = 0.05;\n            const hpad = 0;\n            const span = DomUtil.createElement('span');\n            const left = parseFloat(node.style.paddingLeft || '0');\n            span.style.backgroundColor = color.background;\n            span.style.opacity = color.alphaback.toString();\n            span.style.display = 'inline-block';\n            span.style.height = bbox.h + bbox.d + 2 * vpad + 'em';\n            span.style.verticalAlign = -bbox.d + 'em';\n            span.style.marginTop = span.style.marginBottom = -vpad + 'em';\n            span.style.width = bbox.w + 2 * hpad + 'em';\n            span.style.marginLeft = left - hpad + 'em';\n            span.style.marginRight = -bbox.w - hpad - left + 'em';\n            node.parentNode.insertBefore(span, node);\n            info.box = span;\n        }\n        return info;\n    }\n    unhighlightNode(info) {\n        const node = info.node;\n        node.style.color = info.foreground;\n        node.style.position = info.position;\n        if (info.box) {\n            info.box.parentNode.removeChild(info.box);\n        }\n    }\n}\nexports.HtmlHighlighter = HtmlHighlighter;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MmlCssHighlighter = void 0;\nconst css_highlighter_js_1 = require(\"./css_highlighter.js\");\nclass MmlCssHighlighter extends css_highlighter_js_1.CssHighlighter {\n    constructor() {\n        super();\n        this.mactionName = 'maction';\n    }\n    getMactionNodes(node) {\n        return Array.from(node.getElementsByTagName(this.mactionName));\n    }\n    isMactionNode(node) {\n        return node.tagName === this.mactionName;\n    }\n}\nexports.MmlCssHighlighter = MmlCssHighlighter;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MmlHighlighter = void 0;\nconst abstract_highlighter_js_1 = require(\"./abstract_highlighter.js\");\nclass MmlHighlighter extends abstract_highlighter_js_1.AbstractHighlighter {\n    constructor() {\n        super();\n        this.mactionName = 'maction';\n    }\n    highlightNode(node) {\n        let style = node.getAttribute('style');\n        style += ';background-color: ' + this.colorString().background;\n        style += ';color: ' + this.colorString().foreground;\n        node.setAttribute('style', style);\n        return { node: node };\n    }\n    unhighlightNode(info) {\n        let style = info.node.getAttribute('style');\n        style = style.replace(';background-color: ' + this.colorString().background, '');\n        style = style.replace(';color: ' + this.colorString().foreground, '');\n        info.node.setAttribute('style', style);\n    }\n    colorString() {\n        return this.color.rgba();\n    }\n    getMactionNodes(node) {\n        return Array.from(node.getElementsByTagName(this.mactionName));\n    }\n    isMactionNode(node) {\n        return node.tagName === this.mactionName;\n    }\n}\nexports.MmlHighlighter = MmlHighlighter;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SvgHighlighter = void 0;\nconst DomUtil = require(\"../common/dom_util.js\");\nconst abstract_highlighter_js_1 = require(\"./abstract_highlighter.js\");\nclass SvgHighlighter extends abstract_highlighter_js_1.AbstractHighlighter {\n    constructor() {\n        super();\n        this.mactionName = 'mjx-svg-maction';\n    }\n    highlightNode(node) {\n        let info;\n        if (this.isHighlighted(node)) {\n            info = {\n                node: node.previousSibling || node,\n                background: node.style.backgroundColor,\n                foreground: node.style.color\n            };\n            return info;\n        }\n        if (node.tagName === 'svg') {\n            const info = {\n                node: node,\n                background: node.style.backgroundColor,\n                foreground: node.style.color\n            };\n            node.style.backgroundColor = this.colorString().background;\n            node.style.color = this.colorString().foreground;\n            return info;\n        }\n        const rect = DomUtil.createElementNS('http://www.w3.org/2000/svg', 'rect');\n        const padding = 40;\n        let bbox;\n        if (node.nodeName === 'use') {\n            const g = DomUtil.createElementNS('http://www.w3.org/2000/svg', 'g');\n            node.parentNode.insertBefore(g, node);\n            g.appendChild(node);\n            bbox = g.getBBox();\n            g.parentNode.replaceChild(node, g);\n        }\n        else {\n            bbox = node.getBBox();\n        }\n        rect.setAttribute('x', (bbox.x - padding).toString());\n        rect.setAttribute('y', (bbox.y - padding).toString());\n        rect.setAttribute('width', (bbox.width + 2 * padding).toString());\n        rect.setAttribute('height', (bbox.height + 2 * padding).toString());\n        const transform = node.getAttribute('transform');\n        if (transform) {\n            rect.setAttribute('transform', transform);\n        }\n        rect.setAttribute('fill', this.colorString().background);\n        rect.setAttribute(this.ATTR, 'true');\n        node.parentNode.insertBefore(rect, node);\n        info = { node: rect, foreground: node.getAttribute('fill') };\n        node.setAttribute('fill', this.colorString().foreground);\n        return info;\n    }\n    setHighlighted(node) {\n        if (node.tagName === 'svg') {\n            super.setHighlighted(node);\n        }\n    }\n    unhighlightNode(info) {\n        if ('background' in info) {\n            info.node.style.backgroundColor = info.background;\n            info.node.style.color = info.foreground;\n            return;\n        }\n        info.foreground\n            ? info.node.nextSibling.setAttribute('fill', info.foreground)\n            : info.node.nextSibling.removeAttribute('fill');\n        info.node.parentNode.removeChild(info.node);\n    }\n    isMactionNode(node) {\n        let className = node.className || node.getAttribute('class');\n        if (!className) {\n            return false;\n        }\n        className =\n            className.baseVal !== undefined\n                ? className.baseVal\n                : className;\n        return className ? !!className.match(new RegExp(this.mactionName)) : false;\n    }\n}\nexports.SvgHighlighter = SvgHighlighter;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SvgV3Highlighter = void 0;\nconst DomUtil = require(\"../common/dom_util.js\");\nconst XpathUtil = require(\"../common/xpath_util.js\");\nconst color_picker_js_1 = require(\"./color_picker.js\");\nconst svg_highlighter_js_1 = require(\"./svg_highlighter.js\");\nclass SvgV3Highlighter extends svg_highlighter_js_1.SvgHighlighter {\n    constructor() {\n        super();\n        this.mactionName = 'maction';\n    }\n    highlightNode(node) {\n        let info;\n        if (this.isHighlighted(node)) {\n            info = {\n                node: node,\n                background: this.colorString().background,\n                foreground: this.colorString().foreground\n            };\n            return info;\n        }\n        if (node.tagName === 'svg' || node.tagName === 'MJX-CONTAINER') {\n            info = {\n                node: node,\n                background: node.style.backgroundColor,\n                foreground: node.style.color\n            };\n            node.style.backgroundColor = this.colorString().background;\n            node.style.color = this.colorString().foreground;\n            return info;\n        }\n        const rect = DomUtil.createElementNS('http://www.w3.org/2000/svg', 'rect');\n        rect.setAttribute('sre-highlighter-added', 'true');\n        const padding = 40;\n        const bbox = node.getBBox();\n        rect.setAttribute('x', (bbox.x - padding).toString());\n        rect.setAttribute('y', (bbox.y - padding).toString());\n        rect.setAttribute('width', (bbox.width + 2 * padding).toString());\n        rect.setAttribute('height', (bbox.height + 2 * padding).toString());\n        const transform = node.getAttribute('transform');\n        if (transform) {\n            rect.setAttribute('transform', transform);\n        }\n        rect.setAttribute('fill', this.colorString().background);\n        node.setAttribute(this.ATTR, 'true');\n        node.parentNode.insertBefore(rect, node);\n        info = { node: node, foreground: node.getAttribute('fill') };\n        if (node.nodeName === 'rect') {\n            const picker = new color_picker_js_1.ColorPicker({ alpha: 0, color: 'black' });\n            node.setAttribute('fill', picker.rgba().foreground);\n        }\n        else {\n            node.setAttribute('fill', this.colorString().foreground);\n        }\n        return info;\n    }\n    unhighlightNode(info) {\n        const previous = info.node.previousSibling;\n        if (previous && previous.hasAttribute('sre-highlighter-added')) {\n            info.foreground\n                ? info.node.setAttribute('fill', info.foreground)\n                : info.node.removeAttribute('fill');\n            info.node.parentNode.removeChild(previous);\n            return;\n        }\n        info.node.style.backgroundColor = info.background;\n        info.node.style.color = info.foreground;\n    }\n    isMactionNode(node) {\n        return node.getAttribute('data-mml-node') === this.mactionName;\n    }\n    getMactionNodes(node) {\n        return Array.from(XpathUtil.evalXPath(`.//*[@data-mml-node=\"${this.mactionName}\"]`, node));\n    }\n}\nexports.SvgV3Highlighter = SvgV3Highlighter;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.highlighter = highlighter;\nexports.update = update;\nexports.addEvents = addEvents;\nconst chtml_highlighter_js_1 = require(\"./chtml_highlighter.js\");\nconst color_picker_js_1 = require(\"./color_picker.js\");\nconst css_highlighter_js_1 = require(\"./css_highlighter.js\");\nconst html_highlighter_js_1 = require(\"./html_highlighter.js\");\nconst mml_css_highlighter_js_1 = require(\"./mml_css_highlighter.js\");\nconst mml_highlighter_js_1 = require(\"./mml_highlighter.js\");\nconst svg_highlighter_js_1 = require(\"./svg_highlighter.js\");\nconst svg_v3_highlighter_js_1 = require(\"./svg_v3_highlighter.js\");\nfunction highlighter(back, fore, rendererInfo) {\n    const colorPicker = new color_picker_js_1.ColorPicker(back, fore);\n    const renderer = rendererInfo.renderer === 'NativeMML' && rendererInfo.browser === 'Safari'\n        ? 'MML-CSS'\n        : rendererInfo.renderer === 'SVG' && rendererInfo.browser === 'v3'\n            ? 'SVG-V3'\n            : rendererInfo.renderer;\n    const highlighter = new (highlighterMapping[renderer] ||\n        highlighterMapping['NativeMML'])();\n    highlighter.setColor(colorPicker);\n    return highlighter;\n}\nfunction update(back, fore, highlighter) {\n    const colorPicker = new color_picker_js_1.ColorPicker(back, fore);\n    highlighter.setColor(colorPicker);\n}\nfunction addEvents(node, events, rendererInfo) {\n    const highlight = highlighterMapping[rendererInfo.renderer];\n    if (highlight) {\n        new highlight().addEvents(node, events);\n    }\n}\nconst highlighterMapping = {\n    SVG: svg_highlighter_js_1.SvgHighlighter,\n    'SVG-V3': svg_v3_highlighter_js_1.SvgV3Highlighter,\n    NativeMML: mml_highlighter_js_1.MmlHighlighter,\n    'HTML-CSS': html_highlighter_js_1.HtmlHighlighter,\n    'MML-CSS': mml_css_highlighter_js_1.MmlCssHighlighter,\n    CommonHTML: css_highlighter_js_1.CssHighlighter,\n    CHTML: chtml_highlighter_js_1.ChtmlHighlighter\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.splitAttribute = splitAttribute;\nexports.getAttribute = getAttribute;\nexports.getSemanticRoot = getSemanticRoot;\nexports.getBySemanticId = getBySemanticId;\nexports.getAllBySemanticId = getAllBySemanticId;\nconst DomUtil = require(\"../common/dom_util.js\");\nconst enrich_attr_js_1 = require(\"../enrich_mathml/enrich_attr.js\");\nfunction splitAttribute(attr) {\n    return !attr ? [] : attr.split(/,/);\n}\nfunction getAttribute(node, attr) {\n    return node.getAttribute(attr);\n}\nfunction getSemanticRoot(node) {\n    if (node.hasAttribute(enrich_attr_js_1.Attribute.TYPE) &&\n        !node.hasAttribute(enrich_attr_js_1.Attribute.PARENT)) {\n        return node;\n    }\n    const semanticNodes = DomUtil.querySelectorAllByAttr(node, enrich_attr_js_1.Attribute.TYPE);\n    for (let i = 0, semanticNode; (semanticNode = semanticNodes[i]); i++) {\n        if (!semanticNode.hasAttribute(enrich_attr_js_1.Attribute.PARENT)) {\n            return semanticNode;\n        }\n    }\n    return node;\n}\nfunction getBySemanticId(root, id) {\n    if (root.getAttribute(enrich_attr_js_1.Attribute.ID) === id) {\n        return root;\n    }\n    return DomUtil.querySelectorAllByAttrValue(root, enrich_attr_js_1.Attribute.ID, id)[0];\n}\nfunction getAllBySemanticId(root, id) {\n    if (root.getAttribute(enrich_attr_js_1.Attribute.ID) === id) {\n        return [root];\n    }\n    return DomUtil.querySelectorAllByAttrValue(root, enrich_attr_js_1.Attribute.ID, id);\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RebuildStree = void 0;\nconst enrich_attr_js_1 = require(\"../enrich_mathml/enrich_attr.js\");\nconst semantic_attr_js_1 = require(\"../semantic_tree/semantic_attr.js\");\nconst semantic_meaning_js_1 = require(\"../semantic_tree/semantic_meaning.js\");\nconst semantic_node_factory_js_1 = require(\"../semantic_tree/semantic_node_factory.js\");\nconst semantic_skeleton_js_1 = require(\"../semantic_tree/semantic_skeleton.js\");\nconst semantic_tree_js_1 = require(\"../semantic_tree/semantic_tree.js\");\nconst WalkerUtil = require(\"./walker_util.js\");\nclass RebuildStree {\n    static textContent(snode, node, ignore) {\n        if (!ignore && node.textContent) {\n            snode.textContent = node.textContent;\n            return;\n        }\n        const operator = WalkerUtil.splitAttribute(WalkerUtil.getAttribute(node, enrich_attr_js_1.Attribute.OPERATOR));\n        if (operator.length > 1) {\n            snode.textContent = operator[1];\n        }\n    }\n    static isPunctuated(collapsed) {\n        return (!semantic_skeleton_js_1.SemanticSkeleton.simpleCollapseStructure(collapsed) &&\n            collapsed[1] &&\n            semantic_skeleton_js_1.SemanticSkeleton.contentCollapseStructure(collapsed[1]));\n    }\n    constructor(mathml) {\n        this.mathml = mathml;\n        this.factory = new semantic_node_factory_js_1.SemanticNodeFactory();\n        this.nodeDict = {};\n        this.mmlRoot = WalkerUtil.getSemanticRoot(mathml);\n        this.streeRoot = this.assembleTree(this.mmlRoot);\n        this.stree = semantic_tree_js_1.SemanticTree.fromNode(this.streeRoot, this.mathml);\n        this.xml = this.stree.xml();\n    }\n    getTree() {\n        return this.stree;\n    }\n    assembleTree(node) {\n        const snode = this.makeNode(node);\n        const children = WalkerUtil.splitAttribute(WalkerUtil.getAttribute(node, enrich_attr_js_1.Attribute.CHILDREN));\n        const content = WalkerUtil.splitAttribute(WalkerUtil.getAttribute(node, enrich_attr_js_1.Attribute.CONTENT));\n        if (content.length === 0 && children.length === 0) {\n            RebuildStree.textContent(snode, node);\n            return snode;\n        }\n        if (content.length > 0) {\n            const fcontent = WalkerUtil.getBySemanticId(this.mathml, content[0]);\n            if (fcontent) {\n                RebuildStree.textContent(snode, fcontent, true);\n            }\n        }\n        snode.contentNodes = content.map((id) => this.setParent(id, snode));\n        snode.childNodes = children.map((id) => this.setParent(id, snode));\n        const collapsed = WalkerUtil.getAttribute(node, enrich_attr_js_1.Attribute.COLLAPSED);\n        return collapsed ? this.postProcess(snode, collapsed) : snode;\n    }\n    makeNode(node) {\n        const type = WalkerUtil.getAttribute(node, enrich_attr_js_1.Attribute.TYPE);\n        const role = WalkerUtil.getAttribute(node, enrich_attr_js_1.Attribute.ROLE);\n        const font = WalkerUtil.getAttribute(node, enrich_attr_js_1.Attribute.FONT);\n        const annotation = WalkerUtil.getAttribute(node, enrich_attr_js_1.Attribute.ANNOTATION) || '';\n        const attributes = WalkerUtil.getAttribute(node, enrich_attr_js_1.Attribute.ATTRIBUTES) || '';\n        const id = WalkerUtil.getAttribute(node, enrich_attr_js_1.Attribute.ID);\n        const embellished = WalkerUtil.getAttribute(node, enrich_attr_js_1.Attribute.EMBELLISHED);\n        const fencepointer = WalkerUtil.getAttribute(node, enrich_attr_js_1.Attribute.FENCEPOINTER);\n        const snode = this.createNode(parseInt(id, 10));\n        snode.type = type;\n        snode.role = role;\n        snode.font = font ? font : semantic_meaning_js_1.SemanticFont.UNKNOWN;\n        snode.parseAnnotation(annotation);\n        snode.parseAttributes(attributes);\n        if (fencepointer) {\n            snode.fencePointer = fencepointer;\n        }\n        if (embellished) {\n            snode.embellished = embellished;\n        }\n        return snode;\n    }\n    makePunctuation(id) {\n        const node = this.createNode(id);\n        node.updateContent(semantic_attr_js_1.NamedSymbol.invisibleComma);\n        node.role = semantic_meaning_js_1.SemanticRole.DUMMY;\n        return node;\n    }\n    makePunctuated(snode, collapsed, role) {\n        const punctuated = this.createNode(collapsed[0]);\n        punctuated.type = semantic_meaning_js_1.SemanticType.PUNCTUATED;\n        punctuated.embellished = snode.embellished;\n        punctuated.fencePointer = snode.fencePointer;\n        punctuated.role = role;\n        const cont = collapsed.splice(1, 1)[0].slice(1);\n        punctuated.contentNodes = cont.map(this.makePunctuation.bind(this));\n        this.collapsedChildren_(collapsed);\n    }\n    makeEmpty(snode, collapsed, role) {\n        const empty = this.createNode(collapsed);\n        empty.type = semantic_meaning_js_1.SemanticType.EMPTY;\n        empty.embellished = snode.embellished;\n        empty.fencePointer = snode.fencePointer;\n        empty.role = role;\n    }\n    makeIndex(snode, collapsed, role) {\n        if (RebuildStree.isPunctuated(collapsed)) {\n            this.makePunctuated(snode, collapsed, role);\n            collapsed = collapsed[0];\n            return;\n        }\n        if (semantic_skeleton_js_1.SemanticSkeleton.simpleCollapseStructure(collapsed) &&\n            !this.nodeDict[collapsed.toString()]) {\n            this.makeEmpty(snode, collapsed, role);\n        }\n    }\n    postProcess(snode, collapsed) {\n        const array = semantic_skeleton_js_1.SemanticSkeleton.fromString(collapsed).array;\n        if (snode.type === semantic_meaning_js_1.SemanticRole.SUBSUP) {\n            const subscript = this.createNode(array[1][0]);\n            subscript.type = semantic_meaning_js_1.SemanticType.SUBSCRIPT;\n            subscript.role = semantic_meaning_js_1.SemanticRole.SUBSUP;\n            snode.type = semantic_meaning_js_1.SemanticType.SUPERSCRIPT;\n            subscript.embellished = snode.embellished;\n            subscript.fencePointer = snode.fencePointer;\n            this.makeIndex(snode, array[1][2], semantic_meaning_js_1.SemanticRole.RIGHTSUB);\n            this.makeIndex(snode, array[2], semantic_meaning_js_1.SemanticRole.RIGHTSUPER);\n            this.collapsedChildren_(array);\n            return snode;\n        }\n        if (snode.type === semantic_meaning_js_1.SemanticType.SUBSCRIPT) {\n            this.makeIndex(snode, array[2], semantic_meaning_js_1.SemanticRole.RIGHTSUB);\n            this.collapsedChildren_(array);\n            return snode;\n        }\n        if (snode.type === semantic_meaning_js_1.SemanticType.SUPERSCRIPT) {\n            this.makeIndex(snode, array[2], semantic_meaning_js_1.SemanticRole.RIGHTSUPER);\n            this.collapsedChildren_(array);\n            return snode;\n        }\n        if (snode.type === semantic_meaning_js_1.SemanticType.TENSOR) {\n            this.makeIndex(snode, array[2], semantic_meaning_js_1.SemanticRole.LEFTSUB);\n            this.makeIndex(snode, array[3], semantic_meaning_js_1.SemanticRole.LEFTSUPER);\n            this.makeIndex(snode, array[4], semantic_meaning_js_1.SemanticRole.RIGHTSUB);\n            this.makeIndex(snode, array[5], semantic_meaning_js_1.SemanticRole.RIGHTSUPER);\n            this.collapsedChildren_(array);\n            return snode;\n        }\n        if (snode.type === semantic_meaning_js_1.SemanticType.PUNCTUATED) {\n            if (RebuildStree.isPunctuated(array)) {\n                const cont = array.splice(1, 1)[0].slice(1);\n                snode.contentNodes = cont.map(this.makePunctuation.bind(this));\n            }\n            return snode;\n        }\n        if (snode.type === semantic_meaning_js_1.SemanticRole.UNDEROVER) {\n            const score = this.createNode(array[1][0]);\n            if (snode.childNodes[1].role === semantic_meaning_js_1.SemanticRole.OVERACCENT) {\n                score.type = semantic_meaning_js_1.SemanticType.OVERSCORE;\n                snode.type = semantic_meaning_js_1.SemanticType.UNDERSCORE;\n            }\n            else {\n                score.type = semantic_meaning_js_1.SemanticType.UNDERSCORE;\n                snode.type = semantic_meaning_js_1.SemanticType.OVERSCORE;\n            }\n            score.role = semantic_meaning_js_1.SemanticRole.UNDEROVER;\n            score.embellished = snode.embellished;\n            score.fencePointer = snode.fencePointer;\n            this.collapsedChildren_(array);\n            return snode;\n        }\n        return snode;\n    }\n    createNode(id) {\n        const node = this.factory.makeNode(id);\n        this.nodeDict[id.toString()] = node;\n        return node;\n    }\n    collapsedChildren_(collapsed) {\n        const recurseCollapsed = (coll) => {\n            const parent = this.nodeDict[coll[0]];\n            parent.childNodes = [];\n            for (let j = 1, l = coll.length; j < l; j++) {\n                const id = coll[j];\n                parent.childNodes.push(semantic_skeleton_js_1.SemanticSkeleton.simpleCollapseStructure(id)\n                    ? this.nodeDict[id]\n                    : recurseCollapsed(id));\n            }\n            return parent;\n        };\n        recurseCollapsed(collapsed);\n    }\n    setParent(id, snode) {\n        const mml = WalkerUtil.getBySemanticId(this.mathml, id);\n        const sn = this.assembleTree(mml);\n        sn.parent = snode;\n        return sn;\n    }\n}\nexports.RebuildStree = RebuildStree;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.computeSpeech = computeSpeech;\nexports.computeMarkup = computeMarkup;\nexports.recomputeMarkup = recomputeMarkup;\nexports.addSpeech = addSpeech;\nexports.addModality = addModality;\nexports.addPrefix = addPrefix;\nexports.retrievePrefix = retrievePrefix;\nexports.connectMactions = connectMactions;\nexports.connectAllMactions = connectAllMactions;\nexports.retrieveSummary = retrieveSummary;\nconst AuralRendering = require(\"../audio/aural_rendering.js\");\nconst DomUtil = require(\"../common/dom_util.js\");\nconst XpathUtil = require(\"../common/xpath_util.js\");\nconst enrich_attr_js_1 = require(\"../enrich_mathml/enrich_attr.js\");\nconst speech_rule_engine_js_1 = require(\"../rule_engine/speech_rule_engine.js\");\nconst semantic_tree_js_1 = require(\"../semantic_tree/semantic_tree.js\");\nconst WalkerUtil = require(\"../walker/walker_util.js\");\nfunction computeSpeech(xml) {\n    return speech_rule_engine_js_1.SpeechRuleEngine.getInstance().evaluateNode(xml);\n}\nfunction recomputeSpeech(semantic) {\n    const tree = semantic_tree_js_1.SemanticTree.fromNode(semantic);\n    return computeSpeech(tree.xml());\n}\nfunction computeMarkup(tree) {\n    const descrs = computeSpeech(tree);\n    return AuralRendering.markup(descrs);\n}\nfunction recomputeMarkup(semantic) {\n    const descrs = recomputeSpeech(semantic);\n    return AuralRendering.markup(descrs);\n}\nfunction addSpeech(mml, semantic, snode) {\n    const sxml = DomUtil.querySelectorAllByAttrValue(snode, 'id', semantic.id.toString())[0];\n    const speech = sxml\n        ? AuralRendering.markup(computeSpeech(sxml))\n        : recomputeMarkup(semantic);\n    mml.setAttribute(enrich_attr_js_1.Attribute.SPEECH, speech);\n}\nfunction addModality(mml, semantic, modality) {\n    const markup = recomputeMarkup(semantic);\n    mml.setAttribute(modality, markup);\n}\nfunction addPrefix(mml, semantic) {\n    const speech = retrievePrefix(semantic);\n    if (speech) {\n        mml.setAttribute(enrich_attr_js_1.Attribute.PREFIX, speech);\n    }\n}\nfunction retrievePrefix(semantic) {\n    const descrs = computePrefix(semantic);\n    return AuralRendering.markup(descrs);\n}\nfunction computePrefix(semantic) {\n    const tree = semantic_tree_js_1.SemanticTree.fromRoot(semantic);\n    const nodes = XpathUtil.evalXPath('.//*[@id=\"' + semantic.id + '\"]', tree.xml());\n    let node = nodes[0];\n    if (nodes.length > 1) {\n        node = nodeAtPosition(semantic, nodes) || node;\n    }\n    return node\n        ? speech_rule_engine_js_1.SpeechRuleEngine.getInstance().runInSetting({\n            modality: 'prefix',\n            domain: 'default',\n            style: 'default',\n            strict: true,\n            speech: true\n        }, function () {\n            return speech_rule_engine_js_1.SpeechRuleEngine.getInstance().evaluateNode(node);\n        })\n        : [];\n}\nfunction nodeAtPosition(semantic, nodes) {\n    const node = nodes[0];\n    if (!semantic.parent) {\n        return node;\n    }\n    const path = [];\n    while (semantic) {\n        path.push(semantic.id);\n        semantic = semantic.parent;\n    }\n    const pathEquals = function (xml, path) {\n        while (path.length &&\n            path.shift().toString() === xml.getAttribute('id') &&\n            xml.parentNode &&\n            xml.parentNode.parentNode) {\n            xml = xml.parentNode.parentNode;\n        }\n        return !path.length;\n    };\n    for (let i = 0, xml; (xml = nodes[i]); i++) {\n        if (pathEquals(xml, path.slice())) {\n            return xml;\n        }\n    }\n    return node;\n}\nfunction connectMactions(node, mml, stree) {\n    const mactions = DomUtil.querySelectorAll(mml, 'maction');\n    for (let i = 0, maction; (maction = mactions[i]); i++) {\n        const aid = maction.getAttribute('id');\n        const span = DomUtil.querySelectorAllByAttrValue(node, 'id', aid)[0];\n        if (!span) {\n            continue;\n        }\n        const lchild = maction.childNodes[1];\n        const mid = lchild.getAttribute(enrich_attr_js_1.Attribute.ID);\n        let cspan = WalkerUtil.getBySemanticId(node, mid);\n        if (cspan && cspan.getAttribute(enrich_attr_js_1.Attribute.TYPE) !== 'dummy') {\n            continue;\n        }\n        cspan = span.childNodes[0];\n        if (cspan.getAttribute('sre-highlighter-added')) {\n            continue;\n        }\n        const pid = lchild.getAttribute(enrich_attr_js_1.Attribute.PARENT);\n        if (pid) {\n            cspan.setAttribute(enrich_attr_js_1.Attribute.PARENT, pid);\n        }\n        cspan.setAttribute(enrich_attr_js_1.Attribute.TYPE, 'dummy');\n        cspan.setAttribute(enrich_attr_js_1.Attribute.ID, mid);\n        cspan.setAttribute('role', 'treeitem');\n        cspan.setAttribute('aria-level', lchild.getAttribute('aria-level'));\n        const cst = DomUtil.querySelectorAllByAttrValue(stree, 'id', mid)[0];\n        cst.setAttribute('alternative', mid);\n    }\n}\nfunction connectAllMactions(mml, stree) {\n    const mactions = DomUtil.querySelectorAll(mml, 'maction');\n    for (let i = 0, maction; (maction = mactions[i]); i++) {\n        const lchild = maction.childNodes[1];\n        const mid = lchild.getAttribute(enrich_attr_js_1.Attribute.ID);\n        const cst = DomUtil.querySelectorAllByAttrValue(stree, 'id', mid)[0];\n        cst.setAttribute('alternative', mid);\n    }\n}\nfunction retrieveSummary(node, options = {}) {\n    const descrs = computeSummary(node, options);\n    return AuralRendering.markup(descrs);\n}\nfunction computeSummary(node, options = {}) {\n    const preOption = options.locale ? { locale: options.locale } : {};\n    return node\n        ? speech_rule_engine_js_1.SpeechRuleEngine.getInstance().runInSetting(Object.assign(preOption, {\n            modality: 'summary',\n            strict: false,\n            speech: true\n        }), function () {\n            return speech_rule_engine_js_1.SpeechRuleEngine.getInstance().evaluateNode(node);\n        })\n        : [];\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ClearspeakPreferences = void 0;\nconst engine_js_1 = require(\"../common/engine.js\");\nconst EngineConst = require(\"../common/engine_const.js\");\nconst dynamic_cstr_js_1 = require(\"../rule_engine/dynamic_cstr.js\");\nconst dynamic_cstr_js_2 = require(\"../rule_engine/dynamic_cstr.js\");\nconst MathCompoundStore = require(\"../rule_engine/math_compound_store.js\");\nconst speech_rule_engine_js_1 = require(\"../rule_engine/speech_rule_engine.js\");\nconst semantic_meaning_js_1 = require(\"../semantic_tree/semantic_meaning.js\");\nclass ClearspeakPreferences extends dynamic_cstr_js_1.DynamicCstr {\n    static comparator() {\n        return new Comparator(engine_js_1.Engine.getInstance().dynamicCstr, dynamic_cstr_js_2.DynamicProperties.createProp([dynamic_cstr_js_1.DynamicCstr.DEFAULT_VALUES[dynamic_cstr_js_2.Axis.LOCALE]], [dynamic_cstr_js_1.DynamicCstr.DEFAULT_VALUES[dynamic_cstr_js_2.Axis.MODALITY]], [dynamic_cstr_js_1.DynamicCstr.DEFAULT_VALUES[dynamic_cstr_js_2.Axis.DOMAIN]], [dynamic_cstr_js_1.DynamicCstr.DEFAULT_VALUES[dynamic_cstr_js_2.Axis.STYLE]]));\n    }\n    static fromPreference(pref) {\n        const pairs = pref.split(':');\n        const preferences = {};\n        const properties = PREFERENCES.getProperties();\n        const validKeys = Object.keys(properties);\n        for (let i = 0, key; (key = pairs[i]); i++) {\n            const pair = key.split('_');\n            if (validKeys.indexOf(pair[0]) === -1) {\n                continue;\n            }\n            const value = pair[1];\n            if (value &&\n                value !== ClearspeakPreferences.AUTO &&\n                properties[pair[0]].indexOf(value) !== -1) {\n                preferences[pair[0]] = pair[1];\n            }\n        }\n        return preferences;\n    }\n    static toPreference(pref) {\n        const keys = Object.keys(pref);\n        const str = [];\n        for (let i = 0; i < keys.length; i++) {\n            str.push(keys[i] + '_' + pref[keys[i]]);\n        }\n        return str.length ? str.join(':') : dynamic_cstr_js_1.DynamicCstr.DEFAULT_VALUE;\n    }\n    static getLocalePreferences(opt_dynamic) {\n        const dynamic = opt_dynamic ||\n            MathCompoundStore.enumerate(speech_rule_engine_js_1.SpeechRuleEngine.getInstance().enumerate());\n        return ClearspeakPreferences.getLocalePreferences_(dynamic);\n    }\n    static currentPreference() {\n        return EngineConst.DOMAIN_TO_STYLES['clearspeak'];\n    }\n    static relevantPreferences(node) {\n        const roles = SEMANTIC_MAPPING_[node.type];\n        if (!roles) {\n            return 'ImpliedTimes';\n        }\n        return roles[node.role] || roles[''] || 'ImpliedTimes';\n    }\n    static findPreference(prefs, kind) {\n        if (prefs === 'default') {\n            return ClearspeakPreferences.AUTO;\n        }\n        const parsed = ClearspeakPreferences.fromPreference(prefs);\n        return parsed[kind] || ClearspeakPreferences.AUTO;\n    }\n    static addPreference(prefs, kind, value) {\n        if (prefs === 'default') {\n            return kind + '_' + value;\n        }\n        const parsed = ClearspeakPreferences.fromPreference(prefs);\n        parsed[kind] = value;\n        return ClearspeakPreferences.toPreference(parsed);\n    }\n    static getLocalePreferences_(dynamic) {\n        const result = {};\n        for (const locale of Object.keys(dynamic)) {\n            if (!dynamic[locale]['speech'] ||\n                !dynamic[locale]['speech']['clearspeak']) {\n                continue;\n            }\n            const locPrefs = Object.keys(dynamic[locale]['speech']['clearspeak']);\n            if (locPrefs.length < 3)\n                continue;\n            const prefs = (result[locale] = {});\n            for (const axis in PREFERENCES.getProperties()) {\n                const allSty = PREFERENCES.getProperties()[axis];\n                const values = [axis + '_Auto'];\n                if (allSty) {\n                    for (const sty of allSty) {\n                        if (locPrefs.indexOf(axis + '_' + sty) !== -1) {\n                            values.push(axis + '_' + sty);\n                        }\n                    }\n                }\n                prefs[axis] = values;\n            }\n        }\n        return result;\n    }\n    constructor(cstr, preference) {\n        super(cstr);\n        this.preference = preference;\n    }\n    equal(cstr) {\n        const top = super.equal(cstr);\n        if (!top) {\n            return false;\n        }\n        const keys = Object.keys(this.preference);\n        const preference = cstr.preference;\n        if (keys.length !== Object.keys(preference).length) {\n            return false;\n        }\n        for (let i = 0, key; (key = keys[i]); i++) {\n            if (this.preference[key] !== preference[key]) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\nexports.ClearspeakPreferences = ClearspeakPreferences;\nClearspeakPreferences.AUTO = 'Auto';\nconst PREFERENCES = new dynamic_cstr_js_2.DynamicProperties({\n    AbsoluteValue: ['Auto', 'AbsEnd', 'Cardinality', 'Determinant'],\n    Bar: ['Auto', 'Conjugate'],\n    Caps: ['Auto', 'SayCaps'],\n    CombinationPermutation: ['Auto', 'ChoosePermute'],\n    Currency: ['Auto', 'Position', 'Prefix'],\n    Ellipses: ['Auto', 'AndSoOn'],\n    Enclosed: ['Auto', 'EndEnclose'],\n    Exponent: [\n        'Auto',\n        'AfterPower',\n        'Ordinal',\n        'OrdinalPower',\n        'Exponent'\n    ],\n    Fraction: [\n        'Auto',\n        'EndFrac',\n        'FracOver',\n        'General',\n        'GeneralEndFrac',\n        'Ordinal',\n        'Over',\n        'OverEndFrac',\n        'Per'\n    ],\n    Functions: [\n        'Auto',\n        'None',\n        'Reciprocal'\n    ],\n    ImpliedTimes: ['Auto', 'MoreImpliedTimes', 'None'],\n    Log: ['Auto', 'LnAsNaturalLog'],\n    Matrix: [\n        'Auto',\n        'Combinatoric',\n        'EndMatrix',\n        'EndVector',\n        'SilentColNum',\n        'SpeakColNum',\n        'Vector'\n    ],\n    MultiLineLabel: [\n        'Auto',\n        'Case',\n        'Constraint',\n        'Equation',\n        'Line',\n        'None',\n        'Row',\n        'Step'\n    ],\n    MultiLineOverview: ['Auto', 'None'],\n    MultiLinePausesBetweenColumns: ['Auto', 'Long', 'Short'],\n    MultsymbolDot: ['Auto', 'Dot'],\n    MultsymbolX: ['Auto', 'By', 'Cross'],\n    Paren: [\n        'Auto',\n        'CoordPoint',\n        'Interval',\n        'Silent',\n        'Speak',\n        'SpeakNestingLevel'\n    ],\n    Prime: ['Auto', 'Angle', 'Length'],\n    Roots: ['Auto', 'PosNegSqRoot', 'PosNegSqRootEnd', 'RootEnd'],\n    SetMemberSymbol: ['Auto', 'Belongs', 'Element', 'Member', 'In'],\n    Sets: ['Auto', 'SilentBracket', 'woAll'],\n    TriangleSymbol: ['Auto', 'Delta'],\n    Trig: [\n        'Auto',\n        'ArcTrig',\n        'TrigInverse',\n        'Reciprocal'\n    ],\n    VerticalLine: ['Auto', 'Divides', 'Given', 'SuchThat']\n});\nclass Comparator extends dynamic_cstr_js_2.DefaultComparator {\n    constructor(cstr, props) {\n        super(cstr, props);\n        this.preference =\n            cstr instanceof ClearspeakPreferences ? cstr.preference : {};\n    }\n    match(cstr) {\n        if (!(cstr instanceof ClearspeakPreferences)) {\n            return super.match(cstr);\n        }\n        if (cstr.getComponents()[dynamic_cstr_js_2.Axis.STYLE] === 'default') {\n            return true;\n        }\n        const keys = Object.keys(cstr.preference);\n        for (let i = 0, key; (key = keys[i]); i++) {\n            if (this.preference[key] !== cstr.preference[key]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    compare(cstr1, cstr2) {\n        const top = super.compare(cstr1, cstr2);\n        if (top !== 0) {\n            return top;\n        }\n        const pref1 = cstr1 instanceof ClearspeakPreferences;\n        const pref2 = cstr2 instanceof ClearspeakPreferences;\n        if (!pref1 && pref2) {\n            return 1;\n        }\n        if (pref1 && !pref2) {\n            return -1;\n        }\n        if (!pref1 && !pref2) {\n            return 0;\n        }\n        const length1 = Object.keys(cstr1.preference).length;\n        const length2 = Object.keys(cstr2.preference).length;\n        return length1 > length2 ? -1 : length1 < length2 ? 1 : 0;\n    }\n}\nclass Parser extends dynamic_cstr_js_2.DynamicCstrParser {\n    constructor() {\n        super([dynamic_cstr_js_2.Axis.LOCALE, dynamic_cstr_js_2.Axis.MODALITY, dynamic_cstr_js_2.Axis.DOMAIN, dynamic_cstr_js_2.Axis.STYLE]);\n    }\n    parse(str) {\n        const initial = super.parse(str);\n        let style = initial.getValue(dynamic_cstr_js_2.Axis.STYLE);\n        const locale = initial.getValue(dynamic_cstr_js_2.Axis.LOCALE);\n        const modality = initial.getValue(dynamic_cstr_js_2.Axis.MODALITY);\n        let pref = {};\n        if (style !== dynamic_cstr_js_1.DynamicCstr.DEFAULT_VALUE) {\n            pref = this.fromPreference(style);\n            style = this.toPreference(pref);\n        }\n        return new ClearspeakPreferences({\n            locale: locale,\n            modality: modality,\n            domain: 'clearspeak',\n            style: style\n        }, pref);\n    }\n    fromPreference(pref) {\n        return ClearspeakPreferences.fromPreference(pref);\n    }\n    toPreference(pref) {\n        return ClearspeakPreferences.toPreference(pref);\n    }\n}\nconst REVERSE_MAPPING = [\n    [\n        'AbsoluteValue',\n        semantic_meaning_js_1.SemanticType.FENCED,\n        semantic_meaning_js_1.SemanticRole.NEUTRAL,\n        semantic_meaning_js_1.SemanticRole.METRIC\n    ],\n    ['Bar', semantic_meaning_js_1.SemanticType.OVERSCORE, semantic_meaning_js_1.SemanticRole.OVERACCENT],\n    ['Caps', semantic_meaning_js_1.SemanticType.IDENTIFIER, semantic_meaning_js_1.SemanticRole.LATINLETTER],\n    ['CombinationPermutation', semantic_meaning_js_1.SemanticType.APPL, semantic_meaning_js_1.SemanticRole.UNKNOWN],\n    ['Ellipses', semantic_meaning_js_1.SemanticType.PUNCTUATION, semantic_meaning_js_1.SemanticRole.ELLIPSIS],\n    ['Exponent', semantic_meaning_js_1.SemanticType.SUPERSCRIPT, ''],\n    ['Fraction', semantic_meaning_js_1.SemanticType.FRACTION, ''],\n    ['Functions', semantic_meaning_js_1.SemanticType.APPL, semantic_meaning_js_1.SemanticRole.SIMPLEFUNC],\n    ['ImpliedTimes', semantic_meaning_js_1.SemanticType.OPERATOR, semantic_meaning_js_1.SemanticRole.IMPLICIT],\n    ['Log', semantic_meaning_js_1.SemanticType.APPL, semantic_meaning_js_1.SemanticRole.PREFIXFUNC],\n    ['Matrix', semantic_meaning_js_1.SemanticType.MATRIX, ''],\n    ['Matrix', semantic_meaning_js_1.SemanticType.VECTOR, ''],\n    ['MultiLineLabel', semantic_meaning_js_1.SemanticType.MULTILINE, semantic_meaning_js_1.SemanticRole.LABEL],\n    ['MultiLineOverview', semantic_meaning_js_1.SemanticType.MULTILINE, semantic_meaning_js_1.SemanticRole.TABLE],\n    ['MultiLinePausesBetweenColumns', semantic_meaning_js_1.SemanticType.MULTILINE, semantic_meaning_js_1.SemanticRole.TABLE],\n    ['MultiLineLabel', semantic_meaning_js_1.SemanticType.TABLE, semantic_meaning_js_1.SemanticRole.LABEL],\n    ['MultiLineOverview', semantic_meaning_js_1.SemanticType.TABLE, semantic_meaning_js_1.SemanticRole.TABLE],\n    ['MultiLinePausesBetweenColumns', semantic_meaning_js_1.SemanticType.TABLE, semantic_meaning_js_1.SemanticRole.TABLE],\n    ['MultiLineLabel', semantic_meaning_js_1.SemanticType.CASES, semantic_meaning_js_1.SemanticRole.LABEL],\n    ['MultiLineOverview', semantic_meaning_js_1.SemanticType.CASES, semantic_meaning_js_1.SemanticRole.TABLE],\n    ['MultiLinePausesBetweenColumns', semantic_meaning_js_1.SemanticType.CASES, semantic_meaning_js_1.SemanticRole.TABLE],\n    ['MultsymbolDot', semantic_meaning_js_1.SemanticType.OPERATOR, semantic_meaning_js_1.SemanticRole.MULTIPLICATION],\n    ['MultsymbolX', semantic_meaning_js_1.SemanticType.OPERATOR, semantic_meaning_js_1.SemanticRole.MULTIPLICATION],\n    ['Paren', semantic_meaning_js_1.SemanticType.FENCED, semantic_meaning_js_1.SemanticRole.LEFTRIGHT],\n    ['Prime', semantic_meaning_js_1.SemanticType.SUPERSCRIPT, semantic_meaning_js_1.SemanticRole.PRIME],\n    ['Roots', semantic_meaning_js_1.SemanticType.ROOT, ''],\n    ['Roots', semantic_meaning_js_1.SemanticType.SQRT, ''],\n    ['SetMemberSymbol', semantic_meaning_js_1.SemanticType.RELATION, semantic_meaning_js_1.SemanticRole.ELEMENT],\n    ['Sets', semantic_meaning_js_1.SemanticType.FENCED, semantic_meaning_js_1.SemanticRole.SETEXT],\n    ['TriangleSymbol', semantic_meaning_js_1.SemanticType.IDENTIFIER, semantic_meaning_js_1.SemanticRole.GREEKLETTER],\n    ['Trig', semantic_meaning_js_1.SemanticType.APPL, semantic_meaning_js_1.SemanticRole.PREFIXFUNC],\n    ['VerticalLine', semantic_meaning_js_1.SemanticType.PUNCTUATED, semantic_meaning_js_1.SemanticRole.VBAR]\n];\nconst SEMANTIC_MAPPING_ = (function () {\n    const result = {};\n    for (let i = 0, triple; (triple = REVERSE_MAPPING[i]); i++) {\n        const pref = triple[0];\n        let role = result[triple[1]];\n        if (!role) {\n            role = {};\n            result[triple[1]] = role;\n        }\n        role[triple[2]] = pref;\n    }\n    return result;\n})();\nengine_js_1.Engine.getInstance().comparators['clearspeak'] =\n    ClearspeakPreferences.comparator;\nengine_js_1.Engine.getInstance().parsers['clearspeak'] = new Parser();\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbstractSpeechGenerator = void 0;\nconst engine_setup_js_1 = require(\"../common/engine_setup.js\");\nconst EnrichAttr = require(\"../enrich_mathml/enrich_attr.js\");\nconst rebuild_stree_js_1 = require(\"../walker/rebuild_stree.js\");\nconst SpeechGeneratorUtil = require(\"./speech_generator_util.js\");\nconst EngineConst = require(\"../common/engine_const.js\");\nconst locale_js_1 = require(\"../l10n/locale.js\");\nconst clearspeak_preferences_js_1 = require(\"../speech_rules/clearspeak_preferences.js\");\nclass AbstractSpeechGenerator {\n    constructor() {\n        this.modality = EnrichAttr.addPrefix('speech');\n        this.rebuilt_ = null;\n        this.options_ = {};\n    }\n    getRebuilt() {\n        return this.rebuilt_;\n    }\n    setRebuilt(rebuilt) {\n        this.rebuilt_ = rebuilt;\n    }\n    computeRebuilt(xml, force = false) {\n        if (!this.rebuilt_ || force) {\n            this.rebuilt_ = new rebuild_stree_js_1.RebuildStree(xml);\n        }\n        return this.rebuilt_;\n    }\n    setOptions(options) {\n        this.options_ = options || {};\n        this.modality = EnrichAttr.addPrefix(this.options_.modality || 'speech');\n    }\n    setOption(key, value) {\n        const options = this.getOptions();\n        options[key] = value;\n        this.setOptions(options);\n    }\n    getOptions() {\n        return this.options_;\n    }\n    generateSpeech(_node, xml) {\n        if (!this.rebuilt_) {\n            this.rebuilt_ = new rebuild_stree_js_1.RebuildStree(xml);\n        }\n        (0, engine_setup_js_1.setup)(this.options_);\n        return SpeechGeneratorUtil.computeMarkup(this.getRebuilt().xml);\n    }\n    nextRules() {\n        const options = this.getOptions();\n        if (options.modality !== 'speech') {\n            return;\n        }\n        const prefs = clearspeak_preferences_js_1.ClearspeakPreferences.getLocalePreferences();\n        if (!prefs[options.locale]) {\n            return;\n        }\n        EngineConst.DOMAIN_TO_STYLES[options.domain] = options.style;\n        options.domain =\n            options.domain === 'mathspeak' ? 'clearspeak' : 'mathspeak';\n        options.style = EngineConst.DOMAIN_TO_STYLES[options.domain];\n        this.setOptions(options);\n    }\n    nextStyle(id) {\n        this.setOption('style', this.nextStyle_(this.getRebuilt().nodeDict[id]));\n    }\n    nextStyle_(node) {\n        const { modality: modality, domain: domain, style: style } = this.getOptions();\n        if (modality !== 'speech') {\n            return style;\n        }\n        if (domain === 'mathspeak') {\n            const styles = ['default', 'brief', 'sbrief'];\n            const index = styles.indexOf(style);\n            if (index === -1) {\n                return style;\n            }\n            return index >= styles.length - 1 ? styles[0] : styles[index + 1];\n        }\n        if (domain === 'clearspeak') {\n            const prefs = clearspeak_preferences_js_1.ClearspeakPreferences.getLocalePreferences();\n            const loc = prefs['en'];\n            if (!loc) {\n                return 'default';\n            }\n            const smart = clearspeak_preferences_js_1.ClearspeakPreferences.relevantPreferences(node);\n            const current = clearspeak_preferences_js_1.ClearspeakPreferences.findPreference(style, smart);\n            const options = loc[smart].map(function (x) {\n                return x.split('_')[1];\n            });\n            const index = options.indexOf(current);\n            if (index === -1) {\n                return style;\n            }\n            const next = index >= options.length - 1 ? options[0] : options[index + 1];\n            const result = clearspeak_preferences_js_1.ClearspeakPreferences.addPreference(style, smart, next);\n            return result;\n        }\n        return style;\n    }\n    getLevel(depth) {\n        return locale_js_1.LOCALE.MESSAGES.navigate.LEVEL + ' ' + depth;\n    }\n    getActionable(actionable) {\n        return actionable\n            ? actionable < 0\n                ? locale_js_1.LOCALE.MESSAGES.navigate.EXPANDABLE\n                : locale_js_1.LOCALE.MESSAGES.navigate.COLLAPSIBLE\n            : '';\n    }\n}\nexports.AbstractSpeechGenerator = AbstractSpeechGenerator;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AdhocSpeechGenerator = void 0;\nconst abstract_speech_generator_js_1 = require(\"./abstract_speech_generator.js\");\nclass AdhocSpeechGenerator extends abstract_speech_generator_js_1.AbstractSpeechGenerator {\n    getSpeech(node, xml) {\n        const speech = this.generateSpeech(node, xml);\n        node.setAttribute(this.modality, speech);\n        return speech;\n    }\n}\nexports.AdhocSpeechGenerator = AdhocSpeechGenerator;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ColorGenerator = void 0;\nconst DomUtil = require(\"../common/dom_util.js\");\nconst enrich_attr_js_1 = require(\"../enrich_mathml/enrich_attr.js\");\nconst color_picker_js_1 = require(\"../highlighter/color_picker.js\");\nconst rebuild_stree_js_1 = require(\"../walker/rebuild_stree.js\");\nconst WalkerUtil = require(\"../walker/walker_util.js\");\nconst abstract_speech_generator_js_1 = require(\"./abstract_speech_generator.js\");\nclass ColorGenerator extends abstract_speech_generator_js_1.AbstractSpeechGenerator {\n    constructor() {\n        super(...arguments);\n        this.modality = (0, enrich_attr_js_1.addPrefix)('foreground');\n        this.contrast = new color_picker_js_1.ContrastPicker();\n    }\n    static visitStree_(tree, leaves, ignore) {\n        if (!tree.childNodes.length) {\n            if (!ignore[tree.id]) {\n                leaves.push(tree.id);\n            }\n            return;\n        }\n        if (tree.contentNodes.length) {\n            if (tree.type === 'punctuated') {\n                tree.contentNodes.forEach((x) => (ignore[x.id] = true));\n            }\n            if (tree.role !== 'implicit') {\n                leaves.push(tree.contentNodes.map((x) => x.id));\n            }\n        }\n        if (tree.childNodes.length) {\n            if (tree.role === 'implicit') {\n                const factors = [];\n                let rest = [];\n                for (const child of tree.childNodes) {\n                    const tt = [];\n                    ColorGenerator.visitStree_(child, tt, ignore);\n                    if (tt.length <= 2) {\n                        factors.push(tt.shift());\n                    }\n                    rest = rest.concat(tt);\n                }\n                leaves.push(factors);\n                rest.forEach((x) => leaves.push(x));\n                return;\n            }\n            tree.childNodes.forEach((x) => ColorGenerator.visitStree_(x, leaves, ignore));\n        }\n    }\n    getSpeech(node, _xml) {\n        return WalkerUtil.getAttribute(node, this.modality);\n    }\n    generateSpeech(node, xml) {\n        if (!this.getRebuilt()) {\n            this.setRebuilt(new rebuild_stree_js_1.RebuildStree(DomUtil.parseInput(xml)));\n        }\n        this.colorLeaves_(node);\n        return WalkerUtil.getAttribute(node, this.modality);\n    }\n    colorLeaves_(node) {\n        const leaves = [];\n        ColorGenerator.visitStree_(this.getRebuilt().streeRoot, leaves, {});\n        for (const id of leaves) {\n            const color = this.contrast.generate();\n            let success = false;\n            if (Array.isArray(id)) {\n                success = id\n                    .map((x) => this.colorLeave_(node, x, color))\n                    .reduce((x, y) => x || y, false);\n            }\n            else {\n                success = this.colorLeave_(node, id.toString(), color);\n            }\n            if (success) {\n                this.contrast.increment();\n            }\n        }\n    }\n    colorLeave_(node, id, color) {\n        const aux = WalkerUtil.getBySemanticId(node, id);\n        if (aux) {\n            aux.setAttribute(this.modality, color);\n            return true;\n        }\n        return false;\n    }\n}\nexports.ColorGenerator = ColorGenerator;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DirectSpeechGenerator = void 0;\nconst WalkerUtil = require(\"../walker/walker_util.js\");\nconst abstract_speech_generator_js_1 = require(\"./abstract_speech_generator.js\");\nclass DirectSpeechGenerator extends abstract_speech_generator_js_1.AbstractSpeechGenerator {\n    getSpeech(node, _xml) {\n        return WalkerUtil.getAttribute(node, this.modality);\n    }\n}\nexports.DirectSpeechGenerator = DirectSpeechGenerator;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DummySpeechGenerator = void 0;\nconst abstract_speech_generator_js_1 = require(\"./abstract_speech_generator.js\");\nclass DummySpeechGenerator extends abstract_speech_generator_js_1.AbstractSpeechGenerator {\n    getSpeech(_node, _xml) {\n        return '';\n    }\n}\nexports.DummySpeechGenerator = DummySpeechGenerator;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TreeSpeechGenerator = void 0;\nconst enrich_attr_js_1 = require(\"../enrich_mathml/enrich_attr.js\");\nconst WalkerUtil = require(\"../walker/walker_util.js\");\nconst abstract_speech_generator_js_1 = require(\"./abstract_speech_generator.js\");\nconst SpeechGeneratorUtil = require(\"./speech_generator_util.js\");\nclass TreeSpeechGenerator extends abstract_speech_generator_js_1.AbstractSpeechGenerator {\n    getSpeech(node, xml, root = null) {\n        if (this.getRebuilt()) {\n            SpeechGeneratorUtil.connectMactions(node, xml, this.getRebuilt().xml);\n        }\n        const speech = this.generateSpeech(node, xml);\n        const nodes = this.getRebuilt().nodeDict;\n        for (const [key, snode] of Object.entries(nodes)) {\n            const innerMml = WalkerUtil.getBySemanticId(xml, key);\n            const innerNode = WalkerUtil.getBySemanticId(node, key) ||\n                (root && WalkerUtil.getBySemanticId(root, key));\n            if (!innerMml || !innerNode) {\n                continue;\n            }\n            if (!this.modality || this.modality === enrich_attr_js_1.Attribute.SPEECH) {\n                SpeechGeneratorUtil.addSpeech(innerNode, snode, this.getRebuilt().xml);\n            }\n            else {\n                SpeechGeneratorUtil.addModality(innerNode, snode, this.modality);\n            }\n            if (this.modality === enrich_attr_js_1.Attribute.SPEECH) {\n                SpeechGeneratorUtil.addPrefix(innerNode, snode);\n            }\n        }\n        return speech;\n    }\n}\nexports.TreeSpeechGenerator = TreeSpeechGenerator;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NodeSpeechGenerator = void 0;\nconst WalkerUtil = require(\"../walker/walker_util.js\");\nconst tree_speech_generator_js_1 = require(\"./tree_speech_generator.js\");\nclass NodeSpeechGenerator extends tree_speech_generator_js_1.TreeSpeechGenerator {\n    getSpeech(node, _xml) {\n        super.getSpeech(node, _xml);\n        return WalkerUtil.getAttribute(node, this.modality);\n    }\n}\nexports.NodeSpeechGenerator = NodeSpeechGenerator;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SummarySpeechGenerator = void 0;\nconst abstract_speech_generator_js_1 = require(\"./abstract_speech_generator.js\");\nconst SpeechGeneratorUtil = require(\"./speech_generator_util.js\");\nconst engine_setup_js_1 = require(\"../common/engine_setup.js\");\nconst enrich_attr_js_1 = require(\"../enrich_mathml/enrich_attr.js\");\nclass SummarySpeechGenerator extends abstract_speech_generator_js_1.AbstractSpeechGenerator {\n    getSpeech(node, _xml) {\n        (0, engine_setup_js_1.setup)(this.getOptions());\n        const id = node.getAttribute(enrich_attr_js_1.Attribute.ID);\n        const snode = this.getRebuilt().streeRoot.querySelectorAll((x) => x.id.toString() === id)[0];\n        SpeechGeneratorUtil.addModality(node, snode, this.modality);\n        const speech = node.getAttribute(enrich_attr_js_1.Attribute.SUMMARY);\n        return speech;\n    }\n}\nexports.SummarySpeechGenerator = SummarySpeechGenerator;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.generator = generator;\nconst adhoc_speech_generator_js_1 = require(\"./adhoc_speech_generator.js\");\nconst color_generator_js_1 = require(\"./color_generator.js\");\nconst direct_speech_generator_js_1 = require(\"./direct_speech_generator.js\");\nconst dummy_speech_generator_js_1 = require(\"./dummy_speech_generator.js\");\nconst node_speech_generator_js_1 = require(\"./node_speech_generator.js\");\nconst summary_speech_generator_js_1 = require(\"./summary_speech_generator.js\");\nconst tree_speech_generator_js_1 = require(\"./tree_speech_generator.js\");\nfunction generator(type) {\n    const constructor = generatorMapping[type] || generatorMapping.Direct;\n    return constructor();\n}\nconst generatorMapping = {\n    Adhoc: () => new adhoc_speech_generator_js_1.AdhocSpeechGenerator(),\n    Color: () => new color_generator_js_1.ColorGenerator(),\n    Direct: () => new direct_speech_generator_js_1.DirectSpeechGenerator(),\n    Dummy: () => new dummy_speech_generator_js_1.DummySpeechGenerator(),\n    Node: () => new node_speech_generator_js_1.NodeSpeechGenerator(),\n    Summary: () => new summary_speech_generator_js_1.SummarySpeechGenerator(),\n    Tree: () => new tree_speech_generator_js_1.TreeSpeechGenerator()\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Focus = void 0;\nconst WalkerUtil = require(\"./walker_util.js\");\nclass Focus {\n    static factory(primaryId, nodeIds, rebuilt, dom) {\n        const idFunc = (id) => WalkerUtil.getBySemanticId(dom, id);\n        const dict = rebuilt.nodeDict;\n        const node = idFunc(primaryId);\n        const nodes = nodeIds.map(idFunc);\n        const snodes = nodeIds.map(function (primaryId) {\n            return dict[primaryId];\n        });\n        const focus = new Focus(snodes, dict[primaryId]);\n        focus.domNodes = nodes;\n        focus.domPrimary_ = node;\n        focus.allNodes = Focus.generateAllVisibleNodes_(nodeIds, nodes, dict, dom);\n        return focus;\n    }\n    static generateAllVisibleNodes_(ids, nodes, dict, domNode) {\n        let result = [];\n        for (let i = 0, l = ids.length; i < l; i++) {\n            if (nodes[i]) {\n                const allNodes = Focus.getAllVisibleNodes([ids[i]], domNode);\n                if (allNodes.length) {\n                    result = result.concat(allNodes);\n                }\n                else {\n                    result.push(nodes[i]);\n                }\n                continue;\n            }\n            const virtual = dict[ids[i]];\n            if (!virtual) {\n                continue;\n            }\n            const childIds = virtual.childNodes.map((x) => x.id.toString());\n            const children = Focus.getAllVisibleNodes(childIds, domNode);\n            result = result.concat(Focus.generateAllVisibleNodes_(childIds, children, dict, domNode));\n        }\n        return result;\n    }\n    static getAllVisibleNodes(ids, domNode) {\n        let result = [];\n        for (const id of ids) {\n            result = result.concat(WalkerUtil.getAllBySemanticId(domNode, id));\n        }\n        return result;\n    }\n    constructor(nodes, primary) {\n        this.nodes = nodes;\n        this.primary = primary;\n        this.domNodes = [];\n        this.domPrimary_ = null;\n        this.allNodes = [];\n    }\n    getSemanticPrimary() {\n        return this.primary;\n    }\n    getSemanticNodes() {\n        return this.nodes;\n    }\n    getNodes() {\n        return this.allNodes;\n    }\n    getDomNodes() {\n        return this.domNodes;\n    }\n    getDomPrimary() {\n        return this.domPrimary_;\n    }\n    toString() {\n        return 'Primary:' + this.domPrimary_ + ' Nodes:' + this.domNodes;\n    }\n    clone() {\n        const focus = new Focus(this.nodes, this.primary);\n        focus.domNodes = this.domNodes;\n        focus.domPrimary_ = this.domPrimary_;\n        focus.allNodes = this.allNodes;\n        return focus;\n    }\n}\nexports.Focus = Focus;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalkerState = exports.WalkerMoves = void 0;\nvar WalkerMoves;\n(function (WalkerMoves) {\n    WalkerMoves[\"UP\"] = \"up\";\n    WalkerMoves[\"DOWN\"] = \"down\";\n    WalkerMoves[\"LEFT\"] = \"left\";\n    WalkerMoves[\"RIGHT\"] = \"right\";\n    WalkerMoves[\"REPEAT\"] = \"repeat\";\n    WalkerMoves[\"DEPTH\"] = \"depth\";\n    WalkerMoves[\"ENTER\"] = \"enter\";\n    WalkerMoves[\"EXPAND\"] = \"expand\";\n    WalkerMoves[\"HOME\"] = \"home\";\n    WalkerMoves[\"SUMMARY\"] = \"summary\";\n    WalkerMoves[\"DETAIL\"] = \"detail\";\n    WalkerMoves[\"ROW\"] = \"row\";\n    WalkerMoves[\"CELL\"] = \"cell\";\n})(WalkerMoves || (exports.WalkerMoves = WalkerMoves = {}));\nclass WalkerState {\n    static resetState(id) {\n        delete WalkerState.STATE[id];\n    }\n    static setState(id, value) {\n        WalkerState.STATE[id] = value;\n    }\n    static getState(id) {\n        return WalkerState.STATE[id];\n    }\n}\nexports.WalkerState = WalkerState;\nWalkerState.STATE = {};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbstractWalker = void 0;\nconst auditory_description_js_1 = require(\"../audio/auditory_description.js\");\nconst AuralRendering = require(\"../audio/aural_rendering.js\");\nconst DomUtil = require(\"../common/dom_util.js\");\nconst engine_setup_js_1 = require(\"../common/engine_setup.js\");\nconst event_util_js_1 = require(\"../common/event_util.js\");\nconst enrich_attr_js_1 = require(\"../enrich_mathml/enrich_attr.js\");\nconst locale_js_1 = require(\"../l10n/locale.js\");\nconst grammar_js_1 = require(\"../rule_engine/grammar.js\");\nconst semantic_skeleton_js_1 = require(\"../semantic_tree/semantic_skeleton.js\");\nconst SpeechGeneratorFactory = require(\"../speech_generator/speech_generator_factory.js\");\nconst SpeechGeneratorUtil = require(\"../speech_generator/speech_generator_util.js\");\nconst focus_js_1 = require(\"./focus.js\");\nconst rebuild_stree_js_1 = require(\"./rebuild_stree.js\");\nconst walker_js_1 = require(\"./walker.js\");\nconst WalkerUtil = require(\"./walker_util.js\");\nconst XpathUtil = require(\"../common/xpath_util.js\");\nclass AbstractWalker {\n    constructor(node, generator, highlighter, xml) {\n        this.node = node;\n        this.generator = generator;\n        this.highlighter = highlighter;\n        this.modifier = false;\n        this.keyMapping = new Map([\n            [event_util_js_1.KeyCode.UP, this.up.bind(this)],\n            [event_util_js_1.KeyCode.DOWN, this.down.bind(this)],\n            [event_util_js_1.KeyCode.RIGHT, this.right.bind(this)],\n            [event_util_js_1.KeyCode.LEFT, this.left.bind(this)],\n            [event_util_js_1.KeyCode.TAB, this.repeat.bind(this)],\n            [event_util_js_1.KeyCode.DASH, this.expand.bind(this)],\n            [event_util_js_1.KeyCode.SPACE, this.depth.bind(this)],\n            [event_util_js_1.KeyCode.HOME, this.home.bind(this)],\n            [event_util_js_1.KeyCode.X, this.summary.bind(this)],\n            [event_util_js_1.KeyCode.Z, this.detail.bind(this)],\n            [event_util_js_1.KeyCode.V, this.virtualize.bind(this)],\n            [event_util_js_1.KeyCode.P, this.previous.bind(this)],\n            [event_util_js_1.KeyCode.U, this.undo.bind(this)],\n            [event_util_js_1.KeyCode.LESS, this.previousRules.bind(this)],\n            [event_util_js_1.KeyCode.GREATER, this.nextRules.bind(this)]\n        ]);\n        this.cursors = [];\n        this.xml_ = null;\n        this.rebuilt_ = null;\n        this.focus_ = null;\n        this.active_ = false;\n        if (this.node.id) {\n            this.id = this.node.id;\n        }\n        else if (this.node.hasAttribute(AbstractWalker.SRE_ID_ATTR)) {\n            this.id = this.node.getAttribute(AbstractWalker.SRE_ID_ATTR);\n        }\n        else {\n            this.node.setAttribute(AbstractWalker.SRE_ID_ATTR, AbstractWalker.ID_COUNTER.toString());\n            this.id = AbstractWalker.ID_COUNTER++;\n        }\n        this.rootNode = WalkerUtil.getSemanticRoot(node);\n        this.rootId = this.rootNode.getAttribute(enrich_attr_js_1.Attribute.ID);\n        this.xmlString_ = xml;\n        this.moved = walker_js_1.WalkerMoves.ENTER;\n    }\n    getXml() {\n        if (!this.xml_) {\n            this.xml_ = DomUtil.parseInput(this.xmlString_);\n        }\n        return this.xml_;\n    }\n    getRebuilt() {\n        if (!this.rebuilt_) {\n            this.rebuildStree();\n        }\n        return this.rebuilt_;\n    }\n    isActive() {\n        return this.active_;\n    }\n    activate() {\n        if (this.isActive()) {\n            return;\n        }\n        this.toggleActive_();\n    }\n    deactivate() {\n        if (!this.isActive()) {\n            return;\n        }\n        walker_js_1.WalkerState.setState(this.id, this.primaryId());\n        this.toggleActive_();\n    }\n    getFocus(update = false) {\n        if (this.rootId === null) {\n            this.getRebuilt();\n        }\n        if (!this.focus_) {\n            this.focus_ = this.singletonFocus(this.rootId);\n        }\n        if (update) {\n            this.updateFocus();\n        }\n        return this.focus_;\n    }\n    setFocus(focus) {\n        this.focus_ = focus;\n    }\n    getDepth() {\n        return this.levels.depth() - 1;\n    }\n    isSpeech() {\n        return this.generator.modality === enrich_attr_js_1.Attribute.SPEECH;\n    }\n    focusDomNodes() {\n        return this.getFocus().getDomNodes();\n    }\n    focusSemanticNodes() {\n        return this.getFocus().getSemanticNodes();\n    }\n    speech() {\n        const nodes = this.focusDomNodes();\n        if (!nodes.length) {\n            return '';\n        }\n        const special = this.specialMove();\n        if (special !== null) {\n            return special;\n        }\n        switch (this.moved) {\n            case walker_js_1.WalkerMoves.DEPTH:\n                return this.depth_();\n            case walker_js_1.WalkerMoves.SUMMARY:\n                return this.summary_();\n            case walker_js_1.WalkerMoves.DETAIL:\n                return this.detail_();\n            default: {\n                const speech = [];\n                const snodes = this.focusSemanticNodes();\n                for (let i = 0, l = nodes.length; i < l; i++) {\n                    const node = nodes[i];\n                    const snode = snodes[i];\n                    speech.push(node\n                        ? this.generator.getSpeech(node, this.getXml(), this.node)\n                        : SpeechGeneratorUtil.recomputeMarkup(snode));\n                }\n                return this.mergePrefix_(speech);\n            }\n        }\n    }\n    move(key) {\n        const direction = this.keyMapping.get(key);\n        if (!direction) {\n            return null;\n        }\n        const focus = direction();\n        if (!focus || focus === this.getFocus()) {\n            return false;\n        }\n        this.setFocus(focus);\n        if (this.moved === walker_js_1.WalkerMoves.HOME) {\n            this.levels = this.initLevels();\n        }\n        return true;\n    }\n    up() {\n        this.moved = walker_js_1.WalkerMoves.UP;\n        return this.getFocus();\n    }\n    down() {\n        this.moved = walker_js_1.WalkerMoves.DOWN;\n        return this.getFocus();\n    }\n    left() {\n        this.moved = walker_js_1.WalkerMoves.LEFT;\n        return this.getFocus();\n    }\n    right() {\n        this.moved = walker_js_1.WalkerMoves.RIGHT;\n        return this.getFocus();\n    }\n    repeat() {\n        this.moved = walker_js_1.WalkerMoves.REPEAT;\n        return this.getFocus().clone();\n    }\n    depth() {\n        this.moved = this.isSpeech() ? walker_js_1.WalkerMoves.DEPTH : walker_js_1.WalkerMoves.REPEAT;\n        return this.getFocus().clone();\n    }\n    home() {\n        this.moved = walker_js_1.WalkerMoves.HOME;\n        const focus = this.singletonFocus(this.rootId);\n        return focus;\n    }\n    getBySemanticId(id) {\n        return WalkerUtil.getBySemanticId(this.node, id);\n    }\n    primaryId() {\n        return this.getFocus().getSemanticPrimary().id.toString();\n    }\n    expand() {\n        const primary = this.getFocus().getDomPrimary();\n        const expandable = this.actionable_(primary);\n        if (!expandable) {\n            return this.getFocus();\n        }\n        this.moved = walker_js_1.WalkerMoves.EXPAND;\n        expandable.dispatchEvent(new Event('click'));\n        return this.getFocus().clone();\n    }\n    expandable(node) {\n        const parent = !!this.actionable_(node);\n        return parent && node.childNodes.length === 0;\n    }\n    collapsible(node) {\n        const parent = !!this.actionable_(node);\n        return parent && node.childNodes.length > 0;\n    }\n    restoreState() {\n        if (!this.highlighter) {\n            return;\n        }\n        const state = walker_js_1.WalkerState.getState(this.id);\n        if (!state) {\n            return;\n        }\n        let node = this.getRebuilt().nodeDict[state];\n        const path = [];\n        while (node) {\n            path.push(node.id);\n            node = node.parent;\n        }\n        path.pop();\n        while (path.length > 0) {\n            this.down();\n            const id = path.pop();\n            const focus = this.findFocusOnLevel(id);\n            if (!focus) {\n                break;\n            }\n            this.setFocus(focus);\n        }\n        this.moved = walker_js_1.WalkerMoves.ENTER;\n    }\n    updateFocus() {\n        this.setFocus(focus_js_1.Focus.factory(this.getFocus().getSemanticPrimary().id.toString(), this.getFocus()\n            .getSemanticNodes()\n            .map((x) => x.id.toString()), this.getRebuilt(), this.node));\n    }\n    rebuildStree() {\n        this.rebuilt_ = new rebuild_stree_js_1.RebuildStree(this.getXml());\n        this.rootId = this.rebuilt_.stree.root.id.toString();\n        this.generator.setRebuilt(this.rebuilt_);\n        this.skeleton = semantic_skeleton_js_1.SemanticSkeleton.fromTree(this.rebuilt_.stree);\n        this.skeleton.populate();\n        this.focus_ = this.singletonFocus(this.rootId);\n        this.levels = this.initLevels();\n        SpeechGeneratorUtil.connectMactions(this.node, this.getXml(), this.rebuilt_.xml);\n    }\n    previousLevel() {\n        const dnode = this.getFocus().getDomPrimary();\n        return dnode\n            ? WalkerUtil.getAttribute(dnode, enrich_attr_js_1.Attribute.PARENT)\n            : this.getFocus().getSemanticPrimary().parent.id.toString();\n    }\n    nextLevel() {\n        const dnode = this.getFocus().getDomPrimary();\n        let children;\n        let content;\n        if (dnode) {\n            children = WalkerUtil.splitAttribute(WalkerUtil.getAttribute(dnode, enrich_attr_js_1.Attribute.CHILDREN));\n            content = WalkerUtil.splitAttribute(WalkerUtil.getAttribute(dnode, enrich_attr_js_1.Attribute.CONTENT));\n            const type = WalkerUtil.getAttribute(dnode, enrich_attr_js_1.Attribute.TYPE);\n            const role = WalkerUtil.getAttribute(dnode, enrich_attr_js_1.Attribute.ROLE);\n            return this.combineContentChildren(type, role, content, children);\n        }\n        const toIds = (x) => x.id.toString();\n        const snode = this.getRebuilt().nodeDict[this.primaryId()];\n        children = snode.childNodes.map(toIds);\n        content = snode.contentNodes.map(toIds);\n        if (children.length === 0) {\n            return [];\n        }\n        return this.combineContentChildren(snode.type, snode.role, content, children);\n    }\n    singletonFocus(id) {\n        this.getRebuilt();\n        const ids = this.retrieveVisuals(id);\n        return this.focusFromId(id, ids);\n    }\n    retrieveVisuals(id) {\n        if (!this.skeleton) {\n            return [id];\n        }\n        const num = parseInt(id, 10);\n        const semStree = this.skeleton.subtreeNodes(num);\n        if (!semStree.length) {\n            return [id];\n        }\n        semStree.unshift(num);\n        const mmlStree = {};\n        const result = [];\n        XpathUtil.updateEvaluator(this.getXml());\n        for (const child of semStree) {\n            if (mmlStree[child]) {\n                continue;\n            }\n            result.push(child.toString());\n            mmlStree[child] = true;\n            this.subtreeIds(child, mmlStree);\n        }\n        return result;\n    }\n    subtreeIds(id, nodes) {\n        const xmlRoot = XpathUtil.evalXPath(`//*[@data-semantic-id=\"${id}\"]`, this.getXml());\n        const xpath = XpathUtil.evalXPath('*//@data-semantic-id', xmlRoot[0]);\n        xpath.forEach((x) => (nodes[parseInt(x.textContent, 10)] = true));\n    }\n    focusFromId(id, ids) {\n        return focus_js_1.Focus.factory(id, ids, this.getRebuilt(), this.node);\n    }\n    summary() {\n        this.moved = this.isSpeech() ? walker_js_1.WalkerMoves.SUMMARY : walker_js_1.WalkerMoves.REPEAT;\n        return this.getFocus().clone();\n    }\n    detail() {\n        this.moved = this.isSpeech() ? walker_js_1.WalkerMoves.DETAIL : walker_js_1.WalkerMoves.REPEAT;\n        return this.getFocus().clone();\n    }\n    specialMove() {\n        return null;\n    }\n    virtualize(opt_undo) {\n        this.cursors.push({\n            focus: this.getFocus(),\n            levels: this.levels,\n            undo: opt_undo || !this.cursors.length\n        });\n        this.levels = this.levels.clone();\n        return this.getFocus().clone();\n    }\n    previous() {\n        const previous = this.cursors.pop();\n        if (!previous) {\n            return this.getFocus();\n        }\n        this.levels = previous.levels;\n        return previous.focus;\n    }\n    undo() {\n        let previous;\n        do {\n            previous = this.cursors.pop();\n        } while (previous && !previous.undo);\n        if (!previous) {\n            return this.getFocus();\n        }\n        this.levels = previous.levels;\n        return previous.focus;\n    }\n    update(options) {\n        (0, engine_setup_js_1.setup)(options).then(() => SpeechGeneratorFactory.generator('Tree').getSpeech(this.node, this.getXml()));\n    }\n    nextRules() {\n        this.generator.nextRules();\n        const options = this.generator.getOptions();\n        if (options.modality !== 'speech') {\n            return this.getFocus();\n        }\n        this.update(options);\n        this.moved = walker_js_1.WalkerMoves.REPEAT;\n        return this.getFocus().clone();\n    }\n    previousRules() {\n        var _a;\n        this.generator.nextStyle((_a = this.getFocus().getSemanticPrimary()) === null || _a === void 0 ? void 0 : _a.id.toString());\n        const options = this.generator.getOptions();\n        if (options.modality !== 'speech') {\n            return this.getFocus();\n        }\n        this.update(options);\n        this.moved = walker_js_1.WalkerMoves.REPEAT;\n        return this.getFocus().clone();\n    }\n    refocus() {\n        let focus = this.getFocus();\n        let last;\n        while (!focus.getNodes().length) {\n            last = this.levels.peek();\n            const up = this.up();\n            if (!up) {\n                break;\n            }\n            this.setFocus(up);\n            focus = this.getFocus(true);\n        }\n        this.levels.push(last);\n        this.setFocus(focus);\n    }\n    toggleActive_() {\n        this.active_ = !this.active_;\n    }\n    mergePrefix_(speech, pre = []) {\n        const prefix = this.isSpeech() ? this.prefix_() : '';\n        if (prefix) {\n            speech.unshift(prefix);\n        }\n        const postfix = this.isSpeech() ? this.postfix_() : '';\n        if (postfix) {\n            speech.push(postfix);\n        }\n        return AuralRendering.finalize(AuralRendering.merge(pre.concat(speech)));\n    }\n    prefix_() {\n        const nodes = this.getFocus().getDomNodes();\n        const snodes = this.getFocus().getSemanticNodes();\n        return nodes[0]\n            ? WalkerUtil.getAttribute(nodes[0], enrich_attr_js_1.Attribute.PREFIX)\n            : SpeechGeneratorUtil.retrievePrefix(snodes[0]);\n    }\n    postfix_() {\n        const nodes = this.getFocus().getDomNodes();\n        return nodes[0]\n            ? WalkerUtil.getAttribute(nodes[0], enrich_attr_js_1.Attribute.POSTFIX)\n            : '';\n    }\n    depth_() {\n        const oldDepth = grammar_js_1.Grammar.getInstance().getParameter('depth');\n        grammar_js_1.Grammar.getInstance().setParameter('depth', true);\n        const primary = this.getFocus().getDomPrimary();\n        const expand = this.expandable(primary)\n            ? locale_js_1.LOCALE.MESSAGES.navigate.EXPANDABLE\n            : this.collapsible(primary)\n                ? locale_js_1.LOCALE.MESSAGES.navigate.COLLAPSIBLE\n                : '';\n        const level = locale_js_1.LOCALE.MESSAGES.navigate.LEVEL + ' ' + this.getDepth();\n        const snodes = this.getFocus().getSemanticNodes();\n        const prefix = SpeechGeneratorUtil.retrievePrefix(snodes[0]);\n        const audio = [\n            new auditory_description_js_1.AuditoryDescription({ text: level, personality: {} }),\n            new auditory_description_js_1.AuditoryDescription({ text: prefix, personality: {} }),\n            new auditory_description_js_1.AuditoryDescription({ text: expand, personality: {} })\n        ];\n        grammar_js_1.Grammar.getInstance().setParameter('depth', oldDepth);\n        return AuralRendering.finalize(AuralRendering.markup(audio));\n    }\n    actionable_(node) {\n        const parent = node === null || node === void 0 ? void 0 : node.parentNode;\n        return parent && this.highlighter.isMactionNode(parent) ? parent : null;\n    }\n    summary_() {\n        const sprimary = this.getFocus().getSemanticPrimary();\n        const sid = sprimary.id.toString();\n        const snode = this.getRebuilt().xml.getAttribute('id') === sid\n            ? this.getRebuilt().xml\n            : DomUtil.querySelectorAllByAttrValue(this.getRebuilt().xml, 'id', sid)[0];\n        const summary = SpeechGeneratorUtil.retrieveSummary(snode);\n        const speech = this.mergePrefix_([summary]);\n        return speech;\n    }\n    detail_() {\n        const sprimary = this.getFocus().getSemanticPrimary();\n        const sid = sprimary.id.toString();\n        const snode = this.getRebuilt().xml.getAttribute('id') === sid\n            ? this.getRebuilt().xml\n            : DomUtil.querySelectorAllByAttrValue(this.getRebuilt().xml, 'id', sid)[0];\n        const oldAlt = snode.getAttribute('alternative');\n        snode.removeAttribute('alternative');\n        const detail = SpeechGeneratorUtil.computeMarkup(snode);\n        const speech = this.mergePrefix_([detail]);\n        snode.setAttribute('alternative', oldAlt);\n        return speech;\n    }\n}\nexports.AbstractWalker = AbstractWalker;\nAbstractWalker.ID_COUNTER = 0;\nAbstractWalker.SRE_ID_ATTR = 'sre-explorer-id';\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DummyWalker = void 0;\nconst abstract_walker_js_1 = require(\"./abstract_walker.js\");\nclass DummyWalker extends abstract_walker_js_1.AbstractWalker {\n    up() {\n        return null;\n    }\n    down() {\n        return null;\n    }\n    left() {\n        return null;\n    }\n    right() {\n        return null;\n    }\n    repeat() {\n        return null;\n    }\n    depth() {\n        return null;\n    }\n    home() {\n        return null;\n    }\n    getDepth() {\n        return 0;\n    }\n    initLevels() {\n        return null;\n    }\n    combineContentChildren(_type, _role, _content, _children) {\n        return [];\n    }\n    findFocusOnLevel(_id) {\n        return null;\n    }\n}\nexports.DummyWalker = DummyWalker;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Levels = void 0;\nclass Levels {\n    constructor() {\n        this.level_ = [];\n    }\n    push(level) {\n        this.level_.push(level);\n    }\n    pop() {\n        return this.level_.pop();\n    }\n    peek() {\n        return this.level_[this.level_.length - 1] || null;\n    }\n    indexOf(element) {\n        const last = this.peek();\n        return !last ? null : last.indexOf(element);\n    }\n    find(pred) {\n        const last = this.peek();\n        if (!last) {\n            return null;\n        }\n        for (let i = 0, l = last.length; i < l; i++) {\n            if (pred(last[i])) {\n                return last[i];\n            }\n        }\n        return null;\n    }\n    get(index) {\n        const last = this.peek();\n        return !last || index < 0 || index >= last.length ? null : last[index];\n    }\n    depth() {\n        return this.level_.length;\n    }\n    clone() {\n        const levels = new Levels();\n        levels.level_ = this.level_.slice(0);\n        return levels;\n    }\n    toString() {\n        let str = '';\n        for (let i = 0, level; (level = this.level_[i]); i++) {\n            str +=\n                '\\n' +\n                    level.map(function (x) {\n                        return x.toString();\n                    });\n        }\n        return str;\n    }\n}\nexports.Levels = Levels;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SemanticWalker = void 0;\nconst semantic_meaning_js_1 = require(\"../semantic_tree/semantic_meaning.js\");\nconst abstract_walker_js_1 = require(\"./abstract_walker.js\");\nconst levels_js_1 = require(\"./levels.js\");\nclass SemanticWalker extends abstract_walker_js_1.AbstractWalker {\n    constructor(node, generator, highlighter, xml) {\n        super(node, generator, highlighter, xml);\n        this.node = node;\n        this.generator = generator;\n        this.highlighter = highlighter;\n        this.levels = null;\n        this.restoreState();\n    }\n    initLevels() {\n        const levels = new levels_js_1.Levels();\n        levels.push([this.getFocus()]);\n        return levels;\n    }\n    up() {\n        super.up();\n        const parent = this.previousLevel();\n        if (!parent) {\n            return null;\n        }\n        this.levels.pop();\n        const found = this.levels.find(function (focus) {\n            return focus.getSemanticNodes().some(function (node) {\n                return node.id.toString() === parent;\n            });\n        });\n        return found;\n    }\n    down() {\n        super.down();\n        const children = this.nextLevel();\n        if (children.length === 0) {\n            return null;\n        }\n        this.levels.push(children);\n        return children[0];\n    }\n    combineContentChildren(type, role, content, children) {\n        switch (type) {\n            case semantic_meaning_js_1.SemanticType.RELSEQ:\n            case semantic_meaning_js_1.SemanticType.INFIXOP:\n            case semantic_meaning_js_1.SemanticType.MULTIREL:\n                return this.makePairList(children, content);\n            case semantic_meaning_js_1.SemanticType.PREFIXOP:\n                return [this.focusFromId(children[0], content.concat(children))];\n            case semantic_meaning_js_1.SemanticType.POSTFIXOP:\n                return [this.focusFromId(children[0], children.concat(content))];\n            case semantic_meaning_js_1.SemanticType.MATRIX:\n            case semantic_meaning_js_1.SemanticType.VECTOR:\n            case semantic_meaning_js_1.SemanticType.FENCED:\n                return [\n                    this.focusFromId(children[0], [content[0], children[0], content[1]])\n                ];\n            case semantic_meaning_js_1.SemanticType.CASES:\n                return [this.focusFromId(children[0], [content[0], children[0]])];\n            case semantic_meaning_js_1.SemanticType.PUNCTUATED:\n                if (role === semantic_meaning_js_1.SemanticRole.TEXT) {\n                    return children.map(this.singletonFocus.bind(this));\n                }\n                if (children.length === content.length) {\n                    return content.map(this.singletonFocus.bind(this));\n                }\n                return this.combinePunctuations(children, content, [], []);\n            case semantic_meaning_js_1.SemanticType.APPL:\n                return [\n                    this.focusFromId(children[0], [children[0], content[0]]),\n                    this.singletonFocus(children[1])\n                ];\n            case semantic_meaning_js_1.SemanticType.ROOT:\n                return [\n                    this.singletonFocus(children[0]),\n                    this.singletonFocus(children[1])\n                ];\n            default:\n                return children.map(this.singletonFocus.bind(this));\n        }\n    }\n    combinePunctuations(children, content, prepunct, acc) {\n        if (children.length === 0) {\n            return acc;\n        }\n        const child = children.shift();\n        const cont = content.shift();\n        if (child === cont) {\n            prepunct.push(cont);\n            return this.combinePunctuations(children, content, prepunct, acc);\n        }\n        else {\n            content.unshift(cont);\n            prepunct.push(child);\n            if (children.length === content.length) {\n                acc.push(this.focusFromId(child, prepunct.concat(content)));\n                return acc;\n            }\n            else {\n                acc.push(this.focusFromId(child, prepunct));\n                return this.combinePunctuations(children, content, [], acc);\n            }\n        }\n    }\n    makePairList(children, content) {\n        if (children.length === 0) {\n            return [];\n        }\n        if (children.length === 1) {\n            return [this.singletonFocus(children[0])];\n        }\n        const result = [this.singletonFocus(children.shift())];\n        for (let i = 0, l = children.length; i < l; i++) {\n            result.push(this.focusFromId(children[i], [content[i], children[i]]));\n        }\n        return result;\n    }\n    left() {\n        super.left();\n        const index = this.levels.indexOf(this.getFocus());\n        if (index === null) {\n            return null;\n        }\n        const ids = this.levels.get(index - 1);\n        return ids ? ids : null;\n    }\n    right() {\n        super.right();\n        const index = this.levels.indexOf(this.getFocus());\n        if (index === null) {\n            return null;\n        }\n        const ids = this.levels.get(index + 1);\n        return ids ? ids : null;\n    }\n    findFocusOnLevel(id) {\n        const focus = this.levels.find((x) => {\n            const pid = x.getSemanticPrimary().id;\n            return pid === id;\n        });\n        return focus;\n    }\n}\nexports.SemanticWalker = SemanticWalker;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SyntaxWalker = void 0;\nconst base_util_js_1 = require(\"../common/base_util.js\");\nconst semantic_meaning_js_1 = require(\"../semantic_tree/semantic_meaning.js\");\nconst abstract_walker_js_1 = require(\"./abstract_walker.js\");\nconst levels_js_1 = require(\"./levels.js\");\nclass SyntaxWalker extends abstract_walker_js_1.AbstractWalker {\n    constructor(node, generator, highlighter, xml) {\n        super(node, generator, highlighter, xml);\n        this.node = node;\n        this.generator = generator;\n        this.highlighter = highlighter;\n        this.levels = null;\n        this.restoreState();\n    }\n    initLevels() {\n        const levels = new levels_js_1.Levels();\n        levels.push([this.primaryId()]);\n        return levels;\n    }\n    up() {\n        super.up();\n        const parent = this.previousLevel();\n        if (!parent) {\n            return null;\n        }\n        this.levels.pop();\n        return this.singletonFocus(parent);\n    }\n    down() {\n        super.down();\n        const children = this.nextLevel();\n        if (children.length === 0) {\n            return null;\n        }\n        const focus = this.singletonFocus(children[0]);\n        if (focus) {\n            this.levels.push(children);\n        }\n        return focus;\n    }\n    combineContentChildren(type, role, content, children) {\n        switch (type) {\n            case semantic_meaning_js_1.SemanticType.RELSEQ:\n            case semantic_meaning_js_1.SemanticType.INFIXOP:\n            case semantic_meaning_js_1.SemanticType.MULTIREL:\n                return (0, base_util_js_1.interleaveLists)(children, content);\n            case semantic_meaning_js_1.SemanticType.PREFIXOP:\n                return content.concat(children);\n            case semantic_meaning_js_1.SemanticType.POSTFIXOP:\n                return children.concat(content);\n            case semantic_meaning_js_1.SemanticType.MATRIX:\n            case semantic_meaning_js_1.SemanticType.VECTOR:\n            case semantic_meaning_js_1.SemanticType.FENCED:\n                children.unshift(content[0]);\n                children.push(content[1]);\n                return children;\n            case semantic_meaning_js_1.SemanticType.CASES:\n                children.unshift(content[0]);\n                return children;\n            case semantic_meaning_js_1.SemanticType.PUNCTUATED:\n                if (role === semantic_meaning_js_1.SemanticRole.TEXT) {\n                    return (0, base_util_js_1.interleaveLists)(children, content);\n                }\n                return children;\n            case semantic_meaning_js_1.SemanticType.APPL:\n                return [children[0], content[0], children[1]];\n            case semantic_meaning_js_1.SemanticType.ROOT:\n                return [children[0], children[1]];\n            default:\n                return children;\n        }\n    }\n    left() {\n        super.left();\n        const index = this.levels.indexOf(this.primaryId());\n        if (index === null) {\n            return null;\n        }\n        const id = this.levels.get(index - 1);\n        return id ? this.singletonFocus(id) : null;\n    }\n    right() {\n        super.right();\n        const index = this.levels.indexOf(this.primaryId());\n        if (index === null) {\n            return null;\n        }\n        const id = this.levels.get(index + 1);\n        return id ? this.singletonFocus(id) : null;\n    }\n    findFocusOnLevel(id) {\n        return this.singletonFocus(id.toString());\n    }\n    focusDomNodes() {\n        return [this.getFocus().getDomPrimary()];\n    }\n    focusSemanticNodes() {\n        return [this.getFocus().getSemanticPrimary()];\n    }\n}\nexports.SyntaxWalker = SyntaxWalker;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TableWalker = void 0;\nconst DomUtil = require(\"../common/dom_util.js\");\nconst event_util_js_1 = require(\"../common/event_util.js\");\nconst semantic_meaning_js_1 = require(\"../semantic_tree/semantic_meaning.js\");\nconst syntax_walker_js_1 = require(\"./syntax_walker.js\");\nconst walker_js_1 = require(\"./walker.js\");\nclass TableWalker extends syntax_walker_js_1.SyntaxWalker {\n    constructor(node, generator, highlighter, xml) {\n        super(node, generator, highlighter, xml);\n        this.node = node;\n        this.generator = generator;\n        this.highlighter = highlighter;\n        this.firstJump = null;\n        this.key_ = null;\n        this.row_ = 0;\n        this.currentTable_ = null;\n        this.keyMapping.set(event_util_js_1.KeyCode.ZERO, this.jumpCell.bind(this));\n        this.keyMapping.set(event_util_js_1.KeyCode.ONE, this.jumpCell.bind(this));\n        this.keyMapping.set(event_util_js_1.KeyCode.TWO, this.jumpCell.bind(this));\n        this.keyMapping.set(event_util_js_1.KeyCode.THREE, this.jumpCell.bind(this));\n        this.keyMapping.set(event_util_js_1.KeyCode.FOUR, this.jumpCell.bind(this));\n        this.keyMapping.set(event_util_js_1.KeyCode.FIVE, this.jumpCell.bind(this));\n        this.keyMapping.set(event_util_js_1.KeyCode.SIX, this.jumpCell.bind(this));\n        this.keyMapping.set(event_util_js_1.KeyCode.SEVEN, this.jumpCell.bind(this));\n        this.keyMapping.set(event_util_js_1.KeyCode.EIGHT, this.jumpCell.bind(this));\n        this.keyMapping.set(event_util_js_1.KeyCode.NINE, this.jumpCell.bind(this));\n    }\n    move(key) {\n        this.key_ = key;\n        const result = super.move(key);\n        this.modifier = false;\n        return result;\n    }\n    up() {\n        this.moved = walker_js_1.WalkerMoves.UP;\n        return this.eligibleCell_() ? this.verticalMove_(false) : super.up();\n    }\n    down() {\n        this.moved = walker_js_1.WalkerMoves.DOWN;\n        return this.eligibleCell_() ? this.verticalMove_(true) : super.down();\n    }\n    jumpCell() {\n        if (!this.isInTable_() || this.key_ === null) {\n            return this.getFocus();\n        }\n        if (this.moved === walker_js_1.WalkerMoves.ROW) {\n            this.moved = walker_js_1.WalkerMoves.CELL;\n            const column = this.key_ - event_util_js_1.KeyCode.ZERO;\n            if (!this.isLegalJump_(this.row_, column)) {\n                return this.getFocus();\n            }\n            return this.jumpCell_(this.row_, column);\n        }\n        const row = this.key_ - event_util_js_1.KeyCode.ZERO;\n        if (row > this.currentTable_.childNodes.length) {\n            return this.getFocus();\n        }\n        this.row_ = row;\n        this.moved = walker_js_1.WalkerMoves.ROW;\n        return this.getFocus().clone();\n    }\n    undo() {\n        const focus = super.undo();\n        if (focus === this.firstJump) {\n            this.firstJump = null;\n        }\n        return focus;\n    }\n    eligibleCell_() {\n        const primary = this.getFocus().getSemanticPrimary();\n        return (this.modifier &&\n            primary.type === semantic_meaning_js_1.SemanticType.CELL &&\n            TableWalker.ELIGIBLE_CELL_ROLES.indexOf(primary.role) !== -1);\n    }\n    verticalMove_(direction) {\n        const parent = this.previousLevel();\n        if (!parent) {\n            return null;\n        }\n        const origFocus = this.getFocus();\n        const origIndex = this.levels.indexOf(this.primaryId());\n        const origLevel = this.levels.pop();\n        const parentIndex = this.levels.indexOf(parent);\n        const row = this.levels.get(direction ? parentIndex + 1 : parentIndex - 1);\n        if (!row) {\n            this.levels.push(origLevel);\n            return null;\n        }\n        this.setFocus(this.singletonFocus(row));\n        const children = this.nextLevel();\n        const newNode = children[origIndex];\n        if (!newNode) {\n            this.setFocus(origFocus);\n            this.levels.push(origLevel);\n            return null;\n        }\n        this.levels.push(children);\n        return this.singletonFocus(children[origIndex]);\n    }\n    jumpCell_(row, column) {\n        if (!this.firstJump) {\n            this.firstJump = this.getFocus();\n            this.virtualize(true);\n        }\n        else {\n            this.virtualize(false);\n        }\n        const id = this.currentTable_.id.toString();\n        let level;\n        do {\n            level = this.levels.pop();\n        } while (level.indexOf(id) === -1);\n        this.levels.push(level);\n        this.setFocus(this.singletonFocus(id));\n        this.levels.push(this.nextLevel());\n        const semRow = this.currentTable_.childNodes[row - 1];\n        this.setFocus(this.singletonFocus(semRow.id.toString()));\n        this.levels.push(this.nextLevel());\n        return this.singletonFocus(semRow.childNodes[column - 1].id.toString());\n    }\n    isLegalJump_(row, column) {\n        const xmlTable = DomUtil.querySelectorAllByAttrValue(this.getRebuilt().xml, 'id', this.currentTable_.id.toString())[0];\n        if (!xmlTable || xmlTable.hasAttribute('alternative')) {\n            return false;\n        }\n        const rowNode = this.currentTable_.childNodes[row - 1];\n        if (!rowNode) {\n            return false;\n        }\n        const xmlRow = DomUtil.querySelectorAllByAttrValue(xmlTable, 'id', rowNode.id.toString())[0];\n        if (!xmlRow || xmlRow.hasAttribute('alternative')) {\n            return false;\n        }\n        return !!(rowNode && rowNode.childNodes[column - 1]);\n    }\n    isInTable_() {\n        let snode = this.getFocus().getSemanticPrimary();\n        while (snode) {\n            if (TableWalker.ELIGIBLE_TABLE_TYPES.indexOf(snode.type) !== -1) {\n                this.currentTable_ = snode;\n                return true;\n            }\n            snode = snode.parent;\n        }\n        return false;\n    }\n}\nexports.TableWalker = TableWalker;\nTableWalker.ELIGIBLE_CELL_ROLES = [\n    semantic_meaning_js_1.SemanticRole.DETERMINANT,\n    semantic_meaning_js_1.SemanticRole.ROWVECTOR,\n    semantic_meaning_js_1.SemanticRole.BINOMIAL,\n    semantic_meaning_js_1.SemanticRole.SQUAREMATRIX,\n    semantic_meaning_js_1.SemanticRole.MULTILINE,\n    semantic_meaning_js_1.SemanticRole.MATRIX,\n    semantic_meaning_js_1.SemanticRole.VECTOR,\n    semantic_meaning_js_1.SemanticRole.CASES,\n    semantic_meaning_js_1.SemanticRole.TABLE\n];\nTableWalker.ELIGIBLE_TABLE_TYPES = [\n    semantic_meaning_js_1.SemanticType.MULTILINE,\n    semantic_meaning_js_1.SemanticType.MATRIX,\n    semantic_meaning_js_1.SemanticType.VECTOR,\n    semantic_meaning_js_1.SemanticType.CASES,\n    semantic_meaning_js_1.SemanticType.TABLE\n];\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.walker = walker;\nconst dummy_walker_js_1 = require(\"./dummy_walker.js\");\nconst semantic_walker_js_1 = require(\"./semantic_walker.js\");\nconst syntax_walker_js_1 = require(\"./syntax_walker.js\");\nconst table_walker_js_1 = require(\"./table_walker.js\");\nfunction walker(type, node, generator, highlighter, xml) {\n    const constructor = walkerMapping[type.toLowerCase()] || walkerMapping['dummy'];\n    return constructor(node, generator, highlighter, xml);\n}\nconst walkerMapping = {\n    dummy: (p1, p2, p3, p4) => new dummy_walker_js_1.DummyWalker(p1, p2, p3, p4),\n    semantic: (p1, p2, p3, p4) => new semantic_walker_js_1.SemanticWalker(p1, p2, p3, p4),\n    syntax: (p1, p2, p3, p4) => new syntax_walker_js_1.SyntaxWalker(p1, p2, p3, p4),\n    table: (p1, p2, p3, p4) => new table_walker_js_1.TableWalker(p1, p2, p3, p4)\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.KeyProcessor = exports.Processor = void 0;\nconst event_util_js_1 = require(\"./event_util.js\");\nclass Processor {\n    static stringify_(x) {\n        return x ? x.toString() : x;\n    }\n    constructor(name, methods) {\n        this.name = name;\n        this.process = methods.processor;\n        this.postprocess =\n            methods.postprocessor || ((x, _y) => x);\n        this.processor = this.postprocess\n            ? function (x) {\n                return this.postprocess(this.process(x), x);\n            }\n            : this.process;\n        this.print = methods.print || Processor.stringify_;\n        this.pprint = methods.pprint || this.print;\n    }\n}\nexports.Processor = Processor;\nProcessor.LocalState = { walker: null, speechGenerator: null, highlighter: null };\nclass KeyProcessor extends Processor {\n    static getKey_(key) {\n        return typeof key === 'string'\n            ?\n                event_util_js_1.KeyCode[key.toUpperCase()]\n            : key;\n    }\n    constructor(name, methods) {\n        super(name, methods);\n        this.key = methods.key || KeyProcessor.getKey_;\n    }\n}\nexports.KeyProcessor = KeyProcessor;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.process = process;\nexports.output = output;\nexports.keypress = keypress;\nconst AuralRendering = require(\"../audio/aural_rendering.js\");\nconst Enrich = require(\"../enrich_mathml/enrich.js\");\nconst HighlighterFactory = require(\"../highlighter/highlighter_factory.js\");\nconst locale_js_1 = require(\"../l10n/locale.js\");\nconst Semantic = require(\"../semantic_tree/semantic.js\");\nconst SpeechGeneratorFactory = require(\"../speech_generator/speech_generator_factory.js\");\nconst SpeechGeneratorUtil = require(\"../speech_generator/speech_generator_util.js\");\nconst WalkerFactory = require(\"../walker/walker_factory.js\");\nconst WalkerUtil = require(\"../walker/walker_util.js\");\nconst rebuild_stree_js_1 = require(\"../walker/rebuild_stree.js\");\nconst DomUtil = require(\"./dom_util.js\");\nconst engine_js_1 = require(\"./engine.js\");\nconst EngineConst = require(\"../common/engine_const.js\");\nconst processor_js_1 = require(\"./processor.js\");\nconst XpathUtil = require(\"./xpath_util.js\");\nconst PROCESSORS = new Map();\nfunction set(processor) {\n    PROCESSORS.set(processor.name, processor);\n}\nfunction get(name) {\n    const processor = PROCESSORS.get(name);\n    if (!processor) {\n        throw new engine_js_1.SREError('Unknown processor ' + name);\n    }\n    return processor;\n}\nfunction process(name, expr) {\n    const processor = get(name);\n    try {\n        return processor.processor(expr);\n    }\n    catch (_e) {\n        throw new engine_js_1.SREError('Processing error for expression ' + expr);\n    }\n}\nfunction print(name, data) {\n    const processor = get(name);\n    return engine_js_1.Engine.getInstance().pprint\n        ? processor.pprint(data)\n        : processor.print(data);\n}\nfunction output(name, expr) {\n    const processor = get(name);\n    try {\n        const data = processor.processor(expr);\n        return engine_js_1.Engine.getInstance().pprint\n            ? processor.pprint(data)\n            : processor.print(data);\n    }\n    catch (_e) {\n        console.log(_e);\n        throw new engine_js_1.SREError('Processing error for expression ' + expr);\n    }\n}\nfunction keypress(name, expr) {\n    const processor = get(name);\n    const key = processor instanceof processor_js_1.KeyProcessor ? processor.key(expr) : expr;\n    const data = processor.processor(key);\n    return engine_js_1.Engine.getInstance().pprint\n        ? processor.pprint(data)\n        : processor.print(data);\n}\nset(new processor_js_1.Processor('semantic', {\n    processor: function (expr) {\n        const mml = DomUtil.parseInput(expr);\n        return Semantic.xmlTree(mml);\n    },\n    postprocessor: function (xml, _expr) {\n        const setting = engine_js_1.Engine.getInstance().speech;\n        if (setting === EngineConst.Speech.NONE) {\n            return xml;\n        }\n        const clone = DomUtil.cloneNode(xml);\n        let speech = SpeechGeneratorUtil.computeMarkup(clone);\n        if (setting === EngineConst.Speech.SHALLOW) {\n            xml.setAttribute('speech', AuralRendering.finalize(speech));\n            return xml;\n        }\n        const nodesXml = XpathUtil.evalXPath('.//*[@id]', xml);\n        const nodesClone = XpathUtil.evalXPath('.//*[@id]', clone);\n        for (let i = 0, orig, node; (orig = nodesXml[i]), (node = nodesClone[i]); i++) {\n            speech = SpeechGeneratorUtil.computeMarkup(node);\n            orig.setAttribute('speech', AuralRendering.finalize(speech));\n        }\n        return xml;\n    },\n    pprint: function (tree) {\n        return DomUtil.formatXml(tree.toString());\n    }\n}));\nset(new processor_js_1.Processor('speech', {\n    processor: function (expr) {\n        const mml = DomUtil.parseInput(expr);\n        const xml = Semantic.xmlTree(mml);\n        const descrs = SpeechGeneratorUtil.computeSpeech(xml);\n        return AuralRendering.finalize(AuralRendering.markup(descrs));\n    },\n    pprint: function (speech) {\n        const str = speech.toString();\n        return AuralRendering.isXml() ? DomUtil.formatXml(str) : str;\n    }\n}));\nset(new processor_js_1.Processor('json', {\n    processor: function (expr) {\n        const mml = DomUtil.parseInput(expr);\n        const stree = Semantic.getTree(mml);\n        return stree.toJson();\n    },\n    postprocessor: function (json, expr) {\n        const setting = engine_js_1.Engine.getInstance().speech;\n        if (setting === EngineConst.Speech.NONE) {\n            return json;\n        }\n        const mml = DomUtil.parseInput(expr);\n        const xml = Semantic.xmlTree(mml);\n        const speech = SpeechGeneratorUtil.computeMarkup(xml);\n        if (setting === EngineConst.Speech.SHALLOW) {\n            json.stree.speech = AuralRendering.finalize(speech);\n            return json;\n        }\n        const addRec = (json) => {\n            const node = XpathUtil.evalXPath(`.//*[@id=${json.id}]`, xml)[0];\n            const speech = SpeechGeneratorUtil.computeMarkup(node);\n            json.speech = AuralRendering.finalize(speech);\n            if (json.children) {\n                json.children.forEach(addRec);\n            }\n        };\n        addRec(json.stree);\n        return json;\n    },\n    print: function (json) {\n        return JSON.stringify(json);\n    },\n    pprint: function (json) {\n        return JSON.stringify(json, null, 2);\n    }\n}));\nset(new processor_js_1.Processor('description', {\n    processor: function (expr) {\n        const mml = DomUtil.parseInput(expr);\n        const xml = Semantic.xmlTree(mml);\n        const descrs = SpeechGeneratorUtil.computeSpeech(xml);\n        return descrs;\n    },\n    print: function (descrs) {\n        return JSON.stringify(descrs);\n    },\n    pprint: function (descrs) {\n        return JSON.stringify(descrs, null, 2);\n    }\n}));\nset(new processor_js_1.Processor('enriched', {\n    processor: function (expr) {\n        return Enrich.semanticMathmlSync(expr);\n    },\n    postprocessor: function (enr, _expr) {\n        const root = WalkerUtil.getSemanticRoot(enr);\n        let generator;\n        switch (engine_js_1.Engine.getInstance().speech) {\n            case EngineConst.Speech.NONE:\n                break;\n            case EngineConst.Speech.SHALLOW:\n                generator = SpeechGeneratorFactory.generator('Adhoc');\n                generator.getSpeech(root, enr);\n                break;\n            case EngineConst.Speech.DEEP:\n                generator = SpeechGeneratorFactory.generator('Tree');\n                generator.getSpeech(enr, enr);\n                break;\n            default:\n                break;\n        }\n        return enr;\n    },\n    pprint: function (tree) {\n        return DomUtil.formatXml(tree.toString());\n    }\n}));\nset(new processor_js_1.Processor('rebuild', {\n    processor: function (expr) {\n        const rebuilt = new rebuild_stree_js_1.RebuildStree(DomUtil.parseInput(expr));\n        return rebuilt.stree.xml();\n    },\n    pprint: function (tree) {\n        return DomUtil.formatXml(tree.toString());\n    }\n}));\nset(new processor_js_1.Processor('walker', {\n    processor: function (expr) {\n        const generator = SpeechGeneratorFactory.generator('Node');\n        processor_js_1.Processor.LocalState.speechGenerator = generator;\n        generator.setOptions({\n            modality: engine_js_1.Engine.getInstance().modality,\n            locale: engine_js_1.Engine.getInstance().locale,\n            domain: engine_js_1.Engine.getInstance().domain,\n            style: engine_js_1.Engine.getInstance().style\n        });\n        processor_js_1.Processor.LocalState.highlighter = HighlighterFactory.highlighter({ color: 'black' }, { color: 'white' }, { renderer: 'NativeMML' });\n        const node = process('enriched', expr);\n        const eml = print('enriched', node);\n        processor_js_1.Processor.LocalState.walker = WalkerFactory.walker(engine_js_1.Engine.getInstance().walker, node, generator, processor_js_1.Processor.LocalState.highlighter, eml);\n        return processor_js_1.Processor.LocalState.walker;\n    },\n    print: function (_walker) {\n        return processor_js_1.Processor.LocalState.walker.speech();\n    }\n}));\nset(new processor_js_1.KeyProcessor('move', {\n    processor: function (direction) {\n        if (!processor_js_1.Processor.LocalState.walker) {\n            return null;\n        }\n        const move = processor_js_1.Processor.LocalState.walker.move(direction);\n        return move === false\n            ? AuralRendering.error(direction)\n            : processor_js_1.Processor.LocalState.walker.speech();\n    }\n}));\nset(new processor_js_1.Processor('number', {\n    processor: function (numb) {\n        const num = parseInt(numb, 10);\n        return isNaN(num) ? '' : locale_js_1.LOCALE.NUMBERS.numberToWords(num);\n    }\n}));\nset(new processor_js_1.Processor('ordinal', {\n    processor: function (numb) {\n        const num = parseInt(numb, 10);\n        return isNaN(num) ? '' : locale_js_1.LOCALE.NUMBERS.wordOrdinal(num);\n    }\n}));\nset(new processor_js_1.Processor('numericOrdinal', {\n    processor: function (numb) {\n        const num = parseInt(numb, 10);\n        return isNaN(num) ? '' : locale_js_1.LOCALE.NUMBERS.numericOrdinal(num);\n    }\n}));\nset(new processor_js_1.Processor('vulgar', {\n    processor: function (numb) {\n        const [en, den] = numb.split('/').map((x) => parseInt(x, 10));\n        return isNaN(en) || isNaN(den)\n            ? ''\n            : process('speech', `<mfrac><mn>${en}</mn><mn>${den}</mn></mfrac>`);\n    }\n}));\nset(new processor_js_1.Processor('latex', {\n    processor: function (ltx) {\n        if (engine_js_1.Engine.getInstance().modality !== 'braille' ||\n            engine_js_1.Engine.getInstance().locale !== 'euro') {\n            console.info('LaTeX input currently only works for Euro Braille output.' +\n                ' Please use the latex-to-speech package from npm for general' +\n                ' LaTeX input to SRE.');\n        }\n        return process('speech', `<math data-latex=\"${ltx}\"></math>`);\n    }\n}));\n", "\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.localePath = exports.file = exports.localeLoader = exports.version = void 0;\nexports.setupEngine = setupEngine;\nexports.engineSetup = engineSetup;\nexports.engineReady = engineReady;\nexports.toSpeech = toSpeech;\nexports.toSemantic = toSemantic;\nexports.toJson = toJson;\nexports.toDescription = toDescription;\nexports.toEnriched = toEnriched;\nexports.number = number;\nexports.ordinal = ordinal;\nexports.numericOrdinal = numericOrdinal;\nexports.vulgar = vulgar;\nexports.processFile = processFile;\nexports.walk = walk;\nexports.move = move;\nexports.exit = exit;\nconst engine_js_1 = require(\"./engine.js\");\nconst engine_setup_js_1 = require(\"./engine_setup.js\");\nconst EngineConst = require(\"./engine_const.js\");\nconst FileUtil = require(\"./file_util.js\");\nconst ProcessorFactory = require(\"./processor_factory.js\");\nconst system_external_js_1 = require(\"./system_external.js\");\nconst variables_js_1 = require(\"./variables.js\");\nconst math_map_js_1 = require(\"../speech_rules/math_map.js\");\nexports.version = variables_js_1.Variables.VERSION;\nfunction setupEngine(feature) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return (0, engine_setup_js_1.setup)(feature);\n    });\n}\nfunction engineSetup() {\n    const engineFeatures = ['mode'].concat(engine_js_1.Engine.STRING_FEATURES, engine_js_1.Engine.BINARY_FEATURES);\n    const engine = engine_js_1.Engine.getInstance();\n    const features = {};\n    engineFeatures.forEach(function (x) {\n        features[x] = engine[x];\n    });\n    features.json = system_external_js_1.SystemExternal.jsonPath;\n    features.xpath = system_external_js_1.SystemExternal.WGXpath;\n    features.rules = engine.ruleSets.slice();\n    return features;\n}\nfunction engineReady() {\n    return __awaiter(this, void 0, void 0, function* () {\n        return setupEngine({}).then(() => engine_js_1.EnginePromise.getall());\n    });\n}\nexports.localeLoader = math_map_js_1.standardLoader;\nfunction toSpeech(expr) {\n    return processString('speech', expr);\n}\nfunction toSemantic(expr) {\n    return processString('semantic', expr);\n}\nfunction toJson(expr) {\n    return processString('json', expr);\n}\nfunction toDescription(expr) {\n    return processString('description', expr);\n}\nfunction toEnriched(expr) {\n    return processString('enriched', expr);\n}\nfunction number(expr) {\n    return processString('number', expr);\n}\nfunction ordinal(expr) {\n    return processString('ordinal', expr);\n}\nfunction numericOrdinal(expr) {\n    return processString('numericOrdinal', expr);\n}\nfunction vulgar(expr) {\n    return processString('vulgar', expr);\n}\nfunction processString(processor, input) {\n    return ProcessorFactory.process(processor, input);\n}\nexports.file = {};\nexports.file.toSpeech = function (input, opt_output) {\n    return processFile('speech', input, opt_output);\n};\nexports.file.toSemantic = function (input, opt_output) {\n    return processFile('semantic', input, opt_output);\n};\nexports.file.toJson = function (input, opt_output) {\n    return processFile('json', input, opt_output);\n};\nexports.file.toDescription = function (input, opt_output) {\n    return processFile('description', input, opt_output);\n};\nexports.file.toEnriched = function (input, opt_output) {\n    return processFile('enriched', input, opt_output);\n};\nfunction processFile(processor, input, opt_output) {\n    switch (engine_js_1.Engine.getInstance().mode) {\n        case EngineConst.Mode.ASYNC:\n            return processFileAsync(processor, input, opt_output);\n        case EngineConst.Mode.SYNC:\n            return processFileSync(processor, input, opt_output);\n        default:\n            throw new engine_js_1.SREError(`Can process files in ${engine_js_1.Engine.getInstance().mode} mode`);\n    }\n}\nfunction processFileSync(processor, input, opt_output) {\n    const expr = inputFileSync_(input);\n    const result = ProcessorFactory.output(processor, expr);\n    if (opt_output) {\n        try {\n            system_external_js_1.SystemExternal.fs.writeFileSync(opt_output, result);\n        }\n        catch (_err) {\n            throw new engine_js_1.SREError('Can not write to file: ' + opt_output);\n        }\n    }\n    return result;\n}\nfunction inputFileSync_(file) {\n    let expr;\n    try {\n        expr = system_external_js_1.SystemExternal.fs.readFileSync(file, { encoding: 'utf8' });\n    }\n    catch (_err) {\n        throw new engine_js_1.SREError('Can not open file: ' + file);\n    }\n    return expr;\n}\nfunction processFileAsync(processor, file, output) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const expr = yield system_external_js_1.SystemExternal.fs.promises.readFile(file, {\n            encoding: 'utf8'\n        });\n        const result = ProcessorFactory.output(processor, expr);\n        if (output) {\n            try {\n                system_external_js_1.SystemExternal.fs.promises.writeFile(output, result);\n            }\n            catch (_err) {\n                throw new engine_js_1.SREError('Can not write to file: ' + output);\n            }\n        }\n        return result;\n    });\n}\nfunction walk(expr) {\n    return ProcessorFactory.output('walker', expr);\n}\nfunction move(direction) {\n    return ProcessorFactory.keypress('move', direction);\n}\nfunction exit(opt_value) {\n    const value = opt_value || 0;\n    engine_js_1.EnginePromise.getall().then(() => process.exit(value));\n}\nexports.localePath = FileUtil.localePath;\nif (system_external_js_1.SystemExternal.documentSupported) {\n    setupEngine({ mode: EngineConst.Mode.HTTP }).then(() => setupEngine({}));\n}\nelse {\n    setupEngine({ mode: EngineConst.Mode.SYNC }).then(() => setupEngine({ mode: EngineConst.Mode.ASYNC }));\n}\n", "/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Base imports of sre locales.\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nconst MathMaps: Map<string, {[path: string]: any}> = new Map();\n\nexport default MathMaps;\n", "/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Provides the interface functionality to SRE.\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport * as Api from 'speech-rule-engine/js/common/system.js';\nimport {Walker} from 'speech-rule-engine/js/walker/walker.js';\nimport * as WalkerFactory from 'speech-rule-engine/js/walker/walker_factory.js';\nimport * as SpeechGeneratorFactory from 'speech-rule-engine/js/speech_generator/speech_generator_factory.js';\nimport * as EngineConst from 'speech-rule-engine/js/common/engine_const.js';\nimport Engine from 'speech-rule-engine/js/common/engine.js';\nimport {ClearspeakPreferences} from 'speech-rule-engine/js/speech_rules/clearspeak_preferences.js';\nimport {Highlighter} from 'speech-rule-engine/js/highlighter/highlighter.js';\nimport * as HighlighterFactory from 'speech-rule-engine/js/highlighter/highlighter_factory.js';\nimport {SpeechGenerator} from 'speech-rule-engine/js/speech_generator/speech_generator.js';\nimport {Variables} from 'speech-rule-engine/js/common/variables.js';\nimport MathMaps from './mathmaps.js';\n\nexport namespace Sre {\n\n  export type highlighter = Highlighter;\n\n  export type speechGenerator = SpeechGenerator;\n\n  export type walker = Walker;\n\n\n  export const locales = Variables.LOCALES;\n\n  export const sreReady = Api.engineReady;\n\n  export const setupEngine = Api.setupEngine;\n\n  export const engineSetup = Api.engineSetup;\n\n  export const toEnriched = Api.toEnriched;\n\n  export const toSpeech = Api.toSpeech;\n\n  export const clearspeakPreferences = ClearspeakPreferences;\n\n  export const getHighlighter = HighlighterFactory.highlighter;\n\n  export const getSpeechGenerator = SpeechGeneratorFactory.generator;\n\n  export const getWalker = WalkerFactory.walker;\n\n  export const clearspeakStyle = () => {\n    return EngineConst.DOMAIN_TO_STYLES['clearspeak'];\n  };\n\n  /**\n   * Loads locales that are already included in the imported MathMaps. Defaults\n   * to standard loading if a locale is not yet preloaded.\n   */\n  export const preloadLocales = async function(locale: string) {\n    const json = MathMaps.get(locale);\n    return json ? new Promise((res, _rej) => res(JSON.stringify(json))) :\n      Api.localeLoader()(locale);\n  };\n\n}\n\n/**\n * A promise that resolves when SRE is loaded and ready, and rejects if\n * SRE can't be loaded, or does not become ready within the timout period.\n *\n * @deprecated\n */\nexport const sreReady = Sre.sreReady;\n\n// Setting delay stops SRE from setting itself up (and loading locales) when it\n// is not actually being used. As we are not yet sure in which environment we\n// are (browser, node) we can not use a configuration vector.\nEngine.getInstance().delay = true;\n\nexport default Sre;\n", "/*************************************************************\n *\n *  Copyright (c) 2019-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements a subclass of ContextMenu specific to MathJax\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {mathjax} from '../../mathjax.js';\n\nimport {MathItem, STATE} from '../../core/MathItem.js';\nimport {OutputJax} from '../../core/OutputJax.js';\nimport {MathJax as MJX} from '../../components/global.js';\nimport {MathJaxObject as StartupObject} from '../../components/startup.js';\nimport {MathJaxObject as LoaderObject} from '../../components/loader.js';\nimport {OptionList, userOptions, defaultOptions, expandable} from '../../util/Options.js';\n\nimport {MJContextMenu} from './MJContextMenu.js';\nimport {MmlVisitor} from './MmlVisitor.js';\nimport {SelectableInfo} from './SelectableInfo.js';\nimport {MenuMathDocument} from './MenuHandler.js';\n\nimport {Info} from 'mj-context-menu/js/info.js';\nimport {Parser} from 'mj-context-menu/js/parse.js';\nimport {Rule} from 'mj-context-menu/js/item_rule.js';\nimport {CssStyles} from 'mj-context-menu/js/css_util.js';\nimport {Submenu} from 'mj-context-menu/js/item_submenu.js';\n\nimport Sre from '../../a11y/sre.js';\n\n\n/*==========================================================================*/\n\n/**\n * Declare the MathJax global and the navigator object (to check platform for MacOS)\n */\ndeclare namespace window {\n  const navigator: {platform: string};\n}\n\n/**\n * The global MathJax object\n */\nconst MathJax = MJX as StartupObject & LoaderObject;\n\n/**\n * True when platform is a Mac (so we can enable CMD menu item for zoom trigger)\n */\nconst isMac = (typeof window !== 'undefined' &&\n               window.navigator && window.navigator.platform.substr(0, 3) === 'Mac');\n\n/*==========================================================================*/\n\n/**\n * The various values that are stored in the menu\n */\nexport interface MenuSettings {\n  texHints: boolean;\n  semantics: boolean;\n  zoom: string;\n  zscale: string;\n  renderer: string;\n  alt: boolean;\n  cmd: boolean;\n  ctrl: boolean;\n  shift: boolean;\n  scale: string;\n  autocollapse: boolean;\n  collapsible: boolean;\n  inTabOrder: boolean;\n  assistiveMml: boolean;\n  // A11y settings\n  backgroundColor: string;\n  backgroundOpacity: string;\n  braille: boolean;\n  explorer: boolean;\n  foregroundColor: string;\n  foregroundOpacity: string;\n  highlight: string;\n  locale: string;\n  infoPrefix: boolean;\n  infoRole: boolean;\n  infoType: boolean;\n  magnification: string;\n  magnify: string;\n  speech: boolean;\n  speechRules: string;\n  subtitles: boolean;\n  treeColoring: boolean;\n  viewBraille: boolean;\n}\n\nexport type HTMLMATHITEM = MathItem<HTMLElement, Text, Document>;\n\n/*==========================================================================*/\n\n/**\n * The Menu object that handles the MathJax contextual menu and its actions\n */\nexport class Menu {\n\n  /**\n   * The key for the localStorage for the menu settings\n   */\n  public static MENU_STORAGE = 'MathJax-Menu-Settings';\n\n  /**\n   * The options for the menu, including the default settings, the various output jax\n   * and the list of annotation types and their encodings\n   */\n  public static OPTIONS: OptionList = {\n    settings: {\n      texHints: true,\n      semantics: false,\n      zoom: 'NoZoom',\n      zscale: '200%',\n      renderer: 'CHTML',\n      alt: false,\n      cmd: false,\n      ctrl: false,\n      shift: false,\n      scale: 1,\n      autocollapse: false,\n      collapsible: false,\n      inTabOrder: true,\n      assistiveMml: true,\n      explorer: false\n    },\n    jax: {\n      CHTML: null,\n      SVG: null\n    },\n    annotationTypes: expandable({\n      TeX: ['TeX', 'LaTeX', 'application/x-tex'],\n      StarMath: ['StarMath 5.0'],\n      Maple: ['Maple'],\n      ContentMathML: ['MathML-Content', 'application/mathml-content+xml'],\n      OpenMath: ['OpenMath']\n    })\n  };\n\n  /**\n   * The number of startup modules that are currently being loaded\n   */\n  protected static loading: number = 0;\n\n  /**\n   * Promises for the loading components\n   */\n  protected static loadingPromises: Map<string, Promise<void>> = new Map();\n\n  /**\n   * A promise that is resolved when all components are loaded\n   */\n  protected static _loadingPromise: Promise<void> = null;\n\n  /**\n   * Function used to resolve the _loadingPromise\n   */\n  protected static _loadingOK: Function = null;\n  /**\n   * Function used to reject the _loadingPromise\n   */\n  protected static _loadingFailed: Function = null;\n\n  /**\n   * The options for this menu\n   */\n  public options: OptionList;\n\n  /**\n   * The current settings for this menu (the variables attached to the menu's pool)\n   */\n  public settings: MenuSettings = null;\n\n  /**\n   * The original settings (with page options factored in) for use with the reset command\n   */\n  public defaultSettings: MenuSettings = null;\n\n  /**\n   * The contextual menu object that is managed by this Menu\n   */\n  public menu: MJContextMenu = null;\n\n  /**\n   * A MathML serializer that has options corresponding to the menu settings\n   */\n  public MmlVisitor = new MmlVisitor<HTMLElement, Text, Document>();\n\n  /**\n   * The MathDocument in which we are working\n   */\n  protected document: MenuMathDocument;\n\n  /**\n   * Instances of the various output jax that we can switch to\n   */\n  protected jax: {[name: string]: OutputJax<HTMLElement, Text, Document>} = {\n    CHTML: null,\n    SVG: null\n  };\n\n  /**\n   * The minium initial state for pending rerender requests (so final rerender gets the right start)\n   */\n  protected rerenderStart: number = STATE.LAST;\n\n  /**\n   * @returns {boolean}   true when the menu is loading some component\n   */\n  public get isLoading(): boolean {\n    return Menu.loading > 0;\n  }\n\n  /**\n   * @returns {Promise}   A promise that is resolved when all pending loads are complete\n   */\n  public get loadingPromise(): Promise<void> {\n    if (!this.isLoading) {\n      return Promise.resolve();\n    }\n    if (!Menu._loadingPromise) {\n      Menu._loadingPromise = new Promise<void>((ok, failed) => {\n        Menu._loadingOK = ok;\n        Menu._loadingFailed = failed;\n      });\n    }\n    return Menu._loadingPromise;\n  }\n\n  /*======================================================================*/\n\n  /**\n   * The \"About MathJax\" info box\n   */\n  protected about = new Info(\n    '<b style=\"font-size:120%;\">MathJax</b> v' + mathjax.version,\n    () => {\n      const lines = [] as string[];\n      lines.push('Input Jax: ' + this.document.inputJax.map(jax => jax.name).join(', '));\n      lines.push('Output Jax: ' + this.document.outputJax.name);\n      lines.push('Document Type: ' + this.document.kind);\n      return lines.join('<br/>');\n    },\n    '<a href=\"https://www.mathjax.org\">www.mathjax.org</a>'\n  );\n\n  /**\n   * The \"MathJax Help\" info box\n   */\n  protected help = new Info(\n    '<b>MathJax Help</b>',\n    () => {\n      return [\n        '<p><b>MathJax</b> is a JavaScript library that allows page',\n        ' authors to include mathematics within their web pages.',\n        ' As a reader, you don\\'t need to do anything to make that happen.</p>',\n        '<p><b>Browsers</b>: MathJax works with all modern browsers including',\n        ' Edge, Firefox, Chrome, Safari, Opera, and most mobile browsers.</p>',\n        '<p><b>Math Menu</b>: MathJax adds a contextual menu to equations.',\n        ' Right-click or CTRL-click on any mathematics to access the menu.</p>',\n        '<div style=\"margin-left: 1em;\">',\n        '<p><b>Show Math As:</b> These options allow you to view the formula\\'s',\n        ' source markup (as MathML or in its original format).</p>',\n        '<p><b>Copy to Clipboard:</b> These options copy the formula\\'s source markup,',\n        ' as MathML or in its original format, to the clipboard',\n        ' (in browsers that support that).</p>',\n        '<p><b>Math Settings:</b> These give you control over features of MathJax,',\n        ' such the size of the mathematics, and the mechanism used',\n        ' to display equations.</p>',\n        '<p><b>Accessibility</b>: MathJax can work with screen',\n        ' readers to make mathematics accessible to the visually impaired.',\n        ' Turn on the explorer to enable generation of speech strings',\n        ' and the ability to investigate expressions interactively.</p>',\n        '<p><b>Language</b>: This menu lets you select the language used by MathJax',\n        ' for its menus and warning messages. (Not yet implemented in version 3.)</p>',\n        '</div>',\n        '<p><b>Math Zoom</b>: If you are having difficulty reading an',\n        ' equation, MathJax can enlarge it to help you see it better, or',\n        ' you can scall all the math on the page to make it larger.',\n        ' Turn these features on in the <b>Math Settings</b> menu.</p>',\n        '<p><b>Preferences</b>: MathJax uses your browser\\'s localStorage database',\n        ' to save the preferences set via this menu locally in your browser.  These',\n        ' are not used to track you, and are not transferred or used remotely by',\n        ' MathJax in any way.</p>'\n      ]. join('\\n');\n    },\n    '<a href=\"https://www.mathjax.org\">www.mathjax.org</a>'\n  );\n\n  /**\n   * The \"Show As MathML\" info box\n   */\n  protected mathmlCode = new SelectableInfo(\n    'MathJax MathML Expression',\n    () => {\n      if (!this.menu.mathItem) return '';\n      const text = this.toMML(this.menu.mathItem);\n      return '<pre>' + this.formatSource(text) + '</pre>';\n    },\n    ''\n  );\n\n  /**\n   * The \"Show As (original form)\" info box\n   */\n  protected originalText = new SelectableInfo(\n    'MathJax Original Source',\n    () => {\n      if (!this.menu.mathItem) return '';\n      const text = this.menu.mathItem.math;\n      return '<pre style=\"font-size:125%; margin:0\">' + this.formatSource(text) + '</pre>';\n    },\n    ''\n  );\n\n  /**\n   * The \"Show As Annotation\" info box\n   */\n  protected annotationText = new SelectableInfo(\n    'MathJax Annotation Text',\n    () => {\n      if (!this.menu.mathItem) return '';\n      const text = this.menu.annotation;\n      return '<pre style=\"font-size:125%; margin:0\">' + this.formatSource(text) + '</pre>';\n    },\n    ''\n  );\n\n  /**\n   * The info box for zoomed expressions\n   */\n  protected zoomBox = new Info(\n    'MathJax Zoomed Expression',\n    () => {\n      if (!this.menu.mathItem) return '';\n      const element = (this.menu.mathItem.typesetRoot as any).cloneNode(true) as HTMLElement;\n      element.style.margin = '0';\n      const scale = 1.25 * parseFloat(this.settings.zscale);  // 1.25 is to reverse the default 80% font-size\n      return '<div style=\"font-size: ' + scale + '%\">' + element.outerHTML + '</div>';\n    },\n    ''\n  );\n\n  /*======================================================================*/\n\n  /**\n   * Accept options in addition to the MathDocument, and set up the menu based\n   *  on the defaults, the passed options, and the user's saved settings.\n   *\n   * @param {MenuMathDocument} document   The MathDcument where this menu will post\n   * @param {OptionList} options          The options for the menu\n   * @override\n   */\n  constructor(document: MenuMathDocument, options: OptionList = {}) {\n    this.document = document;\n    this.options = userOptions(defaultOptions({}, (this.constructor as typeof Menu).OPTIONS), options);\n    this.initSettings();\n    this.mergeUserSettings();\n    this.initMenu();\n    this.applySettings();\n  }\n\n  /**\n   * Set up the settings and jax objects, and transfer the output jax name and scale to the settings\n   */\n  protected initSettings() {\n    this.settings = this.options.settings;\n    this.jax = this.options.jax;\n    const jax = this.document.outputJax;\n    this.jax[jax.name] = jax;\n    this.settings.renderer = jax.name;\n    if (MathJax._.a11y && MathJax._.a11y.explorer) {\n      Object.assign(this.settings, this.document.options.a11y);\n    }\n    this.settings.scale = jax.options.scale;\n    this.defaultSettings = Object.assign({}, this.settings);\n  }\n\n  /**\n   * Create the menu object, attach the info boxes to it, and output any CSS needed for it\n   */\n  protected initMenu() {\n    let parser = new Parser([['contextMenu', MJContextMenu.fromJson.bind(MJContextMenu)]]);\n    this.menu = parser.parse({\n      type: 'contextMenu',\n      id: 'MathJax_Menu',\n      pool: [\n        this.variable<boolean>('texHints'),\n        this.variable<boolean>('semantics'),\n        this.variable<string> ('zoom'),\n        this.variable<string> ('zscale'),\n        this.variable<string> ('renderer', jax => this.setRenderer(jax)),\n        this.variable<boolean>('alt'),\n        this.variable<boolean>('cmd'),\n        this.variable<boolean>('ctrl'),\n        this.variable<boolean>('shift'),\n        this.variable<string> ('scale', scale => this.setScale(scale)),\n        this.variable<boolean>('explorer', explore => this.setExplorer(explore)),\n        this.a11yVar<string> ('highlight'),\n        this.a11yVar<string> ('backgroundColor'),\n        this.a11yVar<string> ('backgroundOpacity'),\n        this.a11yVar<string> ('foregroundColor'),\n        this.a11yVar<string> ('foregroundOpacity'),\n        this.a11yVar<boolean>('speech'),\n        this.a11yVar<boolean>('subtitles'),\n        this.a11yVar<boolean>('braille'),\n        this.a11yVar<boolean>('viewBraille'),\n        this.a11yVar<string>('locale', value => Sre.setupEngine({locale: value as string})),\n        this.a11yVar<string> ('speechRules', value => {\n          const [domain, style] = value.split('-');\n          this.document.options.sre.domain = domain;\n          this.document.options.sre.style = style;\n        }),\n        this.a11yVar<string> ('magnification'),\n        this.a11yVar<string> ('magnify'),\n        this.a11yVar<boolean>('treeColoring'),\n        this.a11yVar<boolean>('infoType'),\n        this.a11yVar<boolean>('infoRole'),\n        this.a11yVar<boolean>('infoPrefix'),\n        this.variable<boolean>('autocollapse'),\n        this.variable<boolean>('collapsible', collapse => this.setCollapsible(collapse)),\n        this.variable<boolean>('inTabOrder', tab => this.setTabOrder(tab)),\n        this.variable<boolean>('assistiveMml', mml => this.setAssistiveMml(mml))\n      ],\n      items: [\n        this.submenu('Show', 'Show Math As', [\n          this.command('MathMLcode', 'MathML Code', () => this.mathmlCode.post()),\n          this.command('Original', 'Original Form', () => this.originalText.post()),\n          this.submenu('Annotation', 'Annotation')\n        ]),\n        this.submenu('Copy', 'Copy to Clipboard', [\n          this.command('MathMLcode', 'MathML Code', () => this.copyMathML()),\n          this.command('Original', 'Original Form', () => this.copyOriginal()),\n          this.submenu('Annotation', 'Annotation')\n        ]),\n        this.rule(),\n        this.submenu('Settings', 'Math Settings', [\n          this.submenu('Renderer', 'Math Renderer', this.radioGroup('renderer', [['CHTML'], ['SVG']])),\n          this.rule(),\n          this.submenu('ZoomTrigger', 'Zoom Trigger', [\n            this.command('ZoomNow', 'Zoom Once Now', () => this.zoom(null, '', this.menu.mathItem)),\n            this.rule(),\n            this.radioGroup('zoom', [\n              ['Click'], ['DoubleClick', 'Double-Click'], ['NoZoom', 'No Zoom']\n            ]),\n            this.rule(),\n            this.label('TriggerRequires', 'Trigger Requires:'),\n            this.checkbox((isMac ? 'Option' : 'Alt'), (isMac ? 'Option' : 'Alt'), 'alt'),\n            this.checkbox('Command', 'Command', 'cmd', {hidden: !isMac}),\n            this.checkbox('Control', 'Control', 'ctrl', {hiddne: isMac}),\n            this.checkbox('Shift', 'Shift', 'shift')\n          ]),\n          this.submenu('ZoomFactor', 'Zoom Factor', this.radioGroup('zscale', [\n            ['150%'], ['175%'], ['200%'], ['250%'], ['300%'], ['400%']\n          ])),\n          this.rule(),\n          this.command('Scale', 'Scale All Math...', () => this.scaleAllMath()),\n          this.rule(),\n          this.checkbox('texHints', 'Add TeX hints to MathML', 'texHints'),\n          this.checkbox('semantics', 'Add original as annotation', 'semantics'),\n          this.rule(),\n          this.command('Reset', 'Reset to defaults', () => this.resetDefaults())\n        ]),\n        this.submenu('Accessibility', 'Accessibility', [\n          this.checkbox('Activate', 'Activate', 'explorer'),\n          this.submenu('Speech', 'Speech', [\n            this.checkbox('Speech', 'Speech Output', 'speech'),\n            this.checkbox('Subtitles', 'Speech Subtitles', 'subtitles'),\n            this.checkbox('Braille', 'Braille Output', 'braille'),\n            this.checkbox('View Braille', 'Braille Subtitles', 'viewBraille'),\n            this.rule(),\n            this.submenu('A11yLanguage', 'Language'),\n            this.rule(),\n            this.submenu('Mathspeak', 'Mathspeak Rules', this.radioGroup('speechRules', [\n              ['mathspeak-default', 'Verbose'],\n              ['mathspeak-brief', 'Brief'],\n              ['mathspeak-sbrief', 'Superbrief']\n            ])),\n            this.submenu('Clearspeak', 'Clearspeak Rules', this.radioGroup('speechRules', [\n              ['clearspeak-default', 'Auto']\n            ])),\n            this.submenu('ChromeVox', 'ChromeVox Rules', this.radioGroup('speechRules', [\n              ['chromevox-default', 'Standard'],\n              ['chromevox-alternative', 'Alternative']\n            ]))\n          ]),\n          this.submenu('Highlight', 'Highlight', [\n            this.submenu('Background', 'Background', this.radioGroup('backgroundColor', [\n              ['Blue'], ['Red'], ['Green'], ['Yellow'], ['Cyan'], ['Magenta'], ['White'], ['Black']\n            ])),\n            {'type': 'slider',\n             'variable': 'backgroundOpacity',\n             'content': ' '\n            },\n            this.submenu('Foreground', 'Foreground', this.radioGroup('foregroundColor', [\n              ['Black'], ['White'], ['Magenta'], ['Cyan'], ['Yellow'], ['Green'], ['Red'], ['Blue']\n            ])),\n            {'type': 'slider',\n             'variable': 'foregroundOpacity',\n             'content': ' '\n            },\n            this.rule(),\n            this.radioGroup('highlight', [\n              ['None'], ['Hover'], ['Flame']\n            ]),\n            this.rule(),\n            this.checkbox('TreeColoring', 'Tree Coloring', 'treeColoring')\n          ]),\n          this.submenu('Magnification', 'Magnification', [\n            this.radioGroup('magnification', [\n              ['None'], ['Keyboard'], ['Mouse']\n            ]),\n            this.rule(),\n            this.radioGroup('magnify', [\n              ['200%'], ['300%'], ['400%'], ['500%']\n            ])\n          ]),\n          this.submenu('Semantic Info', 'Semantic Info', [\n            this.checkbox('Type', 'Type', 'infoType'),\n            this.checkbox('Role', 'Role', 'infoRole'),\n            this.checkbox('Prefix', 'Prefix', 'infoPrefix')\n          ], true),\n          this.rule(),\n          this.checkbox('Collapsible', 'Collapsible Math', 'collapsible'),\n          this.checkbox('AutoCollapse', 'Auto Collapse', 'autocollapse', {disabled: true}),\n          this.rule(),\n          this.checkbox('InTabOrder', 'Include in Tab Order', 'inTabOrder'),\n          this.checkbox('AssistiveMml', 'Include Hidden MathML', 'assistiveMml')\n        ]),\n        this.submenu('Language', 'Language'),\n        this.rule(),\n        this.command('About', 'About MathJax', () => this.about.post()),\n        this.command('Help', 'MathJax Help', () => this.help.post())\n      ]\n    }) as MJContextMenu;\n    const menu = this.menu;\n    this.about.attachMenu(menu);\n    this.help.attachMenu(menu);\n    this.originalText.attachMenu(menu);\n    this.annotationText.attachMenu(menu);\n    this.mathmlCode.attachMenu(menu);\n    this.zoomBox.attachMenu(menu);\n    this.checkLoadableItems();\n    this.enableExplorerItems(this.settings.explorer);\n    menu.showAnnotation = this.annotationText;\n    menu.copyAnnotation = this.copyAnnotation.bind(this);\n    menu.annotationTypes = this.options.annotationTypes;\n    CssStyles.addInfoStyles(this.document.document as any);\n    CssStyles.addMenuStyles(this.document.document as any);\n  }\n\n  /**\n   * Check whether the startup and loader modules are available, and\n   *   if not, disable the a11y modules (since we can't load them\n   *   or know if they are available).\n   * Otherwise, check if any need to be loaded\n   */\n  protected checkLoadableItems() {\n    if (MathJax && MathJax._ && MathJax.loader && MathJax.startup) {\n      if (this.settings.collapsible && (!MathJax._.a11y || !MathJax._.a11y.complexity)) {\n        this.loadA11y('complexity');\n      }\n      if (this.settings.explorer && (!MathJax._.a11y || !MathJax._.a11y.explorer)) {\n        this.loadA11y('explorer');\n      }\n      if (this.settings.assistiveMml && (!MathJax._.a11y || !MathJax._.a11y['assistive-mml'])) {\n        this.loadA11y('assistive-mml');\n      }\n    } else {\n      const menu = this.menu;\n      for (const name of Object.keys(this.jax)) {\n        if (!this.jax[name]) {\n          menu.findID('Settings', 'Renderer', name).disable();\n        }\n      }\n      menu.findID('Accessibility', 'Activate').disable();\n      menu.findID('Accessibility', 'AutoCollapse').disable();\n      menu.findID('Accessibility', 'Collapsible').disable();\n    }\n  }\n\n  /**\n   * Enable/disable the Explorer submenu items\n   *\n   * @param {boolean} enable  True to enable, false to disable\n   */\n  protected enableExplorerItems(enable: boolean) {\n    const menu = (this.menu.findID('Accessibility', 'Activate') as Submenu).menu;\n    for (const item of menu.items.slice(1)) {\n      if (item instanceof Rule) break;\n      enable ? item.enable() : item.disable();\n    }\n\n  }\n\n  /*======================================================================*/\n\n  /**\n   * Look up the saved settings from localStorage and merge them into the menu settings\n   */\n  protected mergeUserSettings() {\n    try {\n      const settings = localStorage.getItem(Menu.MENU_STORAGE);\n      if (!settings) return;\n      Object.assign(this.settings, JSON.parse(settings));\n      this.setA11y(this.settings);\n    } catch (err) {\n      console.log('MathJax localStorage error: ' + err.message);\n    }\n  }\n\n  /**\n   * Save any non-default menu settings in localStorage\n   */\n  protected saveUserSettings() {\n    const settings = {} as {[key: string]: any};\n    for (const name of Object.keys(this.settings) as (keyof MenuSettings)[]) {\n      if (this.settings[name] !== this.defaultSettings[name]) {\n        settings[name] = this.settings[name];\n      }\n    }\n    try {\n      if (Object.keys(settings).length) {\n        localStorage.setItem(Menu.MENU_STORAGE, JSON.stringify(settings));\n      } else {\n        localStorage.removeItem(Menu.MENU_STORAGE);\n      }\n    } catch (err) {\n      console.log('MathJax localStorage error: ' + err.message);\n    }\n  }\n\n  /**\n   * Merge menu settings into the a11y document options.\n   * @param {[key: string]: any} options The options.\n   */\n  protected setA11y(options: {[key: string]: any}) {\n    if (MathJax._.a11y && MathJax._.a11y.explorer) {\n      MathJax._.a11y.explorer_ts.setA11yOptions(this.document, options);\n    }\n  }\n\n  /**\n   * Get the the value of an a11y option\n   * @param {string} option   The name of the ptions to get\n   * @return {any}            The value of the option\n   */\n  protected getA11y(option: string): any {\n    if (MathJax._.a11y && MathJax._.a11y.explorer) {\n      if (this.document.options.a11y[option] !== undefined) {\n        return this.document.options.a11y[option];\n      }\n      return this.document.options.sre[option];\n    }\n  }\n\n\n  /*======================================================================*/\n\n  /**\n   * Do what is needed to apply the initial user settings\n   */\n  protected applySettings() {\n    this.setTabOrder(this.settings.inTabOrder);\n    this.document.options.enableAssistiveMml = this.settings.assistiveMml;\n    this.document.outputJax.options.scale = parseFloat(this.settings.scale);\n    if (this.settings.renderer !== this.defaultSettings.renderer) {\n      this.setRenderer(this.settings.renderer);\n    }\n  }\n\n  /**\n   * @param {string} scale   The new scaling value\n   */\n  protected setScale(scale: string) {\n    this.document.outputJax.options.scale = parseFloat(scale);\n    this.document.rerender();\n  }\n\n  /**\n   * If the jax is already on record, just use it, otherwise load the new one\n   *\n   * @param {string} jax   The name of the jax to switch to\n   */\n  protected setRenderer(jax: string) {\n    if (this.jax[jax]) {\n      this.setOutputJax(jax);\n    } else {\n      const name = jax.toLowerCase();\n      this.loadComponent('output/' + name, () => {\n        const startup = MathJax.startup;\n        if (name in startup.constructors) {\n          startup.useOutput(name, true);\n          startup.output = startup.getOutputJax();\n          this.jax[jax] = startup.output;\n          this.setOutputJax(jax);\n        }\n      });\n    }\n  }\n\n  /**\n   * Set up the new jax and link it to the document, then rerender the math\n   *\n   * @param {string} jax   The name of the jax to switch to\n   */\n  protected setOutputJax(jax: string) {\n    this.jax[jax].setAdaptor(this.document.adaptor);\n    this.document.outputJax = this.jax[jax];\n    this.rerender();\n  }\n\n  /**\n   * @param {boolean} tab   True for including math in the tab order, false for not\n   */\n  protected setTabOrder(tab: boolean) {\n    this.menu.store.inTaborder(tab);\n  }\n\n  /**\n   * @param {boolean} mml   True to output hidden Mathml, false to not\n   */\n  protected setAssistiveMml(mml: boolean) {\n    this.document.options.enableAssistiveMml = mml;\n    if (!mml || (MathJax._.a11y && MathJax._.a11y['assistive-mml'])) {\n      this.rerender();\n    } else {\n      this.loadA11y('assistive-mml');\n    }\n  }\n\n  /**\n   * @param {boolean} explore   True to enable the explorer, false to not\n   */\n  protected setExplorer(explore: boolean) {\n    this.enableExplorerItems(explore);\n    this.document.options.enableExplorer = explore;\n    if (!explore || (MathJax._.a11y && MathJax._.a11y.explorer)) {\n      this.rerender(this.settings.collapsible ? STATE.RERENDER : STATE.COMPILED);\n    } else {\n      this.loadA11y('explorer');\n    }\n  }\n\n  /**\n   * @param {boolean} collapse   True to enable collapsible math, false to not\n   */\n  protected setCollapsible(collapse: boolean) {\n    this.document.options.enableComplexity = collapse;\n    if (!collapse || (MathJax._.a11y && MathJax._.a11y.complexity)) {\n      this.rerender(STATE.COMPILED);\n    } else {\n      this.loadA11y('complexity');\n    }\n  }\n\n  /**\n   * Request the scaling value from the user and save it in the settings\n   */\n  protected scaleAllMath() {\n    const scale = (parseFloat(this.settings.scale) * 100).toFixed(1).replace(/.0$/, '');\n    const percent = prompt('Scale all mathematics (compared to surrounding text) by', scale + '%');\n    if (percent) {\n      if (percent.match(/^\\s*\\d+(\\.\\d*)?\\s*%?\\s*$/)) {\n        const scale = parseFloat(percent) / 100;\n        if (scale) {\n          this.menu.pool.lookup('scale').setValue(String(scale));\n        } else {\n          alert('The scale should not be zero');\n        }\n      } else {\n        alert('The scale should be a percentage (e.g., 120%)');\n      }\n    }\n  }\n\n  /**\n   * Reset all menu settings to the (page) defaults\n   */\n  protected resetDefaults() {\n    Menu.loading++;    // pretend we're loading, to suppress rerendering for each variable change\n    const pool = this.menu.pool;\n    const settings = this.defaultSettings;\n    for (const name of Object.keys(this.settings) as (keyof MenuSettings)[]) {\n      const variable = pool.lookup(name);\n      if (variable) {\n        variable.setValue(settings[name] as (string | boolean));\n        const item = (variable as any).items[0];\n        if (item) {\n          item.executeCallbacks_();\n        }\n      } else {\n        (this.settings as any)[name] = settings[name];\n      }\n    }\n    Menu.loading--;\n    this.rerender(STATE.COMPILED);\n  }\n\n  /*======================================================================*/\n\n  /**\n   * Check if a component is loading, and restart if it is\n   *\n   * @param {string} name        The name of the component to check if it is loading\n   */\n  public checkComponent(name: string) {\n    const promise = Menu.loadingPromises.get(name);\n    if (promise) {\n      mathjax.retryAfter(promise);\n    }\n  }\n\n  /**\n   * Attempt to load a component and perform a callback when done\n   */\n  protected loadComponent(name: string, callback: () => void) {\n    if (Menu.loadingPromises.has(name)) return;\n    const loader = MathJax.loader;\n    if (!loader) return;\n    Menu.loading++;\n    const promise = loader.load(name).then(() => {\n      Menu.loading--;\n      Menu.loadingPromises.delete(name);\n      callback();\n      if (Menu.loading === 0 && Menu._loadingPromise) {\n        Menu._loadingPromise = null;\n        Menu._loadingOK();\n      }\n    }).catch((err) => {\n      if (Menu._loadingPromise) {\n        Menu._loadingPromise = null;\n        Menu._loadingFailed(err);\n      } else {\n        console.log(err);\n      }\n    });\n    Menu.loadingPromises.set(name, promise);\n  }\n\n  /**\n   * Attempt to load an a11y component\n   *\n   * @param {string} component   The name of the a11y component to load\n   */\n  public loadA11y(component: string) {\n    const noEnrich = !STATE.ENRICHED;\n    this.loadComponent('a11y/' + component, () => {\n      const startup = MathJax.startup;\n      //\n      // Unregister the handler and get a new one (since the component\n      // will have added a handler extension), then register the new one\n      //\n      mathjax.handlers.unregister(startup.handler);\n      startup.handler = startup.getHandler();\n      mathjax.handlers.register(startup.handler);\n      //\n      // Save the old document and get a new one, attaching the\n      //   original menu (this), and transfering any math items\n      //   from the original document, then rerender with the\n      //   updated document (from the new handler)\n      //\n      const document = this.document;\n      this.document = startup.document = startup.getDocument();\n      this.document.menu = this;\n      this.document.outputJax.reset();\n      this.transferMathList(document);\n      this.document.processed = document.processed;\n      if (!Menu._loadingPromise) {\n        this.document.outputJax.reset();\n        this.rerender(component === 'complexity' || noEnrich ? STATE.COMPILED : STATE.TYPESET);\n      }\n    });\n  }\n\n\n  /**\n   * @param {MenuMathDocument} document  The original document whose list is to be transferred\n   */\n  protected transferMathList(document: MenuMathDocument) {\n    const MathItem = this.document.options.MathItem;  // This has been updated by the new handler\n    for (const item of document.math) {\n      const math = new MathItem();    // Make a new MathItem\n      Object.assign(math, item);      // Copy the old data to the new math item\n      this.document.math.push(math);  // Add it to the current document\n    }\n  }\n\n  /**\n   * @param {string} text   The text to be displayed in an Info box\n   * @returns {string}      The text with HTML specials being escaped\n   */\n  protected formatSource(text: string): string {\n    return text.trim().replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n  }\n\n  /**\n   * @param {HTMLMATHITEM} math   The MathItem to serialize as MathML\n   * @returns {string}        The serialized version of the internal MathML\n   */\n  protected toMML(math: HTMLMATHITEM): string {\n    return this.MmlVisitor.visitTree(math.root, math, {\n      texHints: this.settings.texHints,\n      semantics: (this.settings.semantics && math.inputJax.name !== 'MathML')\n    });\n  }\n\n  /*======================================================================*/\n\n  /**\n   * @param {MouseEvent|null} event   The event triggering the zoom (or null for from a menu pick)\n   * @param {string} type             The type of event occurring (click, dblclick)\n   * @param {HTMLMATHITEM} math       The MathItem triggering the event\n   */\n  protected zoom(event: MouseEvent, type: string, math: HTMLMATHITEM) {\n    if (!event || this.isZoomEvent(event, type)) {\n      this.menu.mathItem = math;\n      if (event) {\n        //\n        // The zoomBox.post() below assumes the menu is open,\n        //   so if this zoom() call is from an event (not the menu),\n        //   make sure the menu is open before posting the zoom box\n        //\n        this.menu.post(event);\n      }\n      this.zoomBox.post();\n    }\n  }\n\n  /**\n   * @param {MouseEvent} Event   The event triggering the zoom action\n   * @param {string} zoom        The type of event (click, dblclick) that occurred\n   * @returns {boolean}          True if the event is the right type and has the needed modifiers\n   */\n  protected isZoomEvent(event: MouseEvent, zoom: string): boolean {\n    return (this.settings.zoom === zoom &&\n            (!this.settings.alt   || event.altKey) &&\n            (!this.settings.ctrl  || event.ctrlKey) &&\n            (!this.settings.cmd   || event.metaKey) &&\n            (!this.settings.shift || event.shiftKey));\n  }\n\n  /**\n   * Rerender the output if we aren't in the middle of loading a new component\n   *   (in which case, we will rerender in the callback performed  after it is loaded)\n   *\n   * @param {number=} start   The state at which to start rerendering\n   */\n  protected rerender(start: number = STATE.TYPESET) {\n    this.rerenderStart = Math.min(start, this.rerenderStart);\n    if (!Menu.loading) {\n      if (this.rerenderStart <= STATE.COMPILED) {\n        this.document.reset({inputJax: []});\n      }\n      this.document.rerender(this.rerenderStart);\n      this.rerenderStart = STATE.LAST;\n    }\n  }\n\n  /**\n   * Copy the serialzied MathML to the clipboard\n   */\n  protected copyMathML() {\n    this.copyToClipboard(this.toMML(this.menu.mathItem));\n  }\n\n  /**\n   * Copy the original form to the clipboard\n   */\n  protected copyOriginal() {\n    this.copyToClipboard(this.menu.mathItem.math.trim());\n  }\n\n  /**\n   * Copy the original annotation text to the clipboard\n   */\n  public copyAnnotation() {\n    this.copyToClipboard(this.menu.annotation.trim());\n  }\n\n  /**\n   * @param {string} text   The text to be copied ot the clopboard\n   */\n  protected copyToClipboard(text: string) {\n    const input = document.createElement('textarea');\n    input.value = text;\n    input.setAttribute('readonly', '');\n    input.style.cssText = 'height: 1px; width: 1px; padding: 1px; position: absolute; left: -10px';\n    document.body.appendChild(input);\n    input.select();\n    try {\n      document.execCommand('copy');\n    } catch (error) {\n      alert('Can\\'t copy to clipboard: ' + error.message);\n    }\n    document.body.removeChild(input);\n  }\n\n  /*======================================================================*/\n\n  /**\n   * @param {HTMLMATHITEM} math   The math to attach the context menu and zoom triggers to\n   */\n  public addMenu(math: HTMLMATHITEM) {\n    const element = math.typesetRoot;\n    element.addEventListener('contextmenu', () => this.menu.mathItem = math, true);\n    element.addEventListener('keydown', () => this.menu.mathItem = math, true);\n    element.addEventListener('click', event => this.zoom(event, 'Click', math), true);\n    element.addEventListener('dblclick', event => this.zoom(event, 'DoubleClick', math), true);\n    this.menu.store.insert(element);\n  }\n\n  /**\n   * Clear the information about stored context menus\n   */\n  public clear() {\n    this.menu.store.clear();\n  }\n\n  /*======================================================================*/\n\n  /**\n   * Create JSON for a variable controlling a menu setting\n   *\n   * @param {keyof MenuSettings} name   The setting for which to make a variable\n   * @param {(T) => void} action        Optional function to perform after setting the value\n   * @returns {Object}                  The JSON for the variable\n   *\n   * @tempate T    The type of variable being defined\n   */\n  public variable<T extends (string | boolean)>(name: keyof MenuSettings, action?: (value: T) => void): Object {\n    return {\n      name: name,\n      getter: () => this.settings[name],\n      setter: (value: T) => {\n        (this.settings as any)[name] = value;\n        action && action(value);\n        this.saveUserSettings();\n      }\n    };\n  }\n\n  /**\n   * Create JSON for an a11y specific variable.\n   *\n   * @param {keyof MenuSettings} name   The setting for which to make a variable\n   * @returns {Object}                  The JSON for the variable\n   *\n   * @tempate T    The type of variable being defined\n   */\n  public a11yVar<T extends (string | boolean)>(name: keyof MenuSettings, action?: (value: T) => void): Object {\n    return {\n      name: name,\n      getter: () => this.getA11y(name),\n      setter: (value: T) => {\n        (this.settings as any)[name] = value;\n        let options: {[key: string]: any} = {};\n        options[name] = value;\n        this.setA11y(options);\n        action && action(value);\n        this.saveUserSettings();\n      }\n    };\n  }\n\n  /**\n   * Create JSON for a submenu item\n   *\n   * @param {string} id           The id for the item\n   * @param {string} content      The content for the item\n   * @param {any[]} entries       The JSON for the entries\n   * @param {boolean=} disabled   True if this item is diabled initially\n   * @returns {Object}            The JSON for the submenu item\n   */\n  public submenu(id: string, content: string, entries: any[] = [], disabled: boolean = false): Object {\n    let items = [] as Array<Object>;\n    for (const entry of entries) {\n      if (Array.isArray(entry)) {\n        items = items.concat(entry);\n      } else {\n        items.push(entry);\n      }\n    }\n    return {type: 'submenu', id, content, menu: {items}, disabled: (items.length === 0) || disabled};\n  }\n\n  /**\n   * Create JSON for a command item\n   *\n   * @param {string} id           The id for the item\n   * @param {string} content      The content for the item\n   * @param {() => void} action   The action function for the command\n   * @param {Object} other        Other values to include in the generated JSON object\n   * @returns {Object}            The JSON for the command item\n   */\n  public command(id: string, content: string, action: () => void, other: Object = {}): Object {\n    return Object.assign({type: 'command', id, content, action}, other);\n  }\n\n  /**\n   * Create JSON for a checkbox item\n   *\n   * @param {string} id           The id for the item\n   * @param {string} content      The content for the item\n   * @param {string} variable     The (pool) variable to attach to this checkbox\n   * @param {Object} other        Other values to include in the generated JSON object\n   * @returns {Object}            The JSON for the checkbox item\n   */\n  public checkbox(id: string, content: string, variable: string, other: Object = {}): Object {\n    return Object.assign({type: 'checkbox', id, content, variable}, other);\n  }\n\n  /**\n   * Create JSON for a group of connected radio buttons\n   *\n   * @param {string} variable     The (pool) variable to attach to each radio button\n   * @param {string[][]} radios   An array of [string] or [string, string], giving the id and content\n   *                                for each radio button (if only one string is given it is used for both)\n   * @returns {Object[]}          An array of JSON objects for radion buttons\n   */\n  public radioGroup(variable: string, radios: string[][]): Object[] {\n    return radios.map(def => this.radio(def[0], def[1] || def[0], variable));\n  }\n\n  /**\n   * Create JSON for a radio button item\n   *\n   * @param {string} id           The id for the item\n   * @param {string} content      The content for the item\n   * @param {string} variable     The (pool) variable to attach to this radio button\n   * @param {Object} other        Other values to include in the generated JSON object\n   * @returns {Object}            The JSON for the radio button item\n   */\n  public radio(id: string, content: string, variable: string, other: Object = {}): Object {\n    return Object.assign({type: 'radio', id, content, variable}, other);\n  }\n\n  /**\n   * Create JSON for a label item\n   *\n   * @param {string} id           The id for the item\n   * @param {string} content      The content for the item\n   * @returns {Object}            The JSON for the label item\n   */\n  public label(id: string, content: string): Object {\n    return {type: 'label', id, content};\n  }\n\n  /**\n   * Create JSON for a menu rule\n   *\n   * @returns {Object}            The JSON for the rule item\n   */\n  public rule(): Object {\n    return {type: 'rule'};\n  }\n\n  /*======================================================================*/\n\n}\n"],
  "mappings": "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",
  "names": ["exports", "KEY", "exports", "exports", "AbstractNavigatable", "event", "exports", "MenuElement", "exports", "AbstractPostable", "exports", "exports", "AbstractEntry", "exports", "MenuUtil", "exports", "AbstractItem", "event", "exports", "Submenu", "event", "exports", "AbstractMenu", "exports", "MenuStore", "event", "exports", "VariablePool", "exports", "ContextMenu", "event", "exports", "MJContextMenu", "exports", "AbstractVisitor", "exports", "MmlVisitor", "exports", "exports", "SerializedMmlVisitor", "MmlVisitor", "exports", "CloseButton", "event", "exports", "Info", "event", "exports", "SelectableInfo", "event", "exports", "Command", "exports", "Variable", "exports", "AbstractVariableItem", "exports", "Checkbox", "exports", "Combo", "event", "exports", "Label", "exports", "Radio", "exports", "Rule", "exports", "Slider", "event", "exports", "SubMenu", "exports", "SelectionMenu", "event", "exports", "SelectionBox", "i", "ParserFactory", "exports", "Parser", "exports", "CssStyles", "exports", "exports", "Axis", "exports", "Mode", "personalityProps", "Speech", "Markup", "exports", "window", "exports", "exports", "variables_js_1", "exports", "exports", "NodeType", "exports", "Font", "Embellish", "Base", "exports", "Types", "Roles", "ExtraFont", "SecondaryEnum", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "num", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "variables_js_1", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "key", "exports", "MMLTAGS", "exports", "exports", "exports", "exports", "formulas", "inference", "node", "fenced", "arg", "exports", "node", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "ActionType", "exports", "exports", "exports", "prec", "exports", "rule", "exports", "exports", "TrieNodeKind", "exports", "exports", "exports", "exports", "store", "exports", "exports", "exports", "exports", "KeyCode", "EventType", "Event", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "node", "exports", "exports", "Attribute", "exports", "exports", "right", "exports", "exports", "exports", "exports", "lcaType", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "event", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "info", "exports", "exports", "highlighter", "exports", "exports", "exports", "path", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "primaryId", "exports", "WalkerMoves", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "process", "json", "speech", "exports", "variables_js_1", "exports", "variables_js_1", "Sre", "exports", "Menu", "document", "event", "exports"]
}
