{
  "version": 3,
  "sources": ["../../../../node_modules/mathjax-full/ts/core/Tree/NodeFactory.ts", "../../../../node_modules/mathjax-full/ts/core/MmlTree/MmlNodes/mstyle.ts", "../../../../node_modules/mathjax-full/ts/core/MmlTree/MmlNodes/merror.ts", "../../../../node_modules/mathjax-full/ts/core/MmlTree/MmlNodes/mphantom.ts", "../../../../node_modules/mathjax-full/ts/core/MmlTree/MmlNodes/maligngroup.ts", "../../../../node_modules/mathjax-full/ts/core/MmlTree/MmlNodes/malignmark.ts", "../../../../node_modules/mathjax-full/ts/core/MmlTree/MmlNodes/mathchoice.ts", "../../../../node_modules/mathjax-full/ts/core/MmlTree/MML.ts", "../../../../node_modules/mathjax-full/ts/core/MmlTree/MmlFactory.ts"],
  "sourcesContent": ["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  The generic NodeFactory class for creating Node objects\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {Node, PropertyList} from './Node.js';\nimport {Factory, FactoryNodeClass, AbstractFactory} from './Factory.js';\n\n/*****************************************************************/\n/**\n * The NodeFactory interface\n *\n * @template N  The node type created by the factory\n * @template C  The class of the node being constructed (for access to static properties)\n */\nexport interface NodeFactory<N extends Node, C extends FactoryNodeClass<N>> extends Factory<N, C> {\n  /**\n   * @param {string} kind  The kind of node to create\n   * @param {PropertyList} properties  The list of initial properties for the node (if any)\n   * @param {N[]} children  The array of initial child nodes (if any)\n   * @return {N}  The newly created node of the given kind\n   */\n  create(kind: string, properties?: PropertyList, children?: N[]): N;\n}\n\n/*****************************************************************/\n/**\n * The generic NodeFactory class\n *\n * @template N  The node type created by the factory\n * @template C  The class of the node being constructed (for access to static properties)\n */\nexport abstract class AbstractNodeFactory<N extends Node, C extends FactoryNodeClass<N>> extends AbstractFactory<N, C> {\n  /**\n   * @override\n   */\n  public create(kind: string, properties: PropertyList = {}, children: N[] = []) {\n    return this.node[kind](properties, children);\n  }\n\n}\n", "/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the MmlMstyle node\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {PropertyList} from '../../Tree/Node.js';\nimport {AbstractMmlLayoutNode, AttributeList} from '../MmlNode.js';\nimport {INHERIT} from '../Attributes.js';\n\n/*****************************************************************/\n/**\n *  Implements the MmlMstyle node class (subclass of AbstractMmlLayoutNode)\n */\n\nexport class MmlMstyle extends AbstractMmlLayoutNode {\n\n  /**\n   * @override\n   */\n  public static defaults: PropertyList = {\n    ...AbstractMmlLayoutNode.defaults,\n    scriptlevel: INHERIT,\n    displaystyle: INHERIT,\n    scriptsizemultiplier: 1 / Math.sqrt(2),\n    scriptminsize: '8px',  // should be 8pt, but that is too large\n    mathbackground: INHERIT,\n    mathcolor: INHERIT,\n    dir: INHERIT,\n    infixlinebreakstyle: 'before'\n  };\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'mstyle';\n  }\n\n  /**\n   * @override\n   */\n  public get notParent() {\n    return this.childNodes[0] && this.childNodes[0].childNodes.length === 1;\n  }\n\n  /**\n   * Handle scriptlevel changes, and add mstyle attributes to the ones being inherited.\n   *\n   * @override\n   */\n  protected setChildInheritedAttributes(attributes: AttributeList, display: boolean, level: number, prime: boolean) {\n    let scriptlevel = this.attributes.getExplicit('scriptlevel');\n    if (scriptlevel != null) {\n      scriptlevel = scriptlevel.toString();\n      if (scriptlevel.match(/^\\s*[-+]/)) {\n        level += parseInt(scriptlevel);\n      } else {\n        level = parseInt(scriptlevel);\n      }\n      prime = false;  // style change resets tex prime style\n    }\n    let displaystyle = this.attributes.getExplicit('displaystyle') as boolean;\n    if (displaystyle != null) {\n      display = (displaystyle === true);\n      prime = false;  // style change resets tex prime style\n    }\n    const cramped = this.attributes.getExplicit('data-cramped') as boolean;  // manual control of tex prime style\n    if (cramped != null) {\n      prime = cramped;\n    }\n    attributes = this.addInheritedAttributes(attributes, this.attributes.getAllAttributes());\n    this.childNodes[0].setInheritedAttributes(attributes, display, level, prime);\n  }\n\n}\n", "/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the MmlMerror node\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {PropertyList} from '../../Tree/Node.js';\nimport {AbstractMmlNode, TEXCLASS} from '../MmlNode.js';\n\n/*****************************************************************/\n/**\n *  Implements the MmlMerror node class (subclass of AbstractMmlNode)\n */\n\nexport class MmlMerror extends AbstractMmlNode {\n\n  /**\n   * @override\n   */\n  public static defaults: PropertyList = {\n    ...AbstractMmlNode.defaults\n  };\n\n  /**\n   * TeX class is ORD\n   */\n  protected texclass = TEXCLASS.ORD;\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'merror';\n  }\n\n  /**\n   * <merror> gets an inferred mrow\n   * @override\n   */\n  public get arity() {\n    return -1;\n  }\n\n  /**\n   * <merror> can contain line breaks\n   * @override\n   */\n  public get linebreakContainer() {\n    return true;\n  }\n\n}\n", "/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the MmlMphantom node\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {PropertyList} from '../../Tree/Node.js';\nimport {AbstractMmlLayoutNode, TEXCLASS} from '../MmlNode.js';\n\n/*****************************************************************/\n/**\n *  Implements the MmlMphantom node class (subclass of AbstractMmlLayoutNode)\n */\n\nexport class MmlMphantom extends AbstractMmlLayoutNode {\n\n  /**\n   * @override\n   */\n  public static defaults: PropertyList = {\n    ...AbstractMmlLayoutNode.defaults\n  };\n\n  /**\n   * TeX class is ORD\n   */\n  protected texclass = TEXCLASS.ORD;\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'mphantom';\n  }\n\n}\n", "/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the MmlMaligngroup node\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {PropertyList} from '../../Tree/Node.js';\nimport {AbstractMmlLayoutNode, AttributeList} from '../MmlNode.js';\nimport {INHERIT} from '../Attributes.js';\n\n/*****************************************************************/\n/**\n *  Implements the MmlMaligngroup node class (subclass of AbstractMmlNode)\n */\n\nexport class MmlMaligngroup extends AbstractMmlLayoutNode {\n\n  /**\n   * @override\n   */\n  public static defaults: PropertyList = {\n    ...AbstractMmlLayoutNode.defaults,\n    groupalign: INHERIT\n  };\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'maligngroup';\n  }\n\n  /**\n   * <maligngroup> is space-like\n   * @override\n   */\n  public get isSpacelike() {\n    return true;\n  }\n\n  /**\n   * Children can inherit from <maligngroup>\n   * @override\n   */\n  protected setChildInheritedAttributes(attributes: AttributeList, display: boolean, level: number, prime: boolean) {\n    attributes = this.addInheritedAttributes(attributes, this.attributes.getAllAttributes());\n    super.setChildInheritedAttributes(attributes, display, level, prime);\n  }\n\n}\n", "/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the MmlMalignmark node\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {PropertyList} from '../../Tree/Node.js';\nimport {AbstractMmlNode} from '../MmlNode.js';\n\n/*****************************************************************/\n/**\n *  Implements the MmlMalignmark node class (subclass of AbstractMmlNode)\n */\n\nexport class MmlMalignmark extends AbstractMmlNode {\n\n  /**\n   * @override\n   */\n  public static defaults: PropertyList = {\n    ...AbstractMmlNode.defaults,\n    edge: 'left'\n  };\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'malignmark';\n  }\n\n  /**\n   * No children allowed\n   * @override\n   */\n  public get arity() {\n    return 0;\n  }\n\n  /**\n   * <malignmark> is space-like\n   * @override\n   */\n  public get isSpacelike() {\n    return true;\n  }\n\n}\n", "/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the MathChoice node\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {PropertyList} from '../../Tree/Node.js';\nimport {AbstractMmlBaseNode, AttributeList} from '../MmlNode.js';\n\n/*****************************************************************/\n/**\n *  Implements the MathChoice node class (subclass of AbstractMmlBaseNode)\n *\n *  This is used by TeX's \\mathchoice macro, but removes itself\n *  during the setInheritedAttributes process\n */\n\nexport class MathChoice extends AbstractMmlBaseNode {\n\n  /**\n   * @override\n   */\n  public static defaults: PropertyList = {\n    ...AbstractMmlBaseNode.defaults\n  };\n\n  /**\n   *  @override\n   */\n  public get kind() {\n    return 'MathChoice';\n  }\n\n  /**\n   * 4 children (display, text, script, and scriptscript styles)\n   * @override\n   */\n  public get arity() {\n    return 4;\n  }\n\n  /**\n   * This element is not considered a MathML container\n   * @override\n   */\n  public get notParent() {\n    return true;\n  }\n\n  /**\n   * Replace the MathChoice node with the selected on based on the displaystyle and scriptlevel settings\n   * (so the MathChoice never ends up in a finished MmlNode tree)\n   *\n   * @override\n   */\n  public setInheritedAttributes(attributes: AttributeList, display: boolean, level: number, prime: boolean) {\n    const selection = (display ? 0 : Math.max(0, Math.min(level, 2)) + 1);\n    const child = this.childNodes[selection] || this.factory.create('mrow');\n    this.parent.replaceChild(child, this);\n    child.setInheritedAttributes(attributes, display, level, prime);\n  }\n\n}\n", "/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  An object listing all the MathML node types\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {MmlNodeClass, TextNode, XMLNode} from './MmlNode.js';\n\nimport {MmlMath}      from './MmlNodes/math.js';\n\nimport {MmlMi}        from './MmlNodes/mi.js';\nimport {MmlMn}        from './MmlNodes/mn.js';\nimport {MmlMo}        from './MmlNodes/mo.js';\nimport {MmlMtext}     from './MmlNodes/mtext.js';\nimport {MmlMspace}    from './MmlNodes/mspace.js';\nimport {MmlMs}        from './MmlNodes/ms.js';\n\nimport {MmlMrow, MmlInferredMrow} from './MmlNodes/mrow.js';\nimport {MmlMfrac}     from './MmlNodes/mfrac.js';\nimport {MmlMsqrt}     from './MmlNodes/msqrt.js';\nimport {MmlMroot}     from './MmlNodes/mroot.js';\nimport {MmlMstyle}    from './MmlNodes/mstyle.js';\nimport {MmlMerror}    from './MmlNodes/merror.js';\nimport {MmlMpadded}   from './MmlNodes/mpadded.js';\nimport {MmlMphantom}  from './MmlNodes/mphantom.js';\nimport {MmlMfenced}   from './MmlNodes/mfenced.js';\nimport {MmlMenclose}  from './MmlNodes/menclose.js';\n\nimport {MmlMaction}   from './MmlNodes/maction.js';\n\nimport {MmlMsubsup, MmlMsub, MmlMsup}       from './MmlNodes/msubsup.js';\nimport {MmlMunderover, MmlMunder, MmlMover} from './MmlNodes/munderover.js';\nimport {MmlMmultiscripts, MmlMprescripts, MmlNone} from './MmlNodes/mmultiscripts.js';\n\nimport {MmlMtable}      from './MmlNodes/mtable.js';\nimport {MmlMtr, MmlMlabeledtr} from './MmlNodes/mtr.js';\nimport {MmlMtd}         from './MmlNodes/mtd.js';\nimport {MmlMaligngroup} from './MmlNodes/maligngroup.js';\nimport {MmlMalignmark}  from './MmlNodes/malignmark.js';\n\nimport {MmlMglyph}      from './MmlNodes/mglyph.js';\n\nimport {MmlSemantics, MmlAnnotation, MmlAnnotationXML} from './MmlNodes/semantics.js';\n\nimport {TeXAtom} from './MmlNodes/TeXAtom.js';\nimport {MathChoice} from './MmlNodes/mathchoice.js';\n\n/************************************************************************/\n/**\n *  This object collects all the MathML node types together so that\n *  they can be used to seed an MmlNodeFactory.  One could copy this\n *  object to override existing classes with subclasses, or to add new\n *  classes as necessary.\n */\n\nexport let MML: {[kind: string]: MmlNodeClass} = {\n  [MmlMath.prototype.kind]: MmlMath,\n\n  [MmlMi.prototype.kind]: MmlMi,\n  [MmlMn.prototype.kind]: MmlMn,\n  [MmlMo.prototype.kind]: MmlMo,\n  [MmlMtext.prototype.kind]: MmlMtext,\n  [MmlMspace.prototype.kind]: MmlMspace,\n  [MmlMs.prototype.kind]: MmlMs,\n\n  [MmlMrow.prototype.kind]: MmlMrow,\n  [MmlInferredMrow.prototype.kind]: MmlInferredMrow,\n  [MmlMfrac.prototype.kind]: MmlMfrac,\n  [MmlMsqrt.prototype.kind]: MmlMsqrt,\n  [MmlMroot.prototype.kind]: MmlMroot,\n  [MmlMstyle.prototype.kind]: MmlMstyle,\n  [MmlMerror.prototype.kind]: MmlMerror,\n  [MmlMpadded.prototype.kind]: MmlMpadded,\n  [MmlMphantom.prototype.kind]: MmlMphantom,\n  [MmlMfenced.prototype.kind]: MmlMfenced,\n  [MmlMenclose.prototype.kind]: MmlMenclose,\n\n  [MmlMaction.prototype.kind]: MmlMaction,\n\n  [MmlMsub.prototype.kind]: MmlMsub,\n  [MmlMsup.prototype.kind]: MmlMsup,\n  [MmlMsubsup.prototype.kind]: MmlMsubsup,\n  [MmlMunder.prototype.kind]: MmlMunder,\n  [MmlMover.prototype.kind]: MmlMover,\n  [MmlMunderover.prototype.kind]: MmlMunderover,\n  [MmlMmultiscripts.prototype.kind]: MmlMmultiscripts,\n  [MmlMprescripts.prototype.kind]: MmlMprescripts,\n  [MmlNone.prototype.kind]: MmlNone,\n\n  [MmlMtable.prototype.kind]: MmlMtable,\n  [MmlMlabeledtr.prototype.kind]: MmlMlabeledtr,\n  [MmlMtr.prototype.kind]: MmlMtr,\n  [MmlMtd.prototype.kind]: MmlMtd,\n  [MmlMaligngroup.prototype.kind]: MmlMaligngroup,\n  [MmlMalignmark.prototype.kind]: MmlMalignmark,\n\n  [MmlMglyph.prototype.kind]: MmlMglyph,\n\n  [MmlSemantics.prototype.kind]: MmlSemantics,\n  [MmlAnnotation.prototype.kind]: MmlAnnotation,\n  [MmlAnnotationXML.prototype.kind]: MmlAnnotationXML,\n\n  [TeXAtom.prototype.kind]: TeXAtom,\n  [MathChoice.prototype.kind]: MathChoice,\n\n  [TextNode.prototype.kind]: TextNode,\n  [XMLNode.prototype.kind]: XMLNode\n};\n", "/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the MmlFactory to create Mml Nodes\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {AbstractNodeFactory} from '../Tree/NodeFactory.js';\nimport {MmlNode, MmlNodeClass} from './MmlNode.js';\nimport {MML} from './MML.js';\n\n/*****************************************************************/\n/**\n *  Implements the MmlFactory (subclass of NodeFactory)\n */\n\nexport class MmlFactory extends AbstractNodeFactory<MmlNode, MmlNodeClass> {\n\n  /**\n   * The default node-creation functions\n   */\n  public static defaultNodes = MML;\n\n  /**\n   * @return {Object}  The list of node-creation functions (similar to the\n   *                   MML object from MathJax v2).\n   */\n  get MML(): Object {\n    return this.node;\n  }\n\n}\n"],
  "mappings": "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",
  "names": ["AbstractNodeFactory", "MmlMstyle", "MmlMerror", "MmlMphantom", "MmlMaligngroup", "MmlMalignmark", "MathChoice", "MmlFactory"]
}
